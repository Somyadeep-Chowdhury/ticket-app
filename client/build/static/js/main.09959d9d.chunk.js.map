{"version":3,"sources":["actions/index.js","constants/PageActionTypes.js","reducers/user.js","reducers/page.js","reducers/index.js","images/IBM_white.png","components/Login.js","components/CreateIncident.js","components/Color.js","components/WorkingDays.js","components/Tat.js","components/Allincidents.js","components/Issue.js","components/Profiles.js","images/ibm.png","components/Footer.js","components/Addissue.js","components/Upload.js","components/IdleModal.js","components/Notification.js","components/PopUpNotification.js","components/EmailPopUp.js","components/AllNotification.js","components/ActionLog.js","components/Dashboard.js","components/Header.js","components/ReviewTicket.js","components/SimpleBot.js","App.js","serviceWorker.js","store/index.js","index.js","constants/LoginActionTypes.js"],"names":["setLoginPending","isLoginPending","type","loginTypes","payload","setLoginSuccess","data","setLoginError","isLoginError","login","email","password","dispatch","password_encode","Buffer","toString","axios","get","serverUrl","then","response","status","isAuthenticated","userEmail","checkUser","message","catch","error","post","userInfo","empId","username","role","getAllIssues","pageTypes","allIssues","updateIssue","reply","updateData","response_data","raiseIssue","Details","mailToUser","mailToSME","err","editTicket","editResponse","withdrawTicket","withdrawResponse","getUpdatedRecord","updateRecord","getAllUsers","allUsers","addUser","userRes","updateUser","updateuserRes","deleteUser","deleteRes","trasferTicket","transferTicket","getAllIssueTypes","issueType","addIssue","addIssueData","deleteIssue","userMail","replyMail","withdrawTicketMail","withdrawMail","uploadExcel","userData","excelData","notificationMail","getUsers","ampUsers","uploadeSyncExcel","eSyncData","eSyncexcelData","postNotification","getPopNotification","getAllNotification","allNotifications","changeMenu","menu","fetchTicketByNumber","ticketNumber","ticketStatus","length","filter","x","TICKET_NO","slackNotification","INITIAL_STATE","CREATE_ISSUE","ALL_ISSUES","UPDATE_REQUEST","ALL_UPDATED_RECORD","ALL_USERS","ADD_USER","DELETE_USER","TICKET_TRANSFER","GET_ALLISSUETYPES","ADD_ISSUE","DELETE_ISSUE","EDIT_TICKET","WITHDRAW_TICKET","UPDATE_USER","MAIL_TO_USER","MAIL_TO_SME","REPLY_MAIL","WITHDRAW_TICKET_MAIL","UPLOAD","NOTIFICATION_MAIL","AMP_USERS","UPLOAD_ESYNC","VERIFY_ISSUE","GET_ALL_NOTIFICATION","CHANGE_MENU","FETCH_TICKET_DETAILS","initialState","user_detail","isLoginSuccess","getAccountData","getNames","Success","initialPageState","result","formDate","updateResult","issueTypes","SMEMail","verify","allNotification","menuData","ticketRecord","rootReducer","combineReducers","user","state","action","SET_LOGIN_PENDING","SET_LOGIN_SUCCESS","user_details","SET_LOGIN_ERROR","LOGOUT","page","notification","undefined","Login","passwords","setTimeout","setState","e","preventDefault","this","iconColor","includes","doLogin","props","actions","className","src","ibm","alt","onSubmit","validate","bind","htmlFor","id","aria-describedby","onChange","target","value","Snackbar","anchorOrigin","vertical","horizontal","open","data-dismiss","rel","onClick","handleContact","data-toggle","data-target","to","pathname","Component","connect","bindActionCreators","Transition","React","forwardRef","ref","Slide","direction","CreateIncident","name","createdDate","description","practitioner","recordId","flag","radio","issuetype","ccomments","spinnerFlag","category","sections","section","types","createFor","ticketType","issueval","types_of_ticket","severity","verifyMessage","sharedInfo","handleReset","handleSubmit","handleComment","min","random","Math","floor","dt","Date","date","getDate","month","getMonth","hour","getHours","mins","getMinutes","incidentObj","Object","assign","replace","getFullYear","loggedinUser","loggedinEmail","Reset","show","handleSubcategory","ttype","issue","forEach","opt","toLowerCase","prevProps","sec","a","ISSUE_CATEGORY","msg","checked","readOnly","placeholder","disabled","handleChangeType","map","rows","component","Link","CircularProgress","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","color","withRouter","Color","index","change","colors","backgroundColor","white","green","yellow","red","orange","event","style","fontWeight","WorkingDays","startDate","endDate","key","s","diffDays","weeksBetween","getDay","Tat","text","columns","label","options","sort","customBodyRender","tableMeta","updateValue","rowIndex","columnIndex","Allincidents","buttons","preventionplan","issueimpact","ownership","owner","view_response","issueList","tat","newdate","newtat","responseflag","btnval","userResponse","close_tat","close_date","title","internalComments","transferTo","justification","userList","person","issueTagging","resDate","wipCount","openCount","closedCount","handleClose","handleSend","finaldate","dts","dat","months","actualdt","today","obj","current_date","update","stagename","handleDateChangeDate","handleChangeTATDate","createDt","ddt","cdt","substring","handleTransfer","handlePerson","details","b","CREATED_DATE","STATUS","TAT","CLOSE_DATE","tatdate","i","RESPONSE_DATE","arr","ROLE","push","prop","responsive","selectableRows","onRowClick","_","dataIndex","selected_data","NAME","PRACTIONER","DESCRIPTION","SEVERITY","ISSUE_TYPE","CATEGORY","SECTION","SHARED_TICKET","TICKET_TYPE","OWNER","textLabels","body","noMatch","toolTip","columnHeaderTooltip","column","pagination","next","previous","rowsPerPage","displayRows","toolbar","search","downloadCsv","print","viewColumns","filterTable","all","reset","titleAria","selectedRows","delete","deleteAria","parseInt","Modal","onHide","dialogClassName","size","Header","borderBottom","closeButton","Title","Body","collapasehref","collapaseid","aria-expanded","aria-controls","STAGE_NAME","data-parent","RESPONSE","split","ACTUAL_CLOSE_DATE","ACTUAL_TAT","TextField","inputProps","toISOString","slice","InputLabelProps","shrink","EMP_EMAIL","otherPerson","Footer","Issue","clientComments","impact","homeloc","Pin","ibmComments","location","building","desk","starttime","endtime","accountreporting","worktype","impacts","mainspinnerFlag","openIssues","planned_close_date","handleReply","planned_tat","handleEdit","issueTyp","ss","handleWithdraw","CREATED_FOR","ACTION","PLAN","roles","geo","Access","UID","categoryType","array","geography","handleAdduser","handleAdd","check","getUserName","handleRole","handleUpdate","checkForUpdate","y","EMP_ID","EMP_NAME","join","final","n","sect","customToolbar","Tooltip","IconButton","console","log","subCat","onRowsDelete","rowsDeleted","lenght","Select","multiple","input","Input","disableUnderline","renderValue","selected","MenuItem","Checkbox","indexOf","ListItemText","primary","FooterPage","Addissue","newCategory","newIssue","prevIssue","prevaddCategory","prevCategory","existCategory","allprevIssue","updateCategory","existsubCategory","newsubCategory","newticketType","existticketType","ticket_type","handleSubCategory","val","curdOperations","cat","sub_cat","new_sub_cat","updateIssues","updateObj","new_ticket_type","subCategory","handleDelete","Delete","prevState","Upload","selectedFile","selectedeSyncFile","onChangeHandler","files","loaded","onClickHandler","f","reader","FileReader","readedData","XLSX","wsname","SheetNames","ws","Sheets","dataParse","sheet_to_row_object_array","defval","onload","readAsBinaryString","accept","AllActions","IdleTimeOutModal","showModal","handleLogout","remainingTime","variant","Reason","audience","Notification","reason","errorMsg","propsSec","audienceArr","emailids","sendAs","fileLoading","fetchRoleUsers","users","u","self","fetchCategory","issues","d","SubCategory","subcat","sendMail","mailObj","inputRef","current","handleAudience","aud","onFileChange","values","file","convertFileToBase64","base64","filename","path","cb","readAsDataURL","createRef","PopUpNotification","start","end","displayStart","displayEnd","saveInfo","handleInputDate","locale","showTimeSelect","timeFormat","timeIntervals","dateFormat","minDate","EmailPopUp","AllNotification","tableData","download","filterType","dateTime","DATE_TIME","GEOGRAPHY","issueCategory","reasons","REASONS","USER","useStyles","makeStyles","theme","container","display","flexWrap","textField","margin","spacing","width","button","progress","errorInput","fontSize","textAlign","ActionLog","classes","useState","fromDate","setfromDate","toDate","settoDate","loading","setloading","errorMessage","seterrorMessage","userDetails","useSelector","Grid","justify","alignItems","item","xs","items","reverse","replacer","header","keys","csv","row","fieldName","JSON","stringify","unshift","downloadLink","document","createElement","blob","Blob","url","URL","createObjectURL","href","appendChild","click","removeChild","Dashboard","height","frameBorder","allowFullScreen","drawerWidth","menusOptions","icon","TechOptions","SadminOptions","route","tabs","sub","SuserOptions","AdminOptions","handleDrawerOpen","handleDrawerClose","handleMenu","menus","expandedPanel","sub_tab","tab","handleExpansionPanelChange","panel","isExpanded","selectedItem","handleMenus","subTabChange","timeout","userLoggedIn","isTimedOut","idleTimer","onAction","_onAction","onActive","_onActive","onIdle","_onIdle","_handleClose","window","reload","root","CssBaseline","AppBar","position","clsx","appBar","appBarShift","Toolbar","aria-label","edge","menuButton","hide","Typography","noWrap","appBar1","appBarShift1","Drawer","drawer","drawerOpen","drawerClose","paper","Divider","List","ListItem","ListItemIcon","ExpansionPanel","expanded","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","el","element","debounce","Profiles","withStyles","zIndex","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","marginTop","marginRight","flexShrink","whiteSpace","overflowX","breakpoints","up","justifyContent","padding","mixins","content","flexGrow","withTheme","ReviewTicket","hasOwnProperty","defaultProps","steps","SimpleBot","chatbotKey","handleEnd","headerTitle","floating","trigger","validator","isNaN","asMessage","delay","App","exact","render","Boolean","history","createBrowserHistory","store","createStore","compose","applyMiddleware","ReduxThunk","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+HAAA,ohDAMaA,EAAkB,SAAAC,GAAc,MAAK,CAChDC,KAAMC,IACNC,QAAS,CAAEH,oBAGAI,EAAkB,SAAAC,GAAI,MAAK,CACtCJ,KAAMC,IACNC,QAAS,CAAEE,UAGAC,EAAgB,SAAAC,GAAY,MAAK,CAC5CN,KAAMC,IACNC,QAAS,CAAEI,kBAMN,SAASC,EAAMC,EAAOC,GAC3B,OAAO,SAACC,GACNA,EAASZ,GAAgB,IACzB,IAAIa,EAAkB,IAAIC,EAAOH,GAAUI,SAAS,UACpDC,IAAMC,IAAIC,gBAA8BR,EAAQ,SAAWG,GACxDM,MAAK,SAAAC,GACoB,MAApBA,EAASC,OACND,EAASd,KAAKgB,iBAERF,EAASd,KAAKgB,iBACvBF,EAASd,KAAKiB,UAAYb,EAC1BE,EAASY,EAAUJ,EAASd,QAH5BM,EAASL,EAAca,EAASd,KAAKmB,UAQvCb,EAASL,EAAc,uCAG1BmB,OAAM,SAAAC,GACLf,EAASL,EAAc,yCAMxB,SAASiB,EAAUlB,GACxB,OAAQ,SAAAM,GACNI,IAAMY,KAAKV,oBAAiC,CAAE,OAAUZ,EAAKiB,YAC1DJ,MAAK,SAACC,GACL,IAAIS,EAAWT,EAASd,KACxBuB,EAASC,MAAQxB,EAAKwB,MACtBD,EAASE,SAAWzB,EAAKyB,SACzBF,EAASN,UAAYjB,EAAKiB,UAC1BM,EAASG,KAAOZ,EAASd,KAAK0B,KAC1BZ,EAASd,KAAKgB,iBAAuC,MAApBF,EAASC,OAC5CT,EAASP,EAAgBwB,IAGzBjB,EAASL,EAAca,EAASd,KAAKmB,aAIxCC,OAAM,SAAAC,GACLf,EAASL,EAAcoB,QAKxB,SAASM,EAAa3B,GAC3B,OAAQ,SAAAM,GACNI,IAAMY,KAAKV,uBAAoCZ,GAC5Ca,MAAK,SAACC,GAEmB,MAApBA,EAASC,OACXT,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CACP+B,UAAWf,EAASd,QAKxBM,EAASL,EAAca,EAASd,KAAKmB,aAGxCC,OAAM,SAAAC,GACLf,EAASL,EAAcoB,QAOxB,SAASS,EAAYC,GAC1B,OAAO,SAAUzB,GACfI,IAAMY,KAAKV,mBAAgCmB,GACxClB,MAAK,SAACmB,GACqB,MAAtBA,EAAWjB,QACbT,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CACPmC,cAAeD,KAGnB1B,EAASqB,EAAaI,KAGtBzB,EAASL,EAAc+B,EAAWhC,KAAKmB,aAI1CC,OAAM,SAAAC,GACLf,EAASL,EAAcoB,QAMxB,SAASa,EAAWlC,GACzB,OAAQ,SAAAM,GACNI,IAAMY,KAAKV,yBAAsCZ,GAC9Ca,MAAK,SAACC,GAEmB,MAApBA,EAASC,QAA4C,0BAA1BD,EAASd,KAAKmB,SAC3Cb,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CACPqC,QAASrB,EAASd,KAAKA,QAG3BM,EAAS8B,EAAWpC,IACpBM,EAAS+B,EAAUrC,MAGnBM,EAASL,EAAca,EAASd,KAAKmB,UACrCb,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CACPqC,QAAS,UAKdf,OAAM,SAAUkB,GACjBhC,EAASL,EAAc,qCACvBK,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CACPqC,QAAS,UAQd,SAASI,EAAWvC,GACzB,OAAQ,SAAAM,GACNI,IAAMY,KAAKV,uBAAoCZ,GAC5Ca,MAAK,SAACC,GACmB,MAApBA,EAASC,QACXT,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CACP0C,aAAc1B,KAGlBR,EAASqB,EAAa3B,KAGtBM,EAASL,EAAca,EAASd,KAAKmB,cAQxC,SAASsB,EAAezC,GAC7B,OAAQ,SAAAM,GACNI,IAAMY,KAAKV,yBAAsCZ,GAC9Ca,MAAK,SAACC,GACmB,MAApBA,EAASC,QACXT,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CACP4C,iBAAkB5B,KAGtBR,EAASqB,EAAa3B,KAGtBM,EAASL,EAAca,EAASd,KAAKmB,cAQxC,SAASwB,EAAiB3C,GAC/B,OAAQ,SAAAM,GACNI,IAAMY,KAAKV,0BAAuCZ,GAC/Ca,MAAK,SAACC,GAEmB,MAApBA,EAASC,OACXT,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CACP8C,aAAc9B,EAASd,KAAKA,QAKhCM,EAASL,EAAca,EAASd,KAAKmB,aAGxCC,OAAM,SAAAC,GACLf,EAASL,EAAcoB,QAKxB,SAASwB,IACd,OAAQ,SAAAvC,GACNI,IAAMY,KAAKV,uBACRC,MAAK,SAACC,GAEmB,MAApBA,EAASC,OACXT,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CACPgD,SAAUhC,EAASd,KAAKA,QAK5BM,EAASL,EAAca,EAASd,KAAKmB,aAGxCC,OAAM,SAAAC,GACLf,EAASL,EAAcoB,QAMxB,SAAS0B,EAAQ/C,GACtB,OAAQ,SAAAM,GACNI,IAAMY,KAAKV,kBAA+BZ,GACvCa,MAAK,SAACC,GACmB,MAApBA,EAASC,QACXT,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CACPkD,QAASlC,KAGbR,EAASuC,MAGTvC,EAASL,EAAca,EAASd,KAAKmB,cAOxC,SAAS8B,EAAWjD,GACzB,OAAQ,SAAAM,GACNI,IAAMY,KAAKV,qBAAkCZ,GAC1Ca,MAAK,SAACC,GACmB,MAApBA,EAASC,QACXT,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CACPoD,cAAepC,KAGnBR,EAASuC,MAGTvC,EAASL,EAAca,EAASd,KAAKmB,cAQxC,SAASgC,EAAWnD,GACzB,OAAQ,SAAAM,GACNI,IAAMY,KAAKV,qBAAkCZ,GAC1Ca,MAAK,SAACC,GACmB,MAApBA,EAASC,QACXT,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CACPsD,UAAWtC,KAGfR,EAASuC,MAGTvC,EAASL,EAAca,EAASd,KAAKmB,cAQxC,SAASkC,EAAcrD,GAC5B,OAAQ,SAAAM,GACNI,IAAMY,KAAKV,yBAAsCZ,GAC9Ca,MAAK,SAACC,GACmB,MAApBA,EAASC,QACXT,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CACPwD,eAAgBxC,KAGpBR,EAASqB,EAAa3B,KAGtBM,EAASL,EAAca,EAASd,KAAKmB,cASxC,SAASoC,IACd,OAAQ,SAAAjD,GACNI,IAAMC,IAAIC,4BACPC,MAAK,SAACC,GAEmB,MAApBA,EAASC,OACXT,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CACP0D,UAAW1C,EAASd,KAAKA,QAM7BM,EAASL,EAAca,EAASd,KAAKmB,cAQxC,SAASsC,EAASzD,GACvB,OAAQ,SAAAM,GACNI,IAAMY,KAAKV,mBAAgCZ,GACxCa,MAAK,SAACC,GACmB,MAApBA,EAASC,QACXT,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CACP4D,aAAc5C,KAGlBR,EAASiD,MAGTjD,EAASL,EAAca,EAASd,KAAKmB,cAOxC,SAASwC,EAAY3D,GAC1B,OAAQ,SAAAM,GACNI,IAAMY,KAAKV,sBAAmCZ,GAC3Ca,MAAK,SAACC,GACmB,MAApBA,EAASC,QACXT,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CACP6D,YAAa7C,KAGjBR,EAASiD,MAGTjD,EAASL,EAAca,EAASd,KAAKmB,cAQxC,SAASiB,EAAWpC,GACzB,OAAQ,SAAAM,GACNI,IAAMY,KAAKV,qBAAkCZ,GAC1Ca,MAAK,SAACC,GACmB,MAApBA,EAASC,OACXT,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CACP8D,SAAU9C,KAKdR,EAASL,EAAca,EAASd,KAAKmB,cAMxC,SAASkB,EAAUrC,GACxB,OAAQ,SAAAM,GACNI,IAAMY,KAAKV,oBAAiCZ,GACzCa,MAAK,SAACC,OAYJM,OAAM,SAAUkB,QAKlB,SAASuB,EAAU7D,GACxB,OAAQ,SAAAM,GACNI,IAAMY,KAAKV,oBAAiCZ,GACzCa,MAAK,SAACC,GACmB,MAApBA,EAASC,OACXT,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CACP+D,UAAW/C,KAKfR,EAASL,EAAca,EAASd,KAAKmB,cAMxC,SAAS2C,EAAmB9D,GACjC,OAAQ,SAAAM,GACNI,IAAMY,KAAKV,6BAA0CZ,GAClDa,MAAK,SAACC,GACmB,MAApBA,EAASC,OACXT,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CACPiE,aAAcjD,KAKlBR,EAASL,EAAca,EAASd,KAAKmB,cAQxC,SAAS6C,EAAYhE,EAAMiE,GAChC,OAAQ,SAAA3D,GACNI,IAAMY,KAAKV,sBAAmC,CAACZ,OAAMiE,aAClDpD,MAAK,SAACC,GACmB,MAApBA,EAASC,OACXT,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CACPoE,UAAWpD,KAKfR,EAASL,EAAca,EAASd,KAAKmB,aAGxCC,OAAM,SAAAC,GACLf,EAASL,EAAcoB,QAMxB,SAAS8C,EAAiBnE,GAC/B,OAAQ,SAAAM,GACNI,IAAMY,KAAKV,2BAAwC,CAAEZ,SAClDa,MAAK,SAACC,GAEmB,MAApBA,EAASC,OACXT,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CACPqE,iBAAkBrD,KAKtBR,EAASL,EAAca,EAASd,KAAKmB,cAKxC,SAASiD,EAASpE,GACvB,OAAQ,SAAAM,GACNI,IAAMY,KAAKV,mBAAgC,CAAEZ,SAC1Ca,MAAK,SAACC,GACmB,MAApBA,EAASC,OACXT,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CACPuE,SAAUvD,EAASd,KAAKA,QAK5BM,EAASL,EAAca,EAASd,KAAKmB,cAMxC,SAASmD,EAAiBC,GAC/B,OAAQ,SAAAjE,GACNI,IAAMY,KAAKV,2BAAwC2D,GAChD1D,MAAK,SAACC,GACmB,MAApBA,EAASC,OACXT,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CACP0E,eAAgB1D,KAKpBR,EAASL,EAAca,EAASd,KAAKmB,aAGxCC,OAAM,SAAAC,GACLf,EAASL,EAAcoB,QAKxB,SAASoD,EAAiBzE,GAC/B,OAAQ,SAAAM,GACNI,IAAMY,KAAKV,2BAAwC,CAAEZ,SAClDa,MAAK,SAACC,GAEmB,MAApBA,EAASC,OACXT,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CACPqE,iBAAkBrD,KAKtBR,EAASL,EAAca,EAASd,KAAKmB,aAEtCC,OAAM,SAAAkB,GACPhC,EAASL,EAAcqC,EAAInB,cAK5B,SAASuD,EAAmB1E,GACjC,OAAQ,SAAAM,GACNI,IAAMY,KAAKV,6BAA0C,CAAEZ,SACpDa,MAAK,SAACC,GAEmB,MAApBA,EAASC,OACXT,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CACPE,KAAMc,EAASd,QAKnBM,EAASL,EAAca,EAASd,KAAKmB,aAEtCC,OAAM,SAAAkB,GACPhC,EAASL,EAAcqC,EAAInB,cAK5B,SAASwD,IACd,OAAQ,SAAArE,GACNI,IAAMC,IAAIC,2BACPC,MAAK,SAACC,GAEmB,MAApBA,EAASC,OACXT,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CACP8E,iBAAkB9D,EAASd,KAAKA,QAKpCM,EAASL,EAAca,EAASd,KAAKmB,cAMxC,IAAM0D,EAAa,SAACC,GACzB,OAAO,SAACxE,GACNA,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CAAEgF,YAIJC,EAAsB,SAACC,EAAchF,GAChD,OAAO,SAACM,GACN,IAAI2E,EAAejF,EAAKkF,OAAS,GAAsB,OAAjBF,EAAwBhF,EAAKmF,QAAO,SAAAC,GAAC,OAAIA,EAAEC,YAAcL,KAAgB,GAC/G1E,EAAS,CACPV,KAAMgC,IACN9B,QAASmF,MAKR,SAASK,EAAkBtF,GAChC,OAAQ,SAAAM,GACNI,IAAMY,KAAKV,4BAAyC,CAAEZ,SACnDa,MAAK,SAACC,GAEmB,MAApBA,EAASC,OACXT,EAAS,CACPV,KAAMgC,IACN9B,QAAS,CACPqE,iBAAkBrD,KAKtBR,EAASL,EAAca,EAASd,KAAKmB,gB,0DCvpB/C,s5BAAO,IAAMoE,EAAgB,gBAChBC,EAAe,eACfC,EAAa,aACbC,EAAiB,iBACjBC,EAAqB,qBACrBC,EAAY,YACZC,EAAW,WACXC,EAAc,cACdC,EAAkB,kBAClBC,EAAoB,oBACpBC,EAAY,YACZC,EAAe,eACfC,EAAc,cACdC,EAAkB,kBAClBC,EAAc,cACdC,EAAe,eACfC,EAAc,cACdC,EAAa,aACbC,EAAuB,uBACvBC,EAAS,SACTC,EAAoB,oBACpBC,EAAY,YACZC,EAAe,eACfC,EAAe,eACfC,EAAuB,uBACvBC,EAAc,cACdC,EAAuB,wB,+bCzB9BC,EAAe,CACnBC,YAAa,GACbC,gBAAgB,EAChBzH,gBAAgB,EAChBO,aAAc,KACdmH,eAAgB,GAChBnD,UAAW,GACX7C,MAAO,GACPiG,SAAU,GACVC,SAAS,G,QCLLC,EAAmB,CACrBC,OAAQ,GACRC,SAAU,GACVC,aAAc,GACd/E,aAAc,GACdI,QAAS,GACTnB,UAAW,GACXiB,SAAU,GACVQ,eAAgB,GAChBsE,WAAY,GACZlE,aAAc,GACdC,YAAa,GACbnB,aAAc,GACdE,iBAAkB,GAClBQ,cAAe,GACfU,SAAU,GACViE,QAAS,GACThE,UAAW,GACXE,aAAc,GACdM,SAAU,GACVyD,OAAQ,GACRC,gBAAiB,GACjBC,SAAU,GACVC,aAAc,ICpBHC,EALKC,YAAgB,CAClCC,KFSkB,WAAmC,IAAlCC,EAAiC,uDAAzBnB,EAAcoB,EAAW,uCAEpD,OAAQA,EAAO1I,MACb,KAAK2I,IACH,OAAO,2BACFF,GADL,IAEE1I,gBAAgB,EAChBO,aAAc,OAElB,KAAKsI,IACH,OAAO,2BACFH,GADL,IAEEjB,gBAAgB,EAChBG,SAAS,EACTkB,aAAcH,EAAOxI,QAAQE,KAC7BE,aAAc,KACdP,gBAAgB,IAEpB,KAAK+I,IACH,OAAO,2BACFL,GADL,IAEE1I,gBAAgB,EAChBO,aAAcoI,EAAOxI,QAAQI,eAEjC,KAAKyI,IACH,MAAO,CACLN,SAIJ,QAEE,OAAOA,IExCXO,KD0BkB,WAAuC,IAAtCP,EAAqC,uDAA7Bb,EAAkBc,EAAW,uCACtD,OAAQA,EAAO1I,MACX,KAAK4F,IACD,OAAO,2BAAK6C,GAAZ,IAAmBZ,OAAQa,EAAOxI,QAAQqC,UAE9C,KAAKsD,IACD,OAAO,2BAAK4C,GAAZ,IAAmBxG,UAAWyG,EAAOxI,QAAQ+B,UAAU7B,OAE3D,KAAK0F,IACD,OAAO,2BAAK2C,GAAZ,IAAmBV,aAAcW,EAAOxI,QAAQmC,gBAEpD,KAAK0D,IACD,OAAO,2BAAK0C,GAAZ,IAAmBzF,aAAc0F,EAAOxI,QAAQ8C,eAEpD,KAAKgD,IACD,OAAO,2BAAKyC,GAAZ,IAAmBvF,SAAUwF,EAAOxI,QAAQgD,WAEhD,KAAK+C,IACD,OAAO,2BAAKwC,GAAZ,IAAmBrF,QAASsF,EAAOxI,QAAQkD,UAE/C,KAAK8C,IACD,OAAO,2BAAKuC,GAAZ,IAAmBjF,UAAWkF,EAAOxI,QAAQsD,YAEjD,KAAK2C,IACD,OAAO,2BAAKsC,GAAZ,IAAmB/E,eAAgBgF,EAAOxI,QAAQwD,iBAEtD,KAAK0C,IACD,OAAO,2BAAKqC,GAAZ,IAAmBT,WAAYU,EAAOxI,QAAQ0D,YAElD,KAAKyC,IACD,OAAO,2BAAKoC,GAAZ,IAAmB3E,aAAc4E,EAAOxI,QAAQ4D,eAEpD,KAAKwC,IACD,OAAO,2BAAKmC,GAAZ,IAAmB1E,YAAa2E,EAAOxI,QAAQ6D,cAEnD,KAAKwC,IACD,OAAO,2BAAKkC,GAAZ,IAAmB7F,aAAc8F,EAAOxI,QAAQ0C,eAEpD,KAAK4D,IACD,OAAO,2BAAKiC,GAAZ,IAAmB3F,iBAAkB4F,EAAOxI,QAAQ4C,mBAExD,KAAK2D,IACD,OAAO,2BAAKgC,GAAZ,IAAmBnF,cAAeoF,EAAOxI,QAAQoD,gBAErD,KAAKoD,IACD,OAAO,2BAAK+B,GAAZ,IAAmBzE,SAAU0E,EAAOxI,QAAQ8D,WAEhD,KAAK2C,IACD,OAAO,2BAAK8B,GAAZ,IAAmBR,QAASS,EAAOxI,QAAQ+H,UAE/C,KAAKrB,IACD,OAAO,2BAAK6B,GAAZ,IAAmBxE,UAAWyE,EAAOxI,QAAQ+D,YAEjD,KAAK4C,IACD,OAAO,2BAAK4B,GAAZ,IAAmBtE,aAAcuE,EAAOxI,QAAQiE,eAEpD,KAAK2C,IACD,OAAO,2BAAK2B,GAAZ,IAAmBnE,UAAWoE,EAAOxI,QAAQoE,YAEjD,KAAKyC,IACD,OAAO,2BAAK0B,GAAZ,IAAmBQ,aAAcP,EAAOxI,QAAQqE,mBAEpD,KAAKyC,IACD,OAAO,2BAAKyB,GAAZ,IAAmBhE,SAAUiE,EAAOxI,QAAQuE,WAEhD,KAAKwC,IACD,OAAO,2BAAKwB,GAAZ,IAAmB9D,UAAW+D,EAAOxI,QAAQ0E,iBAEjD,KAAKsC,IACD,OAAO,2BAAKuB,GAAZ,IAAmBP,OAAQQ,EAAOxI,QAAQE,KAAKA,OAEnD,KAAK+G,IACD,OAAO,2BAAKsB,GAAZ,IAAmBN,gBAAiBO,EAAOxI,QAAQ8E,mBAEvD,KAAKoC,IACD,OAAO,2BAAKqB,GAAZ,IAAmBL,SAAUM,EAAOxI,QAAQgF,OAEhD,KAAKmC,IACD,OAAO,2BAAKoB,GAAZ,IAAmBJ,aAAcK,EAAOxI,UAE5C,KAAKyF,IACD,OAAO,2BACA8C,GADP,IAEIZ,YAAQqB,IAGhB,QACI,OAAOT,M,oEEvHJ,MAA0B,sC,yBCSnCU,E,4MACJV,MAAQ,CACNjI,MAAO,GAAI4I,UAAW,GAAI3H,MAAO,GAAIiB,KAAK,G,EAE5CjB,MAAQ,WACN4H,YAAW,WACT,EAAKC,SAAS,CAAE5G,KAAK,EAAOjB,MAAO,OAClC,O,8CAEL,SAAS8H,GACPA,EAAEC,iBADQ,MAEiBC,KAAKhB,MAA1BjI,EAFI,EAEJA,MAAO4I,EAFH,EAEGA,UACbK,KAAKH,SAAS,CAAE5G,KAAK,IACI,KAArB+G,KAAKhB,MAAMjI,OAAyC,KAAzBiJ,KAAKhB,MAAMW,WACxCK,KAAKH,SAAS,CAAE7H,MAAO,6CAA8CiB,KAAK,EAAMgH,UAAW,gBAC3FD,KAAKhI,SAGKgI,KAAKhB,MAAMjI,MAAMmJ,SAAS,WAIF,KAAzBF,KAAKhB,MAAMW,WACpBK,KAAKH,SAAS,CAAE7H,MAAO,gCAAiCiB,KAAK,EAAMgH,UAAW,gBAC9ED,KAAKhI,SAGLgI,KAAKG,QAAQpJ,EAAO4I,IARpBK,KAAKH,SAAS,CAAE7H,MAAO,oCAAqCiB,KAAK,EAAMgH,UAAW,gBAClFD,KAAKhI,W,qBAYT,SAAQjB,EAAO4I,GACbK,KAAKI,MAAMC,QAAQvJ,MAAMC,EAAO4I,GAChCK,KAAKH,SAAS,CACZ9I,MAAO,GACP4I,UAAW,O,oBAKf,WAAU,IAAD,SAEgCK,KAAKI,MAAtC9J,EAFC,EAEDA,eAAgBO,EAFf,EAEeA,aAEtB,OACE,sBAAKyJ,UAAU,mCAAf,UACE,qBAAKA,UAAU,SAAf,SACE,qBAAKC,IAAKC,EAAKC,IAAI,MAAMH,UAAU,gBAErC,qBAAKA,UAAU,eAAf,8CACCzJ,GAAgB,qBAAKyJ,UAAU,UAAf,SAA0BzJ,IAC3C,qBAAKyJ,UAAU,WAAf,SACE,uBAAMI,SAAUV,KAAKW,SAASC,KAAKZ,MAAnC,UACE,sBAAKM,UAAU,aAAf,UACE,uBAAOO,QAAQ,qBAAqBP,UAAU,aAA9C,SAA4D,8DAA+C,uBAC3G,uBAAO/J,KAAK,QAAQuK,GAAG,QAAQR,UAAU,0BAA0BS,mBAAiB,YAAYC,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE9I,MAAO+I,EAAEmB,OAAOC,SAAUA,MAAOlB,KAAKhB,MAAMjI,WAE7K,sBAAKuJ,UAAU,aAAf,UACE,uBAAOO,QAAQ,wBAAwBP,UAAU,aAAjD,SAA8D,gDAAiC,uBAC/F,uBAAO/J,KAAK,WAAW+J,UAAU,0BAA0BQ,GAAG,WAAWE,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAEF,UAAWG,EAAEmB,OAAOC,SAAUA,MAAOlB,KAAKhB,MAAMW,eAE1J,wBAAQpJ,KAAK,SAAS+J,UAAU,mCAAhC,0BAGc,OAAjBzJ,GAAyBP,GAAkB,qBAAKgK,UAAU,cAAf,SAC1C,qBAAKA,UAAU,sBAAsBjI,KAAK,SAA1C,SACE,sBAAMiI,UAAU,UAAhB,4BAGJ,8BACE,cAACa,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CC,KAAMvB,KAAKhB,MAAM/F,IACjBqH,UAAU,WACVxI,QAASkI,KAAKhB,MAAMhH,UAIxB,qBAAKsI,UAAU,oBAAoBQ,GAAG,QAAtC,SACE,qBAAKR,UAAU,wBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,oBAAIA,UAAU,cAAd,0BAEF,sBAAKA,UAAU,aAAf,oHAE0B,uBAAM,uBAAM,uBAFtC,oCAGmC,0BAEnC,qBAAKA,UAAU,eAAf,SACE,wBAAQ/J,KAAK,SAAS+J,UAAU,kBAAkBkB,eAAa,QAA/D,yBAMR,sBAAKlB,UAAU,SAAf,UACE,wBAAQQ,GAAG,YAAYR,UAAU,yEAAyEmB,IAAI,sBAAsBC,QAAS1B,KAAK2B,cAAeC,cAAY,QAAQC,cAAY,SAAjM,qBACA,cAAC,IAAD,CAAMf,GAAG,YAAYgB,GAAI,CAAEC,SAAU,gDAAkDN,IAAI,sBAAsBR,OAAO,SAASX,UAAU,gEAA3I,0BACA,cAAC,IAAD,CAAMQ,GAAG,cAAcgB,GAAI,CAAEC,SAAU,wCAA0Cd,OAAO,OAAOX,UAAU,gEAAzG,4BACA,cAAC,IAAD,CAAMQ,GAAG,oBAAoBW,IAAI,sBAAsBK,GAAI,CAAEC,SAAU,4IAA8Id,OAAO,SAASX,UAAU,gEAA/O,8BACA,cAAC,IAAD,CAAMQ,GAAG,cAAcW,IAAI,sBAAsBK,GAAI,CAAEC,SAAU,kGAAoGzB,UAAU,gEAAgEW,OAAO,SAAtP,mD,GAtGUe,aAyHLC,eAVS,SAAAjD,GAAK,MAAK,CAChC1I,eAAgB0I,EAAMD,KAAKzI,eAC3ByH,eAAgBiB,EAAMD,KAAKhB,eAC3BlH,aAAcmI,EAAMD,KAAKlI,iBAGA,SAAAI,GAAQ,MAAK,CACtCoJ,QAAS6B,YAAmB,CAAEpL,eAASG,MAG1BgL,CAA6CvC,G,8YClHtDyC,GAAaC,IAAMC,YAAW,SAAoBjC,EAAOkC,GAC7D,OAAO,cAACC,GAAA,EAAD,aAAOC,UAAU,KAAKF,IAAKA,GAASlC,OAGvCqC,G,4MAEJzD,MAAQ,CACN0D,KAAM,GACNC,YAAa,GACbC,YAAa,GACbC,aAAc,GACdC,SAAU,GACVC,MAAM,EACNC,MAAO,GACPC,UAAW,GACXC,UAAW,GACXC,aAAa,EACbC,SAAU,GACVpL,MAAO,GACPiB,KAAK,EACLoK,SAAU,GACVC,QAAS,GACTC,MAAO,GACPC,UAAW,GACXC,WAAY,GACZC,SAAU,GACVC,gBAAiB,GACjBC,SAAU,GACVC,cAAe,GACfpF,QAAQ,EACRlI,KAAM,GACNuN,WAAY,I,EA4CdC,YAAc,WACZ,EAAKlE,SAAS,CACZ+C,YAAa,GACbiB,cAAe,GACfpF,QAAQ,EACRwE,UAAW,GACXJ,aAAc,GACdS,QAAS,GACTD,SAAU,GACVO,SAAU,GACVE,WAAY,GACZX,aAAa,EACblK,KAAK,EACLjB,MAAO,GACP+K,MAAM,EACNxM,KAAM,M,EAIVyB,MAAQ,WACN4H,YAAW,WACT,EAAKC,SAAS,CAAE5G,KAAK,EAAOjB,MAAO,OAClC,O,EAELgM,aAAe,WACW,KAApB,EAAKhF,MAAMzI,MAAwC,KAAzB,EAAKyI,MAAMiE,gBAA6CxD,IAAzB,EAAKT,MAAMiE,WAAmD,KAAxB,EAAKjE,MAAM4E,eAA2CnE,IAAxB,EAAKT,MAAM4E,UAAsD,KAA5B,EAAK5E,MAAM6D,cAAkD,KAA3B,EAAK7D,MAAM4D,kBAA6CnD,IAAvB,EAAKT,MAAMsE,SAAgD,KAAvB,EAAKtE,MAAMsE,SAAoD,IAAlC,EAAKtE,MAAM4D,YAAY/G,QAA0C,KAA1B,EAAKmD,MAAMyE,YAC1V,EAAK5D,SAAS,CAAE7H,MAAO,2BAA4BiB,KAAK,EAAMgH,UAAW,gBACzE,EAAKjI,SAEE,EAAKgH,MAAM4D,YAAY/G,OAAS,KACvC,EAAKgE,SAAS,CAAE7H,MAAO,gDAAiDiB,KAAK,EAAMgH,UAAW,gBAC9F,EAAKjI,SAGL,EAAKiM,iB,EAGTA,cAAgB,WACd,IAAIC,EAAM,IAENC,EAASC,KAAKC,MAAM,IAAAD,KAAKD,UAA8BD,EACvDI,EAAK,IAAIC,KACTC,EAAOF,EAAGG,UACVD,GAAQ,IACVA,EAAO,IAAMA,GAEf,IAAIE,EAAQJ,EAAGK,WAAa,EACxBD,GAAS,IACXA,EAAQ,IAAMA,GAEhB,IAAIE,EAAON,EAAGO,WACVD,GAAQ,IACVA,EAAO,IAAMA,GAEf,IAAIE,EAAOR,EAAGS,aACVD,GAAQ,IACVA,EAAO,IAAMA,GAGf,IAAInO,EAAO,EAAKqI,aACTrI,EAAKsC,WACLtC,EAAKqB,MACZ,IAAIgN,EAAc,GAClBC,OAAOC,OAAOF,EAAa,CACzBzO,KAAM,EAAKyI,MAAMzI,KACjB0M,UAAW,EAAKjE,MAAMiE,UACtBP,KAAM,EAAK1D,MAAM0D,KACjBG,aAAc,EAAK7D,MAAM6D,aACzBO,SAAU,EAAKpE,MAAMoE,SACrBR,YAAa,EAAK5D,MAAM4D,YAAYuC,QAAQ,iBAAkB,KAC9DvB,SAAU,EAAK5E,MAAM4E,SACrBjB,YAAa6B,EAAO,IAAME,EAAQ,IAAMJ,EAAGc,cAAgB,IAAMR,EAAO,IAAME,EAC9EhC,SAAUqB,EACVb,QAAS,EAAKtE,MAAMsE,QACpBQ,WAAY,EAAK9E,MAAM8E,WACvBN,UAAW,EAAKxE,MAAMwE,UACtBC,WAAY,EAAKzE,MAAMyE,WACvB4B,aAAc,EAAKjF,MAAMhB,aAAahH,SACtCkN,cAAe,EAAKlF,MAAMhB,aAAaxH,YAGzC,EAAKiI,SAAS,CAAEsD,aAAa,IAC7B,EAAK/C,MAAMC,QAAQxH,WAAWmM,GAC9BpF,YAAW,WACwB,IAA7B,EAAKQ,MAAMhC,OAAOvC,QACpB,EAAKgE,SAAS,CAAE7H,MAAO,gCAAiCiB,KAAK,EAAMgH,UAAW,eAAgBkD,aAAa,EAAOO,SAAU,YAC5H,EAAK1L,QAGL,EAAKoI,MAAMC,QAAQ7E,WAAW,mBAC9B,EAAK+J,UAGL,EAAK1F,SAAS,CAAE2F,MAAM,EAAOvM,KAAK,EAAMjB,MAAO,uBAAwBiI,UAAW,cAAekD,aAAa,IAC9G,EAAKnL,WAEN,M,EAmBLyN,kBAAoB,SAAC3F,GACnB,IAAI4F,EACAC,EAAQ,EAAK3G,MAAMiE,UACvB,EAAKjE,MAAMuE,OAAS,EAAKvE,MAAMuE,MAAMqC,SAAQ,SAAUC,GACjDA,EAAInD,OAASiD,GACfE,EAAIpC,YAAcoC,EAAIpC,WAAWmC,SAAQ,SAACrP,GACpCA,EAAK+M,UAAYxD,IACnB4F,EAAQnP,EAAKA,YAKrB,EAAKsJ,SAAS,CAAEyD,QAASxD,EAAG6D,gBAAiB+B,EAAOjC,WAAY,GAAIhF,QAAQ,EAAOoF,cAAe,KAClG,EAAKzD,MAAMC,QAAQhF,mBAAmB,EAAK2D,MAAMiE,Y,+DA1KnD,WAEMjD,KAAKI,MAAMhB,cACbY,KAAKH,SAAS,CAAE6C,KAAO1C,KAAKI,MAAMhB,aAAaxH,UAAWkO,gBAE5D9F,KAAKI,MAAMC,QAAQnG,qB,gCAErB,SAAmB6L,GAgBjB,GAfIA,EAAUxH,aAAeyB,KAAKI,MAAM7B,YAElCyB,KAAKI,MAAM7B,YAA+C,IAAjCyB,KAAKI,MAAM7B,WAAW1C,QACjDmE,KAAKH,SAAS,CAAE0D,MAAOvD,KAAKI,MAAM7B,aAYlCyB,KAAKI,MAAM3B,SAAWsH,EAAUtH,OAClC,GAAIuB,KAAKI,MAAM3B,OAAO5C,OAAS,EAAG,CAChC,IAAImK,EAAMhG,KAAKhB,MAAMsE,QACjB2C,EAAIjG,KAAKI,MAAM3B,OAAO3C,QAAO,SAAAC,GAAC,OAAIA,EAAEmK,iBAAmBF,KAC3D,GAAiB,IAAbC,EAAEpK,QAAgBmE,KAAKI,MAAM3B,OAAO5C,OAAS,EAAG,CAClD,IAAIsK,EAAMF,EAAE,GAAF,QAAkB,aACxBA,EAAE,GAAF,YAAsB,SAAWA,EAAE,GAAF,WAAqB,IAAMA,EAAE,GAAF,WAAqB,OAASA,EAAE,GAAF,SAAmB,IAAMA,EAAE,GAAF,SACvHjG,KAAKH,SAAS,CAAEgE,cAAesC,EAAK1H,QAAQ,SACvC,GAAiB,IAAbwH,EAAEpK,QAA2D,KAA3CmE,KAAKI,MAAM3B,OAAO,GAAlB,eAA+C,CAC1E,IAAI0H,EAAMF,EAAE,GAAF,QAAkB,aACxBjG,KAAKI,MAAM3B,OAAO,GAAlB,YAAsC,SAAWuB,KAAKI,MAAM3B,OAAO,GAAlB,WAAqC,IAAMuB,KAAKI,MAAM3B,OAAO,GAAlB,WAAqC,OAASuB,KAAKI,MAAM3B,OAAO,GAAlB,SAAmC,IAAMuB,KAAKI,MAAM3B,OAAO,GAAlB,SACvLuB,KAAKH,SAAS,CAAEgE,cAAesC,EAAK1H,QAAQ,SACrCuB,KAAKH,SAAS,CAAEgE,cAAe,GAAIpF,QAAQ,SAEpDuB,KAAKH,SAAS,CAAEgE,cAAe,GAAIpF,QAAQ,M,mBAuGjD,WAAS,IAAD,OACNmB,YAAW,WACT,EAAKmE,gBACJ,O,8BAEL,SAAiBjE,GACf,IAAIwD,EACJtD,KAAKhB,MAAMuE,OAASvD,KAAKhB,MAAMuE,MAAMqC,SAAQ,SAAUC,GACjDA,EAAInD,OAAS5C,EAAEmB,OAAOC,QACxBoC,EAAUuC,EAAIvC,YAGK,IAAnBA,EAAQzH,OACVmE,KAAKH,SAAS,CAAEoD,UAAWnD,EAAEmB,OAAOC,MAAOmC,SAAU,GAAIM,gBAAiB,GAAIL,QAAS,GAAIG,WAAY,KAEvGzD,KAAKH,SAAS,CAAEoD,UAAWnD,EAAEmB,OAAOC,MAAOmC,SAAUC,EAASA,QAAS,GAAIG,WAAY,GAAIE,gBAAiB,O,oBAqBhH,WAAU,IAAD,OACP,OACE,sBAAKrD,UAAU,kBAAf,UACGN,KAAKhB,MAAMuE,OAAqC,IAA5BvD,KAAKhB,MAAMuE,MAAM1H,OACpC,sBAAKyE,UAAU,iBAAf,UACE,qBAAKA,UAAU,uCAAf,8BACA,sBAAKA,UAAU,qBAAf,UACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,wBAAOA,UAAU,aAAjB,UAA8B,kDAA6B,sBAAMA,UAAU,iBAAhB,oBAE7D,sBAAKA,UAAU,oBAAf,UACE,wBAAOA,UAAU,oBAAjB,UACE,uBACEY,MAAM,OACNkF,QAA6B,SAApBpG,KAAKhB,MAAMzI,KACpBA,KAAK,QAAQmM,KAAK,OAClB1B,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAEtJ,KAAMuJ,EAAEmB,OAAOC,MAAO2B,aAAe,EAAKzC,MAAMhB,aAAaxH,UAAWkO,cAAelC,SAAU,mCALpI,kBAMA,wBAAOtD,UAAU,eAAjB,UACE,uBAAO/J,KAAK,QAAQmM,KAAK,SAASxB,MAAM,SACtCkF,QAA6B,WAApBpG,KAAKhB,MAAMzI,KACpByK,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAEtJ,KAAMuJ,EAAEmB,OAAOC,MAAO2B,aAAc,GAAIe,SAAU,QAHrF,8BAMJ,sBAAKtD,UAAU,MAAf,UACE,sBAAKA,UAAU,8BAAf,UACE,gCAAO,uDAAwC,sBAAMA,UAAU,iBAAhB,kBACjD,qBAAKA,UAAU,oBAAf,SACE,uBACE+F,UAAQ,EACR/F,UAAU,eACVY,MAAOlB,KAAKhB,MAAM0D,KAClBnM,KAAK,cAGU,WAApByJ,KAAKhB,MAAMzI,MACV,sBAAK+J,UAAU,MAAf,UACE,sBAAKA,UAAU,8BAAf,UACE,gCAAO,wDAAyC,sBAAMA,UAAU,iBAAhB,kBAClD,qBAAKA,UAAU,oBAAf,SACE,uBACEA,UAAU,eACVgG,YAAY,gBACZpF,MAAOlB,KAAKhB,MAAM6D,aAClB7B,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAEgD,aAAc/C,EAAEmB,OAAOC,SACtD3K,KAAK,cAGb,sBAAK+J,UAAU,MAAf,UACuB,SAApBN,KAAKhB,MAAMzI,KACV,qBAAK+J,UAAU,8BAAf,SACE,kCAAO,qDAAgC,sBAAMA,UAAU,iBAAhB,oBAEzC,qBAAKA,UAAU,8BAAf,SACE,kCAAO,uDAAkC,sBAAMA,UAAU,iBAAhB,oBAE7C,qBAAKA,UAAU,oBAAf,SACE,yBACEA,UAAU,eACVY,MAAOlB,KAAKhB,MAAM4E,SAClB2C,SAA8B,SAApBvG,KAAKhB,MAAMzI,KACrByK,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE+D,SAAU9D,EAAEmB,OAAOC,SAJpD,UAKE,wBAAQA,MAAM,GAAGqF,UAAQ,EAAzB,kCACA,2CAAyB,8BAAzB,MAAY,QACZ,6CAA6B,8CAAjB,UACZ,0CAAuB,4BAAX,eAIlB,sBAAKjG,UAAU,MAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,gCAAO,2DAET,qBAAKA,UAAU,oBAAf,SACE,uBACEA,UAAU,eACVgG,YAAY,8BACZpF,MAAOlB,KAAKhB,MAAM8E,WAClB9C,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAEiE,WAAYhE,EAAEmB,OAAOC,mBAK5D,sBAAKZ,UAAU,oBAAf,UACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,wBAAOA,UAAU,aAAjB,UAA8B,8CAAyB,sBAAMA,UAAU,iBAAhB,oBAEzD,qBAAKA,UAAU,oBAAf,SACE,yBAAQA,UAAU,oBAAoBY,MAAOlB,KAAKhB,MAAMiE,UACtDjC,SAAU,SAAClB,GAAD,OAAO,EAAK0G,iBAAiB1G,IADzC,UAEE,wBAAQoB,MAAM,GAAGqF,UAAQ,EAAzB,kCACCvG,KAAKhB,MAAMuE,OAASvD,KAAKhB,MAAMuE,MAAMkD,KAAI,SAACZ,GACzC,OACE,iCAAwBA,EAAInD,MAAfmD,EAAInD,iBAM1B1C,KAAKhB,MAAMqE,UAA2C,IAA/BrD,KAAKhB,MAAMqE,SAASxH,QAC1C,oCAAM,sBAAKyE,UAAU,MAAf,UACJ,qBAAKA,UAAU,oBAAf,SACE,wBAAOA,UAAU,YAAjB,UAA6B,yDAAoC,sBAAMA,UAAU,iBAAhB,oBAEnE,qBAAKA,UAAU,oBAAf,SACE,yBAAQA,UAAU,oBAAoBY,MAAOlB,KAAKhB,MAAMsE,QACtDtC,SAAU,SAAAlB,GAAC,OAAI,EAAK2F,kBAAkB3F,EAAEmB,OAAOC,QADjD,UAGE,wBAAQA,MAAM,GAAGqF,UAAQ,EAAzB,kCACCvG,KAAKhB,MAAMqE,UAAYrD,KAAKhB,MAAMqE,SAASoD,KAAI,SAACZ,GAC/C,OACE,iCAAmBA,GAANA,cAerB,sBAAKvF,UAAU,MAAf,UACE,qBAAKA,UAAU,oBAAf,SACGN,KAAKhB,MAAM2E,gBAAgB9H,OAAS,IAA2B,IAAtBmE,KAAKhB,MAAMP,QAAmB,wBAAO6B,UAAU,YAAjB,UAA6B,iDAA4B,sBAAMA,UAAU,iBAAhB,oBAElIN,KAAKhB,MAAM2E,gBAAgB9H,OAAS,IAA2B,IAAtBmE,KAAKhB,MAAMP,QACnD,qBAAK6B,UAAU,oBAAf,SACE,yBAAQA,UAAU,oBAAoBY,MAAOlB,KAAKhB,MAAMyE,WACtDzC,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE4D,WAAY3D,EAAEmB,OAAOC,SADtD,UAEE,wBAAQA,MAAM,GAAGqF,UAAQ,EAAzB,kCACCvG,KAAKhB,MAAM2E,iBAAmB3D,KAAKhB,MAAM2E,gBAAgB8C,KAAI,SAACZ,GAC7D,OACE,iCAAmBA,GAANA,uBASjC,qBAAKvF,UAAU,WAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,kCAAO,8DAAyC,sBAAMA,UAAU,iBAAhB,kBAChD,0BACEA,UAAU,eACVgG,YAAY,6BACZpF,MAAOlB,KAAKhB,MAAM4D,YAClB5B,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE+C,YAAa9C,EAAEmB,OAAOC,SACrD3K,KAAK,OACLmQ,KAAK,cAIb,qBAAKpG,UAAU,2BAAf,SACE,wBAAQqG,UAAWC,IACjB9E,GAAG,eACHxB,UAAU,iBACVoB,QAAS1B,KAAKgE,aACduC,UAAWvG,KAAKhB,MAAMP,OAJxB,uBAO2B,IAA3BuB,KAAKhB,MAAMmE,aAAwB,qBAAK7C,UAAU,2BAAf,SACjC,cAACuG,GAAA,EAAD,SAMN,qBAAKvG,UAAU,cAAf,SACE,qBAAKA,UAAU,iBAAiBjI,KAAK,SAArC,SACE,sBAAMiI,UAAU,UAAhB,4BAIN,cAACa,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CC,KAAMvB,KAAKhB,MAAM/F,IACjBqH,UAAU,WACVxI,QAASkI,KAAKhB,MAAMhH,QAItB,eAAC8O,GAAA,EAAD,CACEvF,KAAmC,KAA7BvB,KAAKhB,MAAM6E,gBAA8C,IAAtB7D,KAAKhB,MAAMP,OACpDsI,oBAAqB5E,GACrB6E,aAAW,EACXC,QAASjH,KAAK+D,YACdmD,kBAAgB,2BAChBnG,mBAAiB,iCANnB,UAQE,cAACoG,GAAA,EAAD,CAAarG,GAAG,2BAAhB,SAA4C,iBAC5C,cAACsG,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAmBvG,GAAG,iCAAtB,SACgC,KAA7Bd,KAAKhB,MAAM6E,cAAuB7D,KAAKhB,MAAM6E,cAAgB,6CAGlE,eAACyD,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAQ7F,QAAS,kBAAM,EAAK7B,SAAS,CAAEpB,QAAQ,KAAS+I,MAAM,UAA9D,2BAGA,cAACD,GAAA,EAAD,CACE7F,QAAS,WACP,EAAKqC,cACL,EAAK3D,MAAMC,QAAQ7E,WAAW,oBAEhCgM,MAAM,UALR,gC,GA9ZiBxF,aA2bdyF,eAAWxF,aAZF,SAAAjD,GAAK,MAAK,CAChCvF,SAAUuF,EAAMO,KAAK9F,SACrB2F,aAAcJ,EAAMD,KAAKK,aACzBhB,OAAQY,EAAMO,KAAKnB,OACnBG,WAAYS,EAAMO,KAAKhB,WACvBE,OAAQO,EAAMO,KAAKd,WAGM,SAAAxH,GAAQ,MAAK,CACtCoJ,QAAS6B,YAAmB,CAAErJ,wBAAYqB,oCAAkBnB,wBAAYC,sBAAWQ,0BAAa6B,wCAAoBG,yBAAcvE,MAG1GgL,CAA6CQ,K,iFCjaxDiF,I,mKAlCX,WAAU,IAAD,EAC4B1H,KAAKI,MAA9Bc,EADH,EACGA,MAAOyG,EADV,EACUA,MAAOC,EADjB,EACiBA,OAChBC,EAAS,CACX,MAAS,UACT,OAAU,UACV,OAAU,UACV,IAAO,WAEPC,EAAkBD,EAAOE,MAa7B,MAZc,WAAV7G,EACA4G,EAAkBD,EAAOG,MAER,QAAV9G,EACP4G,EAAkBD,EAAOI,OAEV,QAAV/G,EACL4G,EAAkBD,EAAOK,IAEV,SAAVhH,IACL4G,EAAkBD,EAAOM,QAGzB,mBAAG7H,UAAU,YACTY,MAAOA,EACPF,SAAU,SAAAoH,GAAK,OAAIR,EAAOQ,EAAMnH,OAAOC,MAAOyG,IAC9CU,MAAO,CACHP,gBAAiBA,EAAiBN,MAAO,QACzCc,WAAY,QALpB,SAMQpH,Q,GAnCAc,cCiDLuG,OApDf,SAAqBC,EAAWC,EAASC,GACrC,IAAIC,EAAG7I,EAEH0I,EAAYC,GACZE,EAAIH,EACJ1I,EAAI2I,IAEJE,EAAIF,EACJ3I,EAAI0I,GAER,IAAII,EAAWxE,KAAKC,OAAOvE,EAAI6I,GAAK,OAChCE,EAAezE,KAAKC,MAAMuE,EAAW,GAuCzC,OArCqB,IAAjBC,GAAsBF,EAAElE,YAAc3E,EAAE2E,UACxCoE,EAAe,EAGVA,GAAgBF,EAAElE,YAAc3E,EAAE2E,WAAakE,EAAEG,WAAahJ,EAAEgJ,WACrED,GAA8B,GAgCX,EAAfA,GAlBJF,EAAEG,WAAahJ,EAAEgJ,UAAYH,EAAElE,YAAc3E,EAAE2E,UACtC,EACa,IAAfkE,EAAEG,UAAiC,IAAfhJ,EAAEgJ,SACpB,EACa,IAAfH,EAAEG,UAAiC,IAAfhJ,EAAEgJ,SACpB,EACa,IAAfhJ,EAAEgJ,UAAiC,IAAfhJ,EAAEgJ,SACpB,EAAIH,EAAEG,SACO,IAAfH,EAAEG,UAAiC,IAAfH,EAAEG,SACpBhJ,EAAEgJ,SACJhJ,EAAEgJ,SAAWH,EAAEG,SACbhJ,EAAEgJ,SAAWH,EAAEG,SAEnBH,EAAEG,WAAahJ,EAAEgJ,SACb,EAEA,EAAIhJ,EAAEgJ,SAAWH,EAAEG,WCHrBC,G,4JAtCX,WAAU,IAAD,EAC4B/I,KAAKI,MAA9Bc,EADH,EACGA,MAAOyG,EADV,EACUA,MAAOC,EADjB,EACiBA,OAChBC,EACK,MADLA,EAEO,QAFPA,EAGO,QAET9L,EAAI,IAAOmF,EAAQ,IACnB4G,EAAkB,GAClBN,EAAQK,EACRmB,EAAO,GAeX,OAdIjN,EAAEmE,SAAS,MACX4H,EAAkBD,EAClBL,EAAQK,EACRmB,EAAO9H,QAEIzB,IAAN1D,GACL+L,EAAkBD,EAClBmB,EAAO,KAGPlB,EAAkB,GAClBN,EAAQK,EACRmB,EAAO9H,GAGP,mBAAGZ,UAAU,YACTY,MAAOA,EACPF,SAAU,SAAAoH,GAAK,OAAIR,EAAOQ,EAAMnH,OAAOC,MAAOyG,IAC9CU,MAAO,CACHP,gBAAiBA,EAAiBN,MAAOA,EAEzCc,WAAY,QANpB,SAOQU,Q,GAvCFhH,a,UCWZiH,GAAU,CACZ,CACIvG,KAAM,eACNwG,MAAO,sBACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,IAGd,CACI1G,KAAM,YACNwG,MAAO,aACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,IAGd,CACI1G,KAAM,OACNwG,MAAO,kBACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,IAEX,CACC1G,KAAM,aACNwG,MAAO,WACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,IAGd,CACI1G,KAAM,UACNwG,MAAO,sBACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,IAGd,CACI1G,KAAM,cACNwG,MAAO,cACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,IAWd,CACI1G,KAAM,aACNwG,MAAO,uBACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,IAGd,CACI1G,KAAM,MACNwG,MAAO,MACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,EACNC,iBAAkB,SAACnI,EAAOoI,EAAWC,GACjC,OACI,cAAC,GAAD,CACIrI,MAAOA,EACPyG,MAAO2B,EAAUE,SACjB5B,OAAQ,SAAAQ,GAAK,OAAImB,EAAYnB,SAMjD,CACI1F,KAAM,SACNwG,MAAO,SACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,EACNC,iBAAkB,SAACnI,EAAOoI,EAAWC,GACjC,OACI,cAAC,GAAD,CACIrI,MAAOA,EACPyG,MAAO2B,EAAUG,YACjB7B,OAAQ,SAAAQ,GAAK,OAAImB,EAAYnB,UAO/CsB,G,4MACF1K,MAAQ,CACJ2K,SAAS,EACThT,KAAM,GACN6O,MAAM,EACNoE,eAAgB,GAChB3K,OAAQ,GACRuF,KAAM,GACN9M,OAAQ,GACRmS,YAAa,GACbC,UAAW,GACXC,MAAO,GACPtS,UAAU,EACVuS,eAAe,EACfC,UAAW,GACXvH,KAAM,GACNC,YAAa,GACbC,YAAa,GACbC,aAAc,GACdC,SAAU,GACVE,MAAO,GACPC,UAAW,GACXC,WAAW,EACXE,SAAU,GACV8G,IAAK,GACL/G,aAAa,EACbJ,MAAM,EACNjL,QAAS,GACTqS,QAAS,GACTC,OAAQ,GACRC,cAAc,EACdC,OAAQ,GACRC,aAAc,GACdC,UAAW,GACXC,WAAY,GACZC,MAAO,GACP9O,aAAc,GACd+O,iBAAkB,GAClBC,WAAY,GACZC,cAAe,GACfC,SAAU,GACVC,QAAQ,EACRC,aAAc,GACdC,QAAS,GACTxH,WAAY,GACZyH,SAAU,EACVC,UAAW,EACXC,YAAa,G,EAgGjBC,YAAc,WACV,EAAKxL,SAAS,CAAE2F,MAAM,EAAO/N,UAAU,EAAOkS,SAAS,EAAO5G,MAAM,IACpE,EAAKgB,e,EA4CT/L,MAAQ,WACJ4H,YAAW,WACP,EAAKC,SAAS,CAAE5G,KAAK,EAAOjB,MAAO,OACpC,O,EAEPsT,WAAa,SAAC5T,EAAQ4S,GACH,UAAXA,GACA,EAAKzK,SAAS,CAAEyK,OAAQ,UACQ,KAA5B,EAAKtL,MAAMpD,aACqB,KAA5B,EAAKoD,MAAMuL,cAA2C,KAApB,EAAKvL,MAAMwF,MAC7C,EAAK3E,SAAS,CAAE7H,MAAO,yBAA0BiB,KAAK,EAAMgH,UAAW,gBACvE,EAAKjI,SAGL,EAAKgM,aAAatM,EAAQ4S,GAIE,KAA5B,EAAKtL,MAAMuL,cACX,EAAK1K,SAAS,CAAE7H,MAAO,yBAA0BiB,KAAK,EAAMgH,UAAW,gBACvE,EAAKjI,SAGL,EAAKgM,aAAatM,EAAQ4S,IAKlB,gBAAXA,IAC2B,KAA5B,EAAKtL,MAAMpD,aACa,KAApB,EAAKoD,MAAMwF,MAAsC,KAAvB,EAAKxF,MAAMmL,SAA8C,KAA5B,EAAKnL,MAAMuL,cAAuD,KAAhC,EAAKvL,MAAM2L,kBAAuD,KAA5B,EAAK3L,MAAMgM,cAC1I,EAAKnL,SAAS,CAAE7H,MAAO,yBAA0BiB,KAAK,EAAMgH,UAAW,gBACvE,EAAKjI,SAGL,EAAKgM,aAAatM,EAAQ4S,GAIH,KAAvB,EAAKtL,MAAMmL,SAA8C,KAA5B,EAAKnL,MAAMuL,cAAuD,KAAhC,EAAKvL,MAAM2L,kBAAuD,KAA5B,EAAK3L,MAAMgM,cAChH,EAAKnL,SAAS,CAAE7H,MAAO,yBAA0BiB,KAAK,EAAMgH,UAAW,gBACvE,EAAKjI,SAGL,EAAKgM,aAAatM,EAAQ4S,K,EAM1CtG,aAAe,SAACtM,EAAQ4S,GACpB,IAAIiB,EACJ,GAAe,gBAAXjB,EAA0B,CAC1B,GAAgC,KAA5B,EAAKtL,MAAMpD,aAAqB,CAChC,IAAI4P,EAAM,IAAIjH,KACVkH,EAAMD,EAAI/G,UACVgH,GAAO,IACPA,EAAM,IAAMA,GAEhB,IAAIC,EAASF,EAAI7G,WAAa,EAC1B+G,GAAU,IACVA,EAAS,IAAMA,GAEnBH,EAAYE,EAAM,IAAMC,EAAS,IAAMF,EAAIpG,cAAgB,IAAMoG,EAAI3G,WAAa,IAAM2G,EAAIzG,kBAG5FwG,EAAY,EAAKvM,MAAMyL,WAE3B,GAA2B,KAAvB,EAAKzL,MAAMmL,QAAgB,CAC3B,IAAI7F,EAAK,IAAIC,KAAK,EAAKvF,MAAMmL,SACzB3F,EAAOF,EAAGG,UACVD,GAAQ,IACRA,EAAO,IAAMA,GAEjB,IAAIE,EAAQJ,EAAGK,WAAa,EACxBD,GAAS,IACTA,EAAQ,IAAMA,GAElB,IAAIiH,EAAWnH,EAAO,IAAME,EAAQ,IAAMJ,EAAGc,cAAgB,IAAMd,EAAGO,WAAa,IAAMP,EAAGS,mBAIhGwG,EADiC,SAA5B,EAAKvM,MAAMpD,cAAuD,QAA5B,EAAKoD,MAAMpD,aAC1C,EAAKoD,MAAMyL,WAGX,EAAKzL,MAAMwF,KAE3B,IAAIoH,EAAQ,IAAIrH,KACZsH,EAAM,GACV5G,OAAOC,OAAO2G,EAAK,CACf/I,SAAU,EAAK9D,MAAM8D,SACrB0B,KAAM+G,EACNjB,OAAQ,EAAKtL,MAAMsL,OAEnBV,eAAgB,EAAK5K,MAAM4K,eAC3BlS,OAAQA,EACRoS,UAAW,EAAK1J,MAAMhB,aAAaxH,UACnCiS,YAAa,EAAK7K,MAAM6K,YACxB5K,OAAQ,EAAKD,MAAMC,OACnB6M,aAAcF,EACd1B,IAAK,EAAKlL,MAAMkL,IAChBE,OAAQ,EAAKpL,MAAMoL,OACnBD,QAASwB,EACTpB,aAAc,EAAKvL,MAAMuL,aAAapF,QAAQ,iBAAkB,KAChEvJ,aAAc,EAAKoD,MAAMpD,aACzB+O,iBAAkB,EAAK3L,MAAM2L,iBAAiBxF,QAAQ,iBAAkB,KACxE6F,aAAc,EAAKhM,MAAMgM,aACzB,MAAS,EAAK5K,MAAMhB,aAAaxH,UAAWS,KAAM,EAAK+H,MAAMhB,aAAa/G,KAAM,KAAQ,YACxF0T,OAAQ,MACR3I,SAAU,EAAKhD,MAAMhB,aAAakE,QAClC0I,UAAW,EAAK5L,MAAMhB,aAAa4M,UACnCjC,MAAO,EAAK/K,MAAM0D,KAClBC,YAAa,EAAK3D,MAAM2D,YACxBmB,WAAY,EAAK9E,MAAM8E,WACvBpB,KAAM,EAAK1D,MAAM0D,KACjBO,UAAW,EAAKjE,MAAMiE,UACtBW,SAAU,EAAK5E,MAAM4E,SACrBN,QAAS,EAAKtE,MAAMsE,QACpBT,aAAc,EAAK7D,MAAM6D,aACzBwC,aAAc,EAAKjF,MAAMhB,aAAahH,SACtCkN,cAAe,EAAKlF,MAAMhB,aAAaxH,YAE3C,EAAKiI,SAAS,CAAEsD,aAAa,IAC7B,EAAK/C,MAAMC,QAAQ5H,YAAYoT,GAC/BjM,YAAW,WACH,EAAKQ,MAAM9B,cAAmD,MAAnC,EAAK8B,MAAM9B,aAAa5G,QAA2D,oBAAzC,EAAK0I,MAAM9B,aAAa3H,KAAKmB,SAClG,EAAK+H,SAAS,CAAE7H,MAAO,kDAAmDiB,KAAK,EAAMgH,UAAW,eAAgBkD,aAAa,IAC7H,EAAKnL,QACL,EAAKoI,MAAMC,QAAQ7F,UAAUqR,GAC7B,EAAKtG,UAGL,EAAK1F,SAAS,CAAE2F,MAAM,EAAMvM,KAAK,EAAMjB,MAAO,uBAAwBiI,UAAW,cAAekD,aAAa,IAC7G,EAAKnL,WAEV,M,EAEPuN,MAAQ,WACJ3F,YAAW,WACP,EAAKmE,gBACN,M,EAEPkI,qBAAuB,SAACnM,GACpB,IAAI8L,EAAQ,IAAIrH,KACZ2F,EAAM3B,GAAYqD,EAAO,IAAIrH,KAAKzE,IACtC,EAAKD,SAAS,CAAE2E,KAAM1E,EAAGoK,IAAKA,K,EAElCgC,oBAAsB,SAACpM,EAAGwK,EAAQ6B,EAAUzU,GACxC,IAAI0U,EACAC,EACW,KAAX3U,GACA0U,EAAMD,EAASG,UAAU,EAAG,IAAM,IAAMH,EAASG,UAAU,EAAG,GAAKH,EAASG,UAAU,EAAG,GACzFD,EAAM,IAAI9H,KAAK6H,IAGfC,EAAMF,EAEV,IAAIjC,EAAM3B,GAAY8D,EAAK,IAAI9H,KAAKzE,IACpC,EAAKD,SAAS,CAAEsK,QAASrK,EAAGsK,OAAQF,K,EAExCqC,eAAiB,SAACjC,GACd,GAA8B,KAA1B,EAAKtL,MAAM4L,YAAkD,KAA7B,EAAK5L,MAAM6L,cAC3C,EAAKhL,SAAS,CAAE7H,MAAO,yBAA0BiB,KAAK,EAAMgH,UAAW,gBACvE,EAAKjI,aAEJ,GAAK,EAAKgH,MAAM4L,WAAW1K,SAAS,KAIpC,GAAK,EAAKlB,MAAM4L,WAAW1K,SAAS,YAIpC,CACD,IAAI2L,EAAM,GACV5G,OAAOC,OAAO2G,EAAK,CACf/I,SAAU,EAAK9D,MAAM8D,SACrB8H,WAAY,EAAK5L,MAAM4L,WACvBC,cAAe,EAAK7L,MAAM6L,cAC1BP,OAAQA,EACR,MAAS,EAAKlK,MAAMhB,aAAaxH,UACjCS,KAAM,EAAK+H,MAAMhB,aAAa/G,KAC9B,KAAQ,YACR+K,SAAU,EAAKhD,MAAMhB,aAAakE,QAClC+B,aAAc,EAAKjF,MAAMhB,aAAahH,WAE1C,EAAKyH,SAAS,CAAEsD,aAAa,IAC7B,EAAK/C,MAAMC,QAAQrG,cAAc6R,GACjCjM,YAAW,WACkC,MAArC,EAAKQ,MAAMnG,eAAevC,QAC1B,EAAKmI,SAAS,CAAE7H,MAAO,0CAA2CiB,KAAK,EAAMgH,UAAW,eAAgBkD,aAAa,IACrH,EAAKnL,QACL,EAAKuN,UAGL,EAAK1F,SAAS,CAAE2F,MAAM,EAAOvM,KAAK,EAAMjB,MAAO,uBAAwBiI,UAAW,cAAekD,aAAa,IAC9G,EAAKnL,WAEV,UA5BH,EAAK6H,SAAS,CAAE7H,MAAO,yBAA0BiB,KAAK,EAAMgH,UAAW,gBACvE,EAAKjI,aALL,EAAK6H,SAAS,CAAE7H,MAAO,2BAA4BiB,KAAK,EAAMgH,UAAW,gBACzE,EAAKjI,S,EAkCbwU,aAAe,SAAC1M,GACZ,EAAKD,SAAS,CAAE+K,WAAY9K,EAAEmB,OAAOC,QAEzB,WADFpB,EAAEmB,OAAOC,OAEf,EAAKrB,SAAS,CAAEkL,QAAQ,K,+DAzVhC,WACI/K,KAAKH,SAAS,CAAEiK,UAAW9J,KAAKI,MAAMhB,aAAaxH,UAAWuL,aAAa,IACtC,gBAAjCnD,KAAKI,MAAMhB,aAAa/G,MACxB2H,KAAKI,MAAMC,QAAQ/H,aAAa,CAAE,MAAS0H,KAAKI,MAAMhB,aAAaxH,UAAW,KAAQoI,KAAKI,MAAMhB,aAAa/G,KAAM,KAAQ,WAC5H2H,KAAKH,SAAS,CAAE6K,MAAO,qBAEe,eAAjC1K,KAAKI,MAAMhB,aAAa/G,MAC7B2H,KAAKI,MAAMC,QAAQ/H,aAAa,CAAE,MAAS0H,KAAKI,MAAMhB,aAAaxH,UAAW,KAAQoI,KAAKI,MAAMhB,aAAa/G,KAAM,KAAQ,iBAAkB+K,SAAUpD,KAAKI,MAAMhB,aAAaqN,QAAQ,GAAhC,aACxJzM,KAAKH,SAAS,CAAE6K,MAAO,sBAGvB1K,KAAKI,MAAMC,QAAQ/H,aAAa,CAAE,MAAS0H,KAAKI,MAAMhB,aAAaxH,UAAW,KAAQoI,KAAKI,MAAMhB,aAAa/G,KAAM,KAAQ,YAAa+K,SAAUpD,KAAKI,MAAMhB,aAAakE,UAC3KtD,KAAKH,SAAS,CAAE6K,MAAO,aACvB1K,KAAKI,MAAMC,QAAQ7G,iB,gCAG3B,SAAmBuM,GACf,GAAIA,EAAUvN,YAAcwH,KAAKI,MAAM5H,UACnC,GAAIwH,KAAKI,MAAM5H,WAA6C,IAAhCwH,KAAKI,MAAM5H,UAAUqD,OAAc,CAE3DmE,KAAKI,MAAM5H,UAAU4Q,MAAK,SAAUnD,EAAGyG,GAGnC,OAFU,IAAInI,KAAMmI,EAAEC,aAAcL,UAAU,EAAG,IAAM,IAAOI,EAAEC,aAAcL,UAAU,EAAG,GAAMI,EAAEC,aAAcL,UAAU,EAAG,GAAK,IAAOI,EAAEC,aAAcL,UAAU,GAAI,KAC9J,IAAI/H,KAAM0B,EAAE0G,aAAcL,UAAU,EAAG,IAAM,IAAOrG,EAAE0G,aAAcL,UAAU,EAAG,GAAMrG,EAAE0G,aAAcL,UAAU,EAAG,GAAK,IAAOrG,EAAE0G,aAAcL,UAAU,GAAI,QAG5K,IAAIV,EAAQ,IAAIrH,KACZ2G,EAAW,EAAGE,EAAc,EAAGD,EAAY,EAC/CnL,KAAKI,MAAM5H,WAAawH,KAAKI,MAAM5H,UAAUoN,SAAQ,SAACC,GAIlD,GAHmB,WAAfA,EAAI+G,SACJxB,GAA4B,GAE5BvF,EAAIgH,IAAK,CAET,IAAIT,EAAOvG,EAAIiH,WAAYR,UAAU,EAAG,IAAM,IAAOzG,EAAIiH,WAAYR,UAAU,EAAG,GAAMzG,EAAIiH,WAAYR,UAAU,EAAG,GACjHD,EAAM,IAAI9H,KAAK6H,GACnB,GAAmB,WAAfvG,EAAI+G,OAEJ3H,OAAOC,OAAOW,EAAK,CAAE,IAAOA,EAAIgH,UAE/B,CACkB,SAAfhH,EAAI+G,OACJzB,GAAwB,EAEJ,QAAftF,EAAI+G,SACT1B,GAAsB,GAE1B,IAAI6B,EAAUxE,GAAYqD,EAAOS,GACjC,KAAIT,EAAQS,GAIR,OAAOU,EAHPA,EAAU,IAAMA,EAKpB9H,OAAOC,OAAOW,EAAK,CAAE,IAAOkH,SAIxC/M,KAAKH,SAAS,CAAEoK,UAAWjK,KAAKI,MAAM5H,UAAW6R,cAAc,EAAMlH,aAAa,EAAO+H,SAAUA,EAAUC,UAAWA,EAAWC,YAAaA,SAGhJpL,KAAKH,SAAS,CAAEoK,UAAW,GAAII,cAAc,EAAMlH,aAAa,IAGxE,GAAI4C,EAAUxM,eAAiByG,KAAKI,MAAM7G,aACtC,GAAIyG,KAAKI,MAAM7G,cAAmD,IAAnCyG,KAAKI,MAAM7G,aAAasC,OAAc,CACjE,IAAK,IAAImR,EAAI,EAAGA,EAAIhN,KAAKI,MAAM7G,aAAasC,OAAQmR,IAChDhN,KAAKH,SAAS,CAAE4K,WAAYzK,KAAKI,MAAM7G,aAAa,GAAGuT,WAAYtC,UAAWxK,KAAKI,MAAM7G,aAAa,GAAGsT,IAAKjR,aAAcoE,KAAKI,MAAM7G,aAAa,GAAGqT,OAAQ3B,QAASjL,KAAKI,MAAM7G,aAAayG,KAAKI,MAAM7G,aAAasC,OAAS,GAAGoR,gBAExOjN,KAAKH,SAAS,CAAEkD,MAAM,SAEjB/C,KAAKI,MAAM7G,cAAmD,IAAnCyG,KAAKI,MAAM7G,aAAasC,QACxDmE,KAAKH,SAAS,CAAEkD,MAAM,EAAMjL,QAAS,gBAG7C,GAAIiO,EAAUtM,WAAauG,KAAKI,MAAM3G,SAAU,CAC5C,IAAIyT,EAAM,GACVlN,KAAKI,MAAM3G,UAAYuG,KAAKI,MAAM3G,SAASmM,SAAQ,SAACC,GAC/B,QAAbA,EAAIsH,MACJD,EAAIE,KAAKvH,MAGjB7F,KAAKH,SAAS,CAAEiL,SAAUoC,O,oBAGlC,SAAOG,GACH,OAAO,SAAUpH,EAAGyG,GAChB,OAAIzG,EAAEoH,GAAQX,EAAEW,GACL,EACApH,EAAEoH,GAAQX,EAAEW,IACX,EAEL,K,yBAOf,WACIrN,KAAKH,SAAS,CACV8J,SAAS,EACThT,KAAM,GACN6O,MAAM,EACNoE,eAAgB,GAChB3K,OAAQ,GACRuF,KAAM,GACN9M,OAAQ,GACRmS,YAAa,GACbC,UAAW,GACXC,MAAO,GACPtS,UAAU,EACVuS,eAAe,EACftH,KAAM,GACNC,YAAa,GACbC,YAAa,GACbC,aAAc,GACdC,SAAU,GACVE,MAAO,GACPC,UAAW,GACXC,WAAW,EACXE,SAAU,GACV8G,IAAK,GACLnH,MAAM,EACNjL,QAAS,GACTqS,QAAS,GACTC,OAAQ,GACRE,OAAQ,GACRC,aAAc,GACd3O,aAAc,GACd+O,iBAAkB,GAClBK,aAAc,GACdJ,WAAY,GACZC,cAAe,GACf1H,aAAa,EACb2H,SAAU,GACVC,QAAQ,EACRtH,WAAY,O,oBAoNpB,WAAU,IAAD,OAGC0F,EAAU,CACZmE,WAAY,kBACZC,gBAAgB,EAChBC,WAAY,SAACC,EAAD,GAAuB,IAAjBC,EAAgB,EAAhBA,UACVC,EAAgB,EAAK3O,MAAMiL,UAAUyD,GACzC,EAAKtN,MAAMC,QAAQ/G,iBAAiB,CAAE,OAAUqU,EAAc3R,YAC9D,EAAKoE,MAAMC,QAAQ7G,cACnB,EAAKqG,SAAS,CACV2F,MAAM,EACN9C,KAAMiL,EAAcC,KACpB/K,aAAc8K,EAAcE,WAC5BlL,YAAagL,EAAchB,aAC3B/J,YAAa+K,EAAcG,YAC3BhL,SAAU6K,EAAc3R,UACxB4H,SAAU+J,EAAcI,SACxB9K,UAAW0K,EAAcK,WACzB5K,SAAUuK,EAAcM,SACxB3K,QAASqK,EAAcO,QACvBhE,IAAKyD,EAAcd,IACnB/I,WAAY6J,EAAcQ,cAC1B1K,WAAYkK,EAAcS,YAC1BrE,MAAO4D,EAAcU,SAG7BC,WAAY,CACRC,KAAM,CACFC,QAAS,mCACTC,QAAS,OACTC,oBAAqB,SAAAC,GAAM,yBAAgBA,EAAOzF,SAEtD0F,WAAY,CACRC,KAAM,YACNC,SAAU,gBACVC,YAAa,iBACbC,YAAa,MAEjBC,QAAS,CACLC,OAAQ,SACRC,YAAa,eACbC,MAAO,QACPC,YAAa,eACbC,YAAa,gBAEjBxT,OAAQ,CACJyT,IAAK,MACL7E,MAAO,UACP8E,MAAO,SAEXH,YAAa,CACT3E,MAAO,eACP+E,UAAW,2BAEfC,aAAc,CACV1G,KAAM,kBACN2G,OAAQ,SACRC,WAAY,0BAIxB,OACI,sBAAKtP,UAAU,wBAAf,UAEI,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,4BAAf,6BAA4DN,KAAKhB,MAAMiL,WAAajK,KAAKhB,MAAMiL,UAAUpO,OAAS,EAAImE,KAAKhB,MAAMiL,UAAUpO,OAAS,KACpJ,sBAAKyE,UAAU,sCAAf,mBAA6DN,KAAKhB,MAAMiL,WAAajK,KAAKhB,MAAMiL,UAAUpO,OAAS,EAAIgU,SAAS7P,KAAKhB,MAAMiL,UAAUpO,SAAWgU,SAAS7P,KAAKhB,MAAMmM,WAAa0E,SAAS7P,KAAKhB,MAAMkM,UAAY2E,SAAS7P,KAAKhB,MAAMoM,cAAgB,KAErQ,sBAAK9K,UAAU,uCAAf,oBAA8DN,KAAKhB,MAAMiL,WAAajK,KAAKhB,MAAMiL,UAAUpO,OAAS,EAAImE,KAAKhB,MAAMmM,UAAY,KAE/I,sBAAK7K,UAAU,sCAAf,mBAA4DN,KAAKhB,MAAMiL,WAAajK,KAAKhB,MAAMiL,UAAUpO,OAAS,EAAImE,KAAKhB,MAAMkM,SAAW,KAE5I,sBAAK5K,UAAU,0CAAf,sBAAmEN,KAAKhB,MAAMiL,WAAajK,KAAKhB,MAAMiL,UAAUpO,OAAS,EAAImE,KAAKhB,MAAMoM,YAAc,SAI7H,IAA3BpL,KAAKhB,MAAMmE,cAAqD,IAA5BnD,KAAKhB,MAAMqL,aAC7C,cAAC,KAAD,CACIK,MAAO1K,KAAKhB,MAAM0L,MAClB/T,KAAMqJ,KAAKhB,MAAMiL,UACjBhB,QAASA,GACTE,QAASA,IAGb,qBAAK7I,UAAU,cAAf,SACI,qBAAKA,UAAU,iBAAiBjI,KAAK,SAArC,SACI,sBAAMiI,UAAU,UAAhB,4BAGZ,eAACwP,GAAA,EAAD,CAAOtK,KAAMxF,KAAKhB,MAAMwG,KAAMuK,OAAQ,SAAAjQ,GAAC,OAAI,EAAKuL,eAAe2E,gBAAgB,eAAeC,KAAK,KAAnG,UACI,cAACH,GAAA,EAAMI,OAAP,CAAc7H,MAAO,CAAE8H,aAAc,oBAAqB3I,MAAO,WAAa4I,aAAW,EAAzF,SACI,eAACN,GAAA,EAAMO,MAAP,CAAa/P,UAAU,cAAvB,UAAqC,yDAA4BN,KAAKhB,MAAM2D,eAAmB,uBAAMrC,UAAU,kBAAhB,yBAA+CN,KAAKhB,MAAM8D,iBAE7J,eAACgN,GAAA,EAAMQ,KAAP,CAAYhQ,UAAU,aAAtB,UACI,sBAAKA,UAAU,qBAAf,UACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,8BAAf,SACI,gCAAO,yDACX,qBAAKA,UAAU,oBAAf,SACI,uBACI+F,UAAQ,EACR/F,UAAU,eACVY,MAAOlB,KAAKhB,MAAM0D,KAClBnM,KAAK,cAGfyJ,KAAKhB,MAAM0D,OAAS1C,KAAKhB,MAAM6D,cAC7B,sBAAKvC,UAAU,MAAf,UACI,qBAAKA,UAAU,8BAAf,SACI,gCAAO,0DACX,qBAAKA,UAAU,oBAAf,SACI,uBACIA,UAAU,eACVY,MAAOlB,KAAKhB,MAAM6D,aAClBwD,UAAQ,EACR9P,KAAK,cAGM,KAA1ByJ,KAAKhB,MAAM8E,YACR,sBAAKxD,UAAU,MAAf,UACI,qBAAKA,UAAU,8BAAf,SACI,gCAAO,2DAEX,qBAAKA,UAAU,oBAAf,SACI,uBACIA,UAAU,eACV+F,UAAQ,EACRnF,MAAOlB,KAAKhB,MAAM8E,kBAIlC,sBAAKxD,UAAU,MAAf,UACKN,KAAKhB,MAAM0D,OAAS1C,KAAKhB,MAAM6D,aAC5B,qBAAKvC,UAAU,8BAAf,SACI,gCAAO,2DAEX,qBAAKA,UAAU,8BAAf,SACI,gCAAO,yDAGf,qBAAKA,UAAU,oBAAf,SACI,uBACIA,UAAU,eACVY,MAAOlB,KAAKhB,MAAM4E,SAAUyC,UAAQ,YAKpD,sBAAK/F,UAAU,oBAAf,UACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,YAAjB,SAA6B,kDAEjC,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,oBAAoBY,MAAOlB,KAAKhB,MAAMiE,UAAWoD,UAAQ,SAIlF,sBAAK/F,UAAU,MAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,YAAjB,SAA6B,6DAEjC,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,oBAAoBY,MAAOlB,KAAKhB,MAAMsE,QAAS+C,UAAQ,SAIhF,sBAAK/F,UAAU,MAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,YAAjB,SAA6B,qDAEjC,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,oBAAoBY,MAAOlB,KAAKhB,MAAMyE,WAAY4C,UAAQ,eAM3F,qBAAK/F,UAAU,WAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,gCAAO,gEACP,0BACIA,UAAU,eACVY,MAAOlB,KAAKhB,MAAM4D,YAClByD,UAAQ,EACR9P,KAAK,OACLmQ,KAAK,cAGrB,oBAAIpG,UAAU,kBAAd,0BAEEN,KAAKI,MAAM7G,cAAmD,IAAnCyG,KAAKI,MAAM7G,aAAasC,SAAoC,IAApBmE,KAAKhB,MAAM+D,MAC5E,gCACI,sBAAKzC,UAAU,gBAAf,UACI,qBAAKA,UAAU,wCAAf,mCACA,qBAAKA,UAAU,wCAAf,wBACA,qBAAKA,UAAU,wCAAf,uBAEJ,qBAAKQ,GAAG,YAAR,SACwC,IAAnCd,KAAKI,MAAM7G,aAAasC,QAAgBmE,KAAKI,MAAM7G,aAAakN,KAAI,SAACZ,EAAK8B,GACvE,IAAI4I,EAAgB,aAAe5I,EAC/B6I,EAAc,YAAc7I,EAChC,OACI,sBAAKrH,UAAU,uBAAf,UACI,qBAAKA,UAAU,cAAcQ,GAAG,YAAYc,cAAY,WAAWC,cAAa0O,EAAeE,gBAAc,OAAOC,gBAAeF,EAAnI,SACI,sBAAKlQ,UAAU,eAAf,UACI,qBAAKA,UAAU,4BAAf,SAA4CuF,EAAIoH,gBAChD,sBAAK3M,UAAU,4BAAf,UAA4CuF,EAAI8K,WAAhD,OACA,sBAAKrQ,UAAU,4BAAf,UAA2C,sBAAM+H,MAAO,CAAEb,MAAuB,SAAf3B,EAAI+G,OAAqB,UAA4B,WAAf/G,EAAI+G,OAAuB,QAA0B,QAAf/G,EAAI+G,OAAoB,UAA4B,QAAf/G,EAAI+G,OAAoB,UAAY,SAA5K,SAAwL/G,EAAI+G,SAAvO,YAGR,qBAAK9L,GAAI0P,EAAalQ,UAAU,WAAWsQ,cAAY,aAAa1J,kBAAgB,YAApF,SACI,qBAAKpG,GAAG,cAAR,SACI,qBAAKR,UAAU,8BAA8BQ,GAAG,cAAhD,SACI,sBAAKR,UAAU,WAAf,UACwB,SAAnBuF,EAAI8K,WAAwB,qBAAKrQ,UAAU,oBAAf,SACzB,sBAAKA,UAAU,qBAAf,UACI,gCAAO,iDACP,0BAAUA,UAAU,eAChBY,MAAO2E,EAAIgL,SACXxK,UAAQ,EACR9P,KAAK,OACLmQ,KAAK,WAGb,sBAAKpG,UAAU,oBAAf,UACI,gCAAO,iDACP,0BAAUA,UAAU,eAChBY,MAAO2E,EAAIgL,SACXxK,UAAQ,EACR9P,KAAK,OACLmQ,KAAK,SAGjB,sBAAKpG,UAAU,oBAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,yBAAf,SACI,gCAAO,8DAEX,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,oBAAoBY,MAAO2E,EAAIiH,WAAWgE,MAAM,IAAK,GAClEzK,UAAQ,EACR9P,KAAK,cAGjB,sBAAK+J,UAAU,WAAf,UACI,qBAAKA,UAAU,yBAAf,SACI,gCAAO,qDAEX,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,oBAAoBY,MAAO2E,EAAIgH,IAC5CxG,UAAQ,EACR9P,KAAK,cAGW,cAA1BsP,EAAIkL,mBAA+D,OAA1BlL,EAAIkL,mBAC3C,gCACI,sBAAKzQ,UAAU,WAAf,UACI,qBAAKA,UAAU,yBAAf,SACI,gCAAO,6DAEX,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,oBAAoBY,MAAO2E,EAAIkL,kBAC5C1K,UAAQ,EACR9P,KAAK,cAGjB,sBAAK+J,UAAU,WAAf,UACI,qBAAKA,UAAU,yBAAf,SACI,gCAAO,oDAEX,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,oBAAoBY,MAAO2E,EAAImL,WAC5C3K,UAAQ,EACR9P,KAAK,+BAvENsP,EAAIoH,wBAsF9C,IAApBjN,KAAKhB,MAAM+D,MACR,qBAAKzC,UAAU,cAAf,SACI,qBAAKA,UAAU,iBAAiBjI,KAAK,SAArC,SACI,sBAAMiI,UAAU,UAAhB,4BAGVN,KAAKI,MAAM7G,cAAmD,IAAnCyG,KAAKI,MAAM7G,aAAasC,SAAoC,IAApBmE,KAAKhB,MAAM+D,OAAyC,IAAxB/C,KAAKhB,MAAMvH,UACxG,oBAAI6I,UAAU,cAAd,SAA6BN,KAAKhB,MAAMlH,WACpB,IAAvBkI,KAAKhB,MAAM2K,SAAqB3J,KAAKI,MAAMhB,cAAiD,QAAjCY,KAAKI,MAAMhB,aAAa/G,MAChF,qBAAKiI,UAAU,iBAAf,SACiC,WAA5BN,KAAKhB,MAAMpD,cAA6BoE,KAAKI,MAAM7G,cAEhD,wBAAQ+G,UAAU,oBAAoBoB,QAAS,SAAA5B,GAAC,OAAI,EAAKD,SAAS,CAAE8J,SAAS,KAA7E,uBAMa,IAAvB3J,KAAKhB,MAAM2K,UAA4C,IAAxB3J,KAAKhB,MAAMvH,UACxC,sBAAK6I,UAAU,iBAAf,UACI,wBAAQA,UAAU,oBAAoBoB,QAAS,SAAA5B,GAAC,OAAI,EAAKD,SAAS,CAAEpI,UAAU,EAAM6S,OAAQ,cAA5F,sBACA,wBAAQhK,UAAU,oBAAoBoB,QAAS,SAAA5B,GAAC,OAAI,EAAKD,SAAS,CAAEpI,UAAU,EAAM6S,OAAQ,WAA5F,mBACA,wBAAQhK,UAAU,oBAAoBoB,QAAS,SAAA5B,GAAC,OAAI,EAAKD,SAAS,CAAEpI,UAAU,EAAM6S,OAAQ,iBAA5F,2BAAoI,0BAI1ItK,KAAKI,MAAMhB,cAAiD,QAAjCY,KAAKI,MAAMhB,aAAa/G,OAA0C,IAAxB2H,KAAKhB,MAAMvH,UAA2C,aAAtBuI,KAAKhB,MAAMsL,QAC9G,8BACI,sBAAKhK,UAAU,WAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,gCAAO,iDACP,0BAAUA,UAAU,oBAChBY,MAAOlB,KAAKhB,MAAMuL,aAClBvJ,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE0K,aAAczK,EAAEmB,OAAOC,SACtD3K,KAAK,OACLmQ,KAAK,WAGM,gBAAtB1G,KAAKhB,MAAMsL,QACR,qBAAKhK,UAAU,MAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,gCAAO,yDACP,0BAAUA,UAAU,oBAChBY,MAAOlB,KAAKhB,MAAM2L,iBAClB3J,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE8K,iBAAkB7K,EAAEmB,OAAOC,SAC1D3K,KAAK,OACLmQ,KAAK,cAIzB,sBAAKpG,UAAU,oBAAf,UAC4B,UAAtBN,KAAKhB,MAAMsL,QAAmD,SAA5BtK,KAAKhB,MAAMpD,cAAuD,QAA5BoE,KAAKhB,MAAMpD,aAwB/E,8BACyB,UAAtBoE,KAAKhB,MAAMsL,QACR,gCACI,sBAAKhK,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,8DAE5B,qBAAKA,UAAU,oBAAf,SACI,cAAC2Q,GAAA,EAAD,CACInQ,GAAG,OACHvK,KAAK,OACL+J,UAAU,0BACVY,MAAOlB,KAAKhB,MAAMwF,KAClBxD,SAAU,SAAAlB,GAAC,OAAI,EAAKmM,qBAAqBnM,EAAEmB,OAAOC,QAClDgQ,WAAY,CAAEhN,KAAK,IAAIK,MAAO4M,cAAcC,MAAM,EAAG,KACrDC,gBAAiB,CACbC,QAAQ,UAKxB,sBAAKhR,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,qDAE5B,qBAAKA,UAAU,oBAAf,SACI,uBACIY,MAAOlB,KAAKhB,MAAMkL,IAClB7D,UAAQ,EACR/F,UAAU,mBARtB,YA5CZ,gCACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,8DAE5B,qBAAKA,UAAU,oBAAf,SACI,uBACIY,MAAOlB,KAAKhB,MAAMyL,WAAWqG,MAAM,IAAK,GACxCxQ,UAAU,eACV+F,UAAQ,SAGpB,sBAAK/F,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,qDAE5B,qBAAKA,UAAU,oBAAf,SACI,uBACIY,MAAOlB,KAAKhB,MAAMwL,UAClBnE,UAAQ,EACR/F,UAAU,mBARtB,UA4Ce,gBAAtBN,KAAKhB,MAAMsL,QAAwD,KAA5BtK,KAAKhB,MAAMpD,cAC/C,gCACI,sBAAK0E,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,8DAE5B,qBAAKA,UAAU,oBAAf,SACI,uBACIY,MAAOlB,KAAKhB,MAAMyL,WAAWqG,MAAM,IAAK,GACxCxQ,UAAU,eACV+F,UAAQ,SAGpB,sBAAK/F,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,qDAE5B,qBAAKA,UAAU,oBAAf,SACI,uBACIY,MAAOlB,KAAKhB,MAAMwL,UAClBnE,UAAQ,EACR/F,UAAU,sBAGtB,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,6DAE5B,qBAAKA,UAAU,oBAAf,SACI,cAAC2Q,GAAA,EAAD,CACInQ,GAAG,oBACHvK,KAAK,OACL+J,UAAU,0BACVY,MAAOlB,KAAKhB,MAAMmL,QAClBnJ,SAAU,SAAAlB,GAAC,OAAI,EAAKoM,oBAAoBpM,EAAEmB,OAAOC,MAAO,EAAKlC,MAAMsL,OAAQ,EAAKtL,MAAMiM,QAAS,EAAKjM,MAAMpD,eAC1GsV,WAAY,CAAEhN,KAAK,IAAIK,MAAO4M,cAAcC,MAAM,EAAG,KACrDC,gBAAiB,CACbC,QAAQ,UAKxB,sBAAKhR,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,oDAE5B,qBAAKA,UAAU,oBAAf,SACI,uBACIY,MAAOlB,KAAKhB,MAAMoL,OAClB/D,UAAQ,EACR/F,UAAU,sBAGtB,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,uDAE5B,qBAAKA,UAAU,oBAAf,SACI,yBACIY,MAAOlB,KAAKhB,MAAMgM,aAClBhK,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAEmL,aAAclL,EAAEmB,OAAOC,SACtDZ,UAAU,eAHd,UAII,wBAAQY,MAAM,GAAGqF,UAAQ,EAAzB,kCACA,kDACA,iEAKG,gBAAtBvG,KAAKhB,MAAMsL,QAAwD,KAA5BtK,KAAKhB,MAAMpD,cAC/C,gCACI,sBAAK0E,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,8DAE5B,qBAAKA,UAAU,oBAAf,SACI,cAAC2Q,GAAA,EAAD,CACInQ,GAAG,aACHvK,KAAK,OACL+J,UAAU,0BACVY,MAAOlB,KAAKhB,MAAMwF,KAClBxD,SAAU,SAAAlB,GAAC,OAAI,EAAKmM,qBAAqBnM,EAAEmB,OAAOC,QAClDgQ,WAAY,CAAEhN,KAAK,IAAIK,MAAO4M,cAAcC,MAAM,EAAG,KACrDC,gBAAiB,CACbC,QAAQ,UAKxB,sBAAKhR,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,qDAE5B,qBAAKA,UAAU,oBAAf,SACI,uBACIY,MAAOlB,KAAKhB,MAAMkL,IAClB7D,UAAQ,EACR/F,UAAU,sBAGtB,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,6DAE5B,qBAAKA,UAAU,oBAAf,SACI,cAAC2Q,GAAA,EAAD,CACInQ,GAAG,oBACHvK,KAAK,OACL+J,UAAU,0BACVY,MAAOlB,KAAKhB,MAAMmL,QAClBnJ,SAAU,SAAAlB,GAAC,OAAI,EAAKoM,oBAAoBpM,EAAEmB,OAAOC,MAAO,EAAKlC,MAAMsL,OAAQ,IAAI/F,KAAQ,EAAKvF,MAAMpD,eAClGsV,WAAY,CAAEhN,KAAK,IAAIK,MAAO4M,cAAcC,MAAM,EAAG,KACrDC,gBAAiB,CACbC,QAAQ,UAKxB,sBAAKhR,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,oDAE5B,qBAAKA,UAAU,oBAAf,SACI,uBACIY,MAAOlB,KAAKhB,MAAMoL,OAClB/D,UAAQ,EACR/F,UAAU,sBAGtB,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,uDAE5B,qBAAKA,UAAU,oBAAf,SACI,yBACIY,MAAOlB,KAAKhB,MAAMgM,aAClBhK,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAEmL,aAAclL,EAAEmB,OAAOC,SACtDZ,UAAU,eAHd,UAII,wBAAQY,MAAM,GAAGqF,UAAQ,EAAzB,kCACA,kDACA,yEASb,aAAtBvG,KAAKhB,MAAMsL,SAAiD,IAAxBtK,KAAKhB,MAAMvH,UAC5C,sBAAK6I,UAAU,MAAf,UACI,sBAAKA,UAAU,0BAAf,UACI,gCAAO,mDACP,yBACI/J,KAAK,QACL+J,UAAU,eACVY,MAAOlB,KAAKhB,MAAM4L,WAClB5J,SAAU,SAAAlB,GAAC,OAAI,EAAK0M,aAAa1M,IAJrC,UAKI,wBAAQoB,MAAM,GAAGqF,UAAQ,EAAzB,kCACCvG,KAAKhB,MAAM8L,UAAY9K,KAAKhB,MAAM8L,SAASrE,KAAI,SAACZ,GAC7C,OACI,iCAASA,EAAI0L,eAGrB,mDAGe,IAAtBvR,KAAKhB,MAAM+L,QACR,sBAAKzK,UAAU,0BAAf,UACI,gCAAO,mDACP,uBACI/J,KAAK,QACL+J,UAAU,eACVY,MAAOlB,KAAKhB,MAAMwS,YAClBxQ,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE2R,YAAa1R,EAAEmB,OAAOC,cAEjE,sBAAKZ,UAAU,2BAAf,UACI,gCAAO,qDACP,0BACIA,UAAU,eACVoG,KAAK,IACLxF,MAAOlB,KAAKhB,MAAM6L,cAClB7J,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAEgL,cAAe/K,EAAEmB,OAAOC,qBAIjD,IAAxBlB,KAAKhB,MAAMvH,UAA2C,UAAtBuI,KAAKhB,MAAMsL,QACzC,eAACwF,GAAA,EAAM2B,OAAP,WACI,wBAAQlb,KAAK,SAAS+J,UAAU,OAAO+H,MAAO,CAAEP,gBAAiB,UAAWN,MAAO,QAAU9F,QAAS,SAAA5B,GAAC,OAAI,EAAKwL,WAAW,MAAO,UAAlI,mBACA,wBAAQhL,UAAU,oBAAoBoB,QAAS,SAAA5B,GAAC,OAAI,EAAKD,SAAS,CAAEpI,UAAU,EAAOkS,SAAS,EAAOY,aAAc,GAAI/F,KAAM,GAAI0F,IAAK,MAAtI,mBAC4B,IAA3BlK,KAAKhB,MAAMmE,aAAwB,qBAAK7C,UAAU,2BAAf,SAChC,cAACuG,GAAA,EAAD,UAGc,IAAxB7G,KAAKhB,MAAMvH,UAA2C,gBAAtBuI,KAAKhB,MAAMsL,QACzC,eAACwF,GAAA,EAAM2B,OAAP,WACI,wBAAQlb,KAAK,SAAS+J,UAAU,OAAO+H,MAAO,CAAEP,gBAAiB,UAAWN,MAAO,QAAU9F,QAAS,SAAA5B,GAAC,OAAI,EAAKwL,WAAW,SAAU,gBAArI,2BACA,wBAAQhL,UAAU,oBAAoBoB,QAAS,SAAA5B,GAAC,OAAI,EAAKD,SAAS,CAAEpI,UAAU,EAAOkS,SAAS,EAAOgB,iBAAkB,GAAIK,aAAc,GAAIpB,eAAgB,GAAIO,QAAS,GAAIC,OAAQ,GAAIG,aAAc,MAAxM,mBAC4B,IAA3BvK,KAAKhB,MAAMmE,aAAwB,qBAAK7C,UAAU,2BAAf,SAChC,cAACuG,GAAA,EAAD,UAGc,IAAxB7G,KAAKhB,MAAMvH,UAA2C,aAAtBuI,KAAKhB,MAAMsL,QACzC,eAACwF,GAAA,EAAM2B,OAAP,WACI,wBAAQlb,KAAK,SAAS+J,UAAU,OAAO+H,MAAO,CAAEP,gBAAiB,UAAWN,MAAO,QAAU9F,QAAS,SAAA5B,GAAC,OAAI,EAAKyM,eAAe,aAA/H,sBACA,wBAAQjM,UAAU,oBAAoBoB,QAAS,SAAA5B,GAAC,OAAI,EAAKD,SAAS,CAAEpI,UAAU,EAAOkS,SAAS,EAAOiB,WAAY,GAAI4G,YAAa,GAAI3G,cAAe,MAArJ,mBAC4B,IAA3B7K,KAAKhB,MAAMmE,aAAwB,qBAAK7C,UAAU,2BAAf,SAChC,cAACuG,GAAA,EAAD,YAIhB,cAAC1F,EAAA,EAAD,CACIC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CC,KAAMvB,KAAKhB,MAAM/F,IACjBqH,UAAU,WACVxI,QAASkI,KAAKhB,MAAMhH,e,GAt/BbgK,aA2gCZC,gBAbS,SAAAjD,GAAK,MAAK,CAC9BxG,UAAWwG,EAAMO,KAAK/G,UACtB8F,aAAcU,EAAMO,KAAKjB,aACzBc,aAAcJ,EAAMD,KAAKK,aACzB7F,aAAcyF,EAAMO,KAAKhG,aACzBU,eAAgB+E,EAAMO,KAAKtF,eAC3BR,SAAUuF,EAAMO,KAAK9F,aAGE,SAAAxC,GAAQ,MAAK,CACpCoJ,QAAS6B,YAAmB,CAAE5J,4BAAcG,0BAAaa,oCAAkBU,8BAAeR,0BAAagB,uBAAavD,MAGzGgL,CAA6CyH,ICjnCtDT,GAAU,CACZ,CACIvG,KAAM,eACNwG,MAAO,sBACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,IAGd,CACI1G,KAAM,YACNwG,MAAO,aACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,IAGd,CACI1G,KAAM,OACNwG,MAAO,kBACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,IAEX,CACC1G,KAAM,aACNwG,MAAO,WACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,IAGd,CACI1G,KAAM,UACNwG,MAAO,sBACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,IAGd,CACI1G,KAAM,cACNwG,MAAO,cACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,IAGd,CACI1G,KAAM,aACNwG,MAAO,uBACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,IAGd,CACI1G,KAAM,MACNwG,MAAO,MACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,EACNC,iBAAkB,SAACnI,EAAOoI,EAAWC,GACjC,OACI,cAAC,GAAD,CACIrI,MAAOA,EACPyG,MAAO2B,EAAUE,SACjB5B,OAAQ,SAAAQ,GAAK,OAAImB,EAAYnB,SAMjD,CACI1F,KAAM,SACNwG,MAAO,SACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,EACNC,iBAAkB,SAACnI,EAAOoI,EAAWC,GACjC,OACI,cAAC,GAAD,CACIrI,MAAOA,EACPyG,MAAO2B,EAAUG,YACjB7B,OAAQ,SAAAQ,GAAK,OAAImB,EAAYnB,UAO/CsJ,G,4MACF1S,MAAQ,CACJ2K,SAAS,EACThT,KAAM,GACN6O,MAAM,EACNoE,eAAgB,GAChB3K,OAAQ,GACRuF,KAAM,GACN9M,OAAQ,GACRmS,YAAa,GACbC,UAAW,GACXC,MAAO,GACPrR,OAAO,EACPsR,eAAe,EACfC,UAAW,GACXvH,KAAM,GACNC,YAAa,GACbgP,eAAgB,GAChB/O,YAAa,GACbC,aAAc,GACd+O,OAAQ,GACR9O,SAAU,GACVE,MAAO,GACPC,UAAW,GACXC,WAAW,EACX2O,QAAS,GACTC,IAAK,GACLC,YAAa,GACbC,SAAU,GACVC,SAAU,GACV5N,MAAO,GACP6N,KAAM,GACNC,UAAW,GACXC,QAAS,GACTC,iBAAkB,GAClBjP,SAAU,GACVkP,SAAU,GACVpI,IAAK,GACLqI,QAAS,CAAC,YAAa,iBACvBpP,aAAa,EACbqP,iBAAiB,EACjBzP,MAAM,EACNjL,QAAS,GACT2a,WAAY,GACZpI,cAAc,EACdqI,mBAAoB,GACpBnI,aAAc,GACd3O,aAAc,GACd6H,WAAY,GACZ6G,OAAQ,GACR/G,MAAO,GACPF,SAAU,GACVC,QAAS,GACTK,gBAAiB,GACjB+G,MAAO,kB,EA0FXW,YAAc,WACV,EAAKxL,SAAS,CAAE2F,MAAM,EAAO9M,OAAO,EAAOiR,SAAS,EAAO8I,WAAY,GAAIlI,aAAc,KACzF,EAAKxG,e,EAET4O,YAAc,WACV,IAAI/G,EAAQ,IAAIrH,KAChB,GAAgC,KAA5B,EAAKvF,MAAMuL,aACX,EAAK1K,SAAS,CAAE7H,MAAO,eAAgBiB,KAAK,EAAMgH,UAAW,oBAE5D,CACD,IAAI4L,EAAM,GACV5G,OAAOC,OAAO2G,EAAK,CACfC,aAAcF,EACd9B,UAAW,EAAK1J,MAAMhB,aAAaxH,UACnCkL,SAAU,EAAK9D,MAAM8D,SACrBpL,OAAQ,OACR6S,aAAc,EAAKvL,MAAMuL,aAAapF,QAAQ,iBAAkB,KAChE,MAAS,EAAK/E,MAAMhB,aAAaxH,UAAWS,KAAM,EAAK+H,MAAMhB,aAAa/G,KAC1Eqa,mBAAoB,EAAK1T,MAAM0T,mBAC/BxI,IAAK,EAAKlL,MAAM4T,YAChB7G,OAAQ,OACRC,UAAgE,OAArD,EAAK5L,MAAMhB,aAAaqN,QAAQ,GAAhC,WAA4D,EAAKrM,MAAMhB,aAAaqN,QAAQ,GAAhC,WAAmD,GAC1H1C,MAAO,EAAK/K,MAAM+K,MAClBpH,YAAa,EAAK3D,MAAM2D,YACxBmB,WAAY,EAAK9E,MAAM8E,WACvBpB,KAAM,EAAK1D,MAAM0D,KACjBO,UAAW,EAAKjE,MAAMiE,UACtBqP,SAAU,EAAKtT,MAAMsT,SACrB1O,SAAU,EAAK5E,MAAM4E,SACrBN,QAAS,EAAKtE,MAAMsE,QACpBT,aAAc,EAAK7D,MAAM6D,aACzBlM,KAAM,QACN0O,aAAc,EAAKjF,MAAMhB,aAAahH,SACtCkN,cAAe,EAAKlF,MAAMhB,aAAaxH,YAE3C,EAAKiI,SAAS,CAAEsD,aAAa,IAC7B,EAAK/C,MAAMC,QAAQ5H,YAAYoT,GAC/BjM,YAAW,WACH,EAAKQ,MAAM9B,cAAmD,MAAnC,EAAK8B,MAAM9B,aAAa5G,QAA2D,oBAAzC,EAAK0I,MAAM9B,aAAa3H,KAAKmB,SAClG,EAAK+H,SAAS,CAAE7H,MAAO,kDAAmDiB,KAAK,EAAMgH,UAAW,eAAgBkD,aAAa,IAC7H,EAAKnL,QACL,EAAKoI,MAAMC,QAAQ7F,UAAUqR,GAC7B,EAAKtG,UAGL,EAAK1F,SAAS,CAAE2F,MAAM,EAAMvM,KAAK,EAAMjB,MAAO,uBAAwBiI,UAAW,cAAekD,aAAa,IAC7G,EAAKnL,WAEV,O,EAGXA,MAAQ,WACJ4H,YAAW,WACP,EAAKC,SAAS,CAAE5G,KAAK,EAAOjB,MAAO,OACpC,O,EAEPuN,MAAQ,WACJ3F,YAAW,WACP,EAAKmE,gBACN,M,EAEPA,YAAc,WACV,EAAKlE,SAAS,CACV8J,SAAS,EACThT,KAAM,GACN6O,MAAM,EACNoE,eAAgB,GAChB3K,OAAQ,GACRuF,KAAM,GACN9M,OAAQ,GACRmS,YAAa,GACbC,UAAW,GACXC,MAAO,GACPrR,OAAO,EACPsR,eAAe,EAEftH,KAAM,GACNC,YAAa,GACbgP,eAAgB,GAChB/O,YAAa,GACbC,aAAc,GACd+O,OAAQ,GACR9O,SAAU,GACVE,MAAO,GACPC,UAAW,GACXC,WAAW,EACX2O,QAAS,GACTC,IAAK,GACLC,YAAa,GACbC,SAAU,GACVC,SAAU,GACV5N,MAAO,GACP6N,KAAM,GACNC,UAAW,GACXC,QAAS,GACTC,iBAAkB,GAClBjP,SAAU,GACVkP,SAAU,GACVpI,IAAK,GACLqI,QAAS,CAAC,YAAa,iBACvBpP,aAAa,EACbqP,iBAAiB,EACjBzP,MAAM,EACNjL,QAAS,GACT2a,WAAY,GACZpI,cAAc,EACdqI,mBAAoB,GACpBnI,aAAc,GACd3O,aAAc,GACd6H,WAAY,GACZ6G,OAAQ,GAERjH,SAAU,GACVM,gBAAiB,GACjBL,QAAS,M,EAGjBkD,iBAAmB,SAAC1G,GAChB,IAAIwD,EACJ,EAAKtE,MAAMuE,OAAS,EAAKvE,MAAMuE,MAAMqC,SAAQ,SAAUC,GAC/CA,EAAInD,OAAS5C,EAAEmB,OAAOC,QACtBoC,EAAUuC,EAAIvC,YAGtB,EAAKzD,SAAS,CAAEoD,UAAWnD,EAAEmB,OAAOC,MAAOmC,SAAUC,EAAS+O,iBAAkB,GAAI/O,QAAS,GAAIG,WAAY,M,EAGjHoP,WAAa,WACT,IAEInN,EACApC,EAHAwP,EAAW,EAAK9T,MAAMiE,UACtB8P,EAAK,EAAK/T,MAAMsE,QAGpB,EAAKtE,MAAMuE,OAAS,EAAKvE,MAAMuE,MAAMqC,SAAQ,SAAUC,GAC/CA,EAAInD,OAASoQ,IACbxP,EAAUuC,EAAIvC,QACduC,EAAIpC,YAAcoC,EAAIpC,WAAWmC,SAAQ,SAACrP,GAClCA,EAAK+M,UAAYyP,IACjBrN,EAAQnP,EAAKA,aAK7B,EAAKsJ,SAAS,CAAEyK,OAAQ,OAAQrH,UAAW6P,EAAUzP,SAAUC,EAASK,gBAAiB+B,K,EAE7F1B,aAAe,WACX,EAAKnE,SAAS,CAAEsD,aAAa,IAC7B,EAAK/C,MAAMC,QAAQnH,WAAW,EAAK8L,eACnCpF,YAAW,WACH,EAAKQ,MAAMjH,cAAmD,MAAnC,EAAKiH,MAAMjH,aAAazB,QAA2D,WAAzC,EAAK0I,MAAMjH,aAAaxC,KAAKmB,SAClG,EAAK+H,SAAS,CAAE7H,MAAO,iBAAkBiB,KAAK,EAAMgH,UAAW,eAAgBkD,aAAa,EAAOO,SAAU,YAC7G,EAAK1L,QACL,EAAKoI,MAAMC,QAAQtH,WAAW,EAAKiM,eACnC,EAAK5E,MAAMC,QAAQrH,UAAU,EAAKgM,eAClC,EAAKO,UAGL,EAAK1F,SAAS,CAAE2F,MAAM,EAAOvM,KAAK,EAAMjB,MAAO,uBAAwBiI,UAAW,cAAekD,aAAa,IAC9G,EAAKnL,WAEV,M,EAEPgN,YAAc,WACV,IAAIV,EAAK,IAAIC,KACTC,EAAOF,EAAGG,UACVD,GAAQ,IACRA,EAAO,IAAMA,GAEjB,IAAIE,EAAQJ,EAAGK,WAAa,EACxBD,GAAS,IACTA,EAAQ,IAAMA,GAElB,IAAIE,EAAON,EAAGO,WACVD,GAAQ,IACRA,EAAO,IAAMA,GAEjB,IAIIrO,EAJA2N,EAAMI,EAAGS,aACTb,GAAO,IACPA,EAAM,IAAMA,GAIZ3N,EADA,EAAKyI,MAAM0D,OAAS,EAAK1D,MAAM6D,aACxB,SAGA,OAEX,IAAIlM,EAAO,EAAKqI,aACTrI,EAAKsC,WACLtC,EAAKqB,MAEZ,OAAOiN,OAAOC,OADI,GACgB,CAC9B3O,KAAMA,EACN0M,UAAW,EAAKjE,MAAMiE,UACtBP,KAAM,EAAK1D,MAAM0D,KACjBG,aAAc,EAAK7D,MAAM6D,aACzBO,SAAU,EAAKpE,MAAMoE,SACrBR,YAAa,EAAK5D,MAAM4D,YAAYuC,QAAQ,iBAAkB,KAC9DvB,SAAU,EAAK5E,MAAM4E,SACrBjB,YAAa6B,EAAO,IAAME,EAAQ,IAAMJ,EAAGc,cAAgB,IAAMR,EAAO,IAAMV,EAE9EpB,SAAU,EAAK9D,MAAM8D,SACrBQ,QAAS,EAAKtE,MAAMsE,QACpBQ,WAAY,EAAK9E,MAAM8E,WACvBN,UAAW,EAAKxE,MAAMwE,UACtBC,WAAY,EAAKzE,MAAMyE,WACvB,MAAS,EAAKrD,MAAMhB,aAAaxH,UACjCS,KAAM,EAAK+H,MAAMhB,aAAa/G,KAC9BqQ,IAAK,SACLrD,aAAc,EAAKjF,MAAMhB,aAAahH,SACtCkN,cAAe,EAAKlF,MAAMhB,aAAaxH,a,EAG/Cob,eAAiB,SAAClQ,GACd,EAAK1C,MAAMC,QAAQjH,eAAe,CAAE,SAAY0J,EAAU,MAAS,EAAK1C,MAAMhB,aAAaxH,UAAWS,KAAM,EAAK+H,MAAMhB,aAAa/G,KAAMgN,aAAc,EAAKjF,MAAMhB,aAAahH,WAChL,EAAKyH,SAAS,CAAEsD,aAAa,IAC7BvD,YAAW,WACH,EAAKQ,MAAM/G,kBAA2D,MAAvC,EAAK+G,MAAM/G,iBAAiB3B,QAA+D,aAA7C,EAAK0I,MAAM/G,iBAAiB1C,KAAKmB,SAC9G,EAAK+H,SAAS,CAAE7H,MAAO,gCAAiCiB,KAAK,EAAMgH,UAAW,eAAgBkD,aAAa,IAC3G,EAAKnL,QACL,EAAKuN,QACL,EAAKnF,MAAMC,QAAQ5F,mBAAmB,EAAKuK,iBAG3C,EAAKnF,SAAS,CAAE2F,MAAM,EAAOvM,KAAK,EAAMjB,MAAO,uBAAwBiI,UAAW,cAAekD,aAAa,IAC9G,EAAKnL,WAEV,M,EAEPyN,kBAAoB,SAAC3F,GACjB,IAAI4F,EACAC,EAAQ,EAAK3G,MAAMiE,UACvB,EAAKjE,MAAMuE,OAAS,EAAKvE,MAAMuE,MAAMqC,SAAQ,SAAUC,GAC/CA,EAAInD,OAASiD,GACbE,EAAIpC,YAAcoC,EAAIpC,WAAWmC,SAAQ,SAACrP,GAClCA,EAAK+M,UAAYxD,IACjB4F,EAAQnP,EAAKA,YAK7B,EAAKsJ,SAAS,CAAEyD,QAASxD,EAAG6D,gBAAiB+B,EAAOjC,WAAY,M,+DAxUpE,WACIzD,KAAKI,MAAMC,QAAQ/H,aAAa,CAAE,MAAS0H,KAAKI,MAAMhB,aAAaxH,UAAW,KAAQoI,KAAKI,MAAMhB,aAAa/G,KAAM1B,KAAM,UAC1HqJ,KAAKH,SAAS,CAAE2S,iBAAiB,IACjCxS,KAAKI,MAAMC,QAAQnG,qB,gCAEvB,SAAmB6L,GACf,GAAIA,EAAUvN,YAAcwH,KAAKI,MAAM5H,UACnC,GAAIwH,KAAKI,MAAM5H,UAAW,CAEtB,IAAIoT,EAAQ,IAAIrH,KACZ2G,EAAW,EAAGE,EAAc,EAAGD,EAAY,EAC/CnL,KAAKI,MAAM5H,UAAU4Q,MAAK,SAAUnD,EAAGyG,GAGnC,OAFU,IAAInI,KAAMmI,EAAEC,aAAcL,UAAU,EAAG,IAAM,IAAOI,EAAEC,aAAcL,UAAU,EAAG,GAAMI,EAAEC,aAAcL,UAAU,EAAG,GAAK,IAAOI,EAAEC,aAAcL,UAAU,GAAI,KAC9J,IAAI/H,KAAM0B,EAAE0G,aAAcL,UAAU,EAAG,IAAM,IAAOrG,EAAE0G,aAAcL,UAAU,EAAG,GAAMrG,EAAE0G,aAAcL,UAAU,EAAG,GAAK,IAAOrG,EAAE0G,aAAcL,UAAU,GAAI,QAG5KtM,KAAKI,MAAM5H,WAAawH,KAAKI,MAAM5H,UAAUoN,SAAQ,SAACC,GAClD,GAAIA,EAAIgH,IAAK,CAET,IAAIT,EAAOvG,EAAIiH,WAAYR,UAAU,EAAG,IAAM,IAAOzG,EAAIiH,WAAYR,UAAU,EAAG,GAAMzG,EAAIiH,WAAYR,UAAU,EAAG,GACjHD,EAAM,IAAI9H,KAAK6H,GACnB,GAAmB,WAAfvG,EAAI+G,OACJxB,GAA4B,EAC5BnG,OAAOC,OAAOW,EAAK,CAAE,IAAOA,EAAIgH,UAE/B,CACkB,SAAfhH,EAAI+G,OACJzB,GAAwB,EAEJ,QAAftF,EAAI+G,SACT1B,GAAsB,GAE1B,IAAI6B,EAAUxE,GAAYqD,EAAOS,GACjC,KAAIT,EAAQS,GAIR,OAAOU,EAHPA,EAAU,IAAMA,EAMpB9H,OAAOC,OAAOW,EAAK,CAAE,IAAOkH,SAIxC/M,KAAKH,SAAS,CAAEoK,UAAWjK,KAAKI,MAAM5H,UAAW6R,cAAc,EAAMmI,iBAAiB,EAAOtH,SAAUA,EAAUC,UAAWA,EAAWC,YAAaA,SAGpJpL,KAAKH,SAAS,CAAEoK,UAAW,GAAII,cAAc,EAAMmI,iBAAiB,IAG5E,GAAIzM,EAAUxM,eAAiByG,KAAKI,MAAM7G,aACtC,GAAuC,IAAnCyG,KAAKI,MAAM7G,aAAasC,OAAc,CACtC,IAAK,IAAImR,EAAI,EAAGA,EAAIhN,KAAKI,MAAM7G,aAAasC,OAAQmR,IAChDhN,KAAKH,SAAS,CAAEjE,aAAcoE,KAAKI,MAAM7G,aAAa,GAAGqT,SAE7D5M,KAAKH,SAAS,CAAEkD,MAAM,EAAM0P,WAAYzS,KAAKI,MAAM7G,oBAEX,IAAnCyG,KAAKI,MAAM7G,aAAasC,QAC7BmE,KAAKH,SAAS,CAAEkD,MAAM,EAAMjL,QAAS,gBAGzCiO,EAAUxH,aAAeyB,KAAKI,MAAM7B,YAEhCyB,KAAKI,MAAM7B,YAA+C,IAAjCyB,KAAKI,MAAM7B,WAAW1C,QAC/CmE,KAAKH,SAAS,CAAE0D,MAAOvD,KAAKI,MAAM7B,e,oBA0Q9C,WAAU,IAAD,OAGC4K,EAAU,CACZmE,WAAY,kBACZC,gBAAgB,EAChBC,WAAY,SAACC,EAAD,GAAuB,IAAjBC,EAAgB,EAAhBA,UACVC,EAAgB,EAAK3O,MAAMiL,UAAUyD,GACzC,EAAKtN,MAAMC,QAAQ/G,iBAAiB,CAAE,OAAUqU,EAAc3R,YAC9D,EAAK6D,SAAS,CACV2F,MAAM,EACNzC,MAAM,EACNL,KAAMiL,EAAcC,KACpB/K,aAAc8K,EAAcE,WAC5B5K,UAAW0K,EAAcK,WACzBrL,YAAagL,EAAchB,aAC3B/J,YAAa+K,EAAcG,YAC3BhL,SAAU6K,EAAc3R,UACxB4H,SAAU+J,EAAcI,SACxB3K,SAAUuK,EAAcM,SACxB3K,QAASqK,EAAcO,QACvBwE,mBAAoB/E,EAAcb,WAClC8F,YAAajF,EAAcd,IAC3B/I,WAAY6J,EAAcQ,cAC1B1K,WAAYkK,EAAcS,YAC1BrE,MAAO4D,EAAcU,MACrB7K,UAAWmK,EAAcsF,eAGjC3E,WAAY,CACRC,KAAM,CACFC,QAAS,mCACTC,QAAS,OACTC,oBAAqB,SAAAC,GAAM,yBAAgBA,EAAOzF,SAEtD0F,WAAY,CACRC,KAAM,YACNC,SAAU,gBACVC,YAAa,iBACbC,YAAa,MAEjBC,QAAS,CACLC,OAAQ,SACRC,YAAa,eACbC,MAAO,QACPC,YAAa,eACbC,YAAa,gBAEjBxT,OAAQ,CACJyT,IAAK,MACL7E,MAAO,UACP8E,MAAO,SAEXH,YAAa,CACT3E,MAAO,eACP+E,UAAW,2BAEfC,aAAc,CACV1G,KAAM,kBACN2G,OAAQ,SACRC,WAAY,0BAIxB,OACI,sBAAKtP,UAAU,wBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,4BAAf,6BAA4DN,KAAKhB,MAAMiL,WAAajK,KAAKhB,MAAMiL,UAAUpO,OAAS,EAAImE,KAAKhB,MAAMiL,UAAUpO,OAAS,KACpJ,sBAAKyE,UAAU,sCAAf,kBACCN,KAAKhB,MAAMiL,WAAajK,KAAKhB,MAAMiL,UAAUpO,OAAS,EAAIgU,SAAS7P,KAAKhB,MAAMiL,UAAUpO,SAAWgU,SAAS7P,KAAKhB,MAAMmM,WAAa0E,SAAS7P,KAAKhB,MAAMkM,UAAY2E,SAAS7P,KAAKhB,MAAMoM,cAAgB,KAEzM,sBAAK9K,UAAU,uCAAf,oBAA8DN,KAAKhB,MAAMiL,WAAajK,KAAKhB,MAAMiL,UAAUpO,OAAS,EAAImE,KAAKhB,MAAMmM,UAAY,KAE/I,sBAAK7K,UAAU,sCAAf,mBAA4DN,KAAKhB,MAAMiL,WAAajK,KAAKhB,MAAMiL,UAAUpO,OAAS,EAAImE,KAAKhB,MAAMkM,SAAW,KAE5I,sBAAK5K,UAAU,yCAAf,sBAAkEN,KAAKhB,MAAMiL,WAAajK,KAAKhB,MAAMiL,UAAUpO,OAAS,EAAImE,KAAKhB,MAAMoM,YAAc,SAIxH,IAA/BpL,KAAKhB,MAAMwT,kBAAyD,IAA5BxS,KAAKhB,MAAMqL,aACjD,cAAC,KAAD,CACIK,MAAO1K,KAAKhB,MAAM0L,MAClB/T,KAAMqJ,KAAKhB,MAAMiL,UACjBhB,QAASA,GACTE,QAASA,IAGb,qBAAK7I,UAAU,cAAf,SACI,qBAAKA,UAAU,iBAAiBjI,KAAK,SAArC,SACI,sBAAMiI,UAAU,UAAhB,4BAIZ,eAACwP,GAAA,EAAD,CAAOtK,KAAMxF,KAAKhB,MAAMwG,KAAMuK,OAAQ,SAAAjQ,GAAC,OAAI,EAAKuL,eAAe2E,gBAAgB,eAAeC,KAAK,KAAnG,UACI,cAACH,GAAA,EAAMI,OAAP,CAAc7H,MAAO,CAAE8H,aAAc,oBAAqB3I,MAAO,WAAa4I,aAAW,EAAzF,SACI,eAACN,GAAA,EAAMO,MAAP,CAAa/P,UAAU,cAAvB,UAAqC,0DAA6BN,KAAKhB,MAAM2D,eAAmB,uBAAMrC,UAAU,kBAAhB,yBAA+CN,KAAKhB,MAAM8D,iBAG9J,eAACgN,GAAA,EAAMQ,KAAP,CAAYhQ,UAAU,aAAtB,UAC2B,SAAtBN,KAAKhB,MAAMsL,OACR,sBAAKhK,UAAU,qBAAf,UACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,8BAAf,SACI,gCAAO,yDACX,qBAAKA,UAAU,oBAAf,SACI,uBACI+F,UAAQ,EACR/F,UAAU,eACVY,MAAOlB,KAAKhB,MAAM0D,KAClBnM,KAAK,cAGfyJ,KAAKhB,MAAM0D,OAAS1C,KAAKhB,MAAM6D,cAC7B,sBAAKvC,UAAU,MAAf,UACI,qBAAKA,UAAU,8BAAf,SACI,gCAAO,0DACX,qBAAKA,UAAU,oBAAf,SACI,uBACIA,UAAU,eACVY,MAAOlB,KAAKhB,MAAM6D,aAClBwD,UAAQ,EACR9P,KAAK,mBAGMkJ,IAA1BO,KAAKhB,MAAM8E,YACR,sBAAKxD,UAAU,MAAf,UACI,qBAAKA,UAAU,8BAAf,SACI,gCAAO,2DAEX,qBAAKA,UAAU,oBAAf,SACI,uBACIA,UAAU,eACV+F,UAAQ,EACRnF,MAAOlB,KAAKhB,MAAM8E,kBAIlC,sBAAKxD,UAAU,MAAf,UACKN,KAAKhB,MAAM0D,OAAS1C,KAAKhB,MAAM6D,aAC5B,qBAAKvC,UAAU,8BAAf,SACI,gCAAO,2DAGX,qBAAKA,UAAU,8BAAf,SACI,gCAAO,yDAEf,qBAAKA,UAAU,oBAAf,SACI,uBACIA,UAAU,eACVY,MAAOlB,KAAKhB,MAAM4E,SAAUyC,UAAQ,YAKpD,sBAAK/F,UAAU,oBAAf,UACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,YAAjB,SAA6B,kDAEjC,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,oBAAoBY,MAAOlB,KAAKhB,MAAMiE,UAAWoD,UAAQ,SAIlF,sBAAK/F,UAAU,MAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,YAAjB,SAA6B,6DAEjC,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,oBAAoBY,MAAOlB,KAAKhB,MAAMsE,QAAS+C,UAAQ,SAIhF,sBAAK/F,UAAU,MAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,YAAjB,SAA6B,qDAEjC,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,oBAAoBY,MAAOlB,KAAKhB,MAAMyE,WAAY4C,UAAQ,eAM3F,qBAAK/F,UAAU,WAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,gCAAO,gEACP,0BACIA,UAAU,eACVY,MAAOlB,KAAKhB,MAAM4D,YAClByD,UAAQ,EACR9P,KAAK,OACLmQ,KAAK,cAIrB,sBAAKpG,UAAU,qBAAf,UACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,8BAAf,SACI,gCAAO,yDACX,qBAAKA,UAAU,oBAAf,SACI,uBACI+F,UAAQ,EACR/F,UAAU,eACVY,MAAOlB,KAAKhB,MAAM0D,KAClB1B,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE6C,KAAM5C,EAAEmB,OAAOC,SAC9C3K,KAAK,cAGfyJ,KAAKhB,MAAM0D,OAAS1C,KAAKhB,MAAM6D,cAC7B,sBAAKvC,UAAU,MAAf,UACI,qBAAKA,UAAU,8BAAf,SACI,gCAAO,0DACX,qBAAKA,UAAU,oBAAf,SACI,uBACI+F,UAAQ,EACR/F,UAAU,eACVY,MAAOlB,KAAKhB,MAAM6D,aAClB7B,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAEgD,aAAc/C,EAAEmB,OAAOC,SACtD3K,KAAK,mBAGMkJ,IAA1BO,KAAKhB,MAAM8E,YACR,sBAAKxD,UAAU,MAAf,UACI,qBAAKA,UAAU,8BAAf,SACI,gCAAO,2DAEX,qBAAKA,UAAU,oBAAf,SACI,uBACIA,UAAU,eACVY,MAAOlB,KAAKhB,MAAM8E,WAClB9C,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAEiE,WAAYhE,EAAEmB,OAAOC,gBAKpE,sBAAKZ,UAAU,MAAf,UACKN,KAAKhB,MAAM0D,OAAS1C,KAAKhB,MAAM6D,aAC5B,qBAAKvC,UAAU,8BAAf,SACI,gCAAO,2DAGX,qBAAKA,UAAU,8BAAf,SACI,gCAAO,yDAEf,qBAAKA,UAAU,oBAAf,SACI,yBACIA,UAAU,eACVY,MAAOlB,KAAKhB,MAAM4E,SAClB5C,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE+D,SAAU9D,EAAEmB,OAAOC,SAHtD,UAII,2BACA,2CAAc,8BAAd,OACA,6CAAgB,+CAChB,0CAAa,wCAK7B,sBAAKZ,UAAU,oBAAf,UACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,YAAjB,SAA6B,kDAEjC,qBAAKA,UAAU,oBAAf,SACI,yBAAQA,UAAU,oBAAoBY,MAAOlB,KAAKhB,MAAMiE,UACpDjC,SAAU,SAAAlB,GAAC,OAAI,EAAK0G,iBAAiB1G,IADzC,UAEI,wBAAQoB,MAAM,GAAGqF,UAAQ,EAAzB,kCACCvG,KAAKhB,MAAMuE,OAASvD,KAAKhB,MAAMuE,MAAMkD,KAAI,SAACZ,GACvC,OACI,iCAAwBA,EAAInD,MAAfmD,EAAInD,iBAMpC1C,KAAKhB,MAAMqE,UAA2C,IAA/BrD,KAAKhB,MAAMqE,SAASxH,QACxC,gCACI,sBAAKyE,UAAU,MAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,YAAjB,SAA6B,6DAEjC,qBAAKA,UAAU,oBAAf,SACI,yBAAQA,UAAU,oBAAoBY,MAAOlB,KAAKhB,MAAMsE,QACpDtC,SAAU,SAAAlB,GAAC,OAAI,EAAK2F,kBAAkB3F,EAAEmB,OAAOC,QADnD,UAGI,wBAAQA,MAAM,GAAGqF,UAAQ,EAAzB,kCACCvG,KAAKhB,MAAMqE,UAAYrD,KAAKhB,MAAMqE,SAASoD,KAAI,SAACZ,EAAK8B,GAClD,OACI,iCAAqB9B,GAAR8B,cAMjC,sBAAKrH,UAAU,MAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,YAAjB,SAA6B,qDAEjC,qBAAKA,UAAU,oBAAf,SACI,yBAAQA,UAAU,oBAAoBY,MAAOlB,KAAKhB,MAAMyE,WACpDzC,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE4D,WAAY3D,EAAEmB,OAAOC,SADxD,UAEI,wBAAQA,MAAM,GAAGqF,UAAQ,EAAzB,kCACCvG,KAAKhB,MAAM2E,iBAAmB3D,KAAKhB,MAAM2E,gBAAgB8C,KAAI,SAACZ,EAAK8B,GAChE,OACI,iCAAqB9B,GAAR8B,uBASjD,qBAAKrH,UAAU,WAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,gCAAO,mDACP,0BACIA,UAAU,eACVY,MAAOlB,KAAKhB,MAAM4D,YAClB5B,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE+C,YAAa9C,EAAEmB,OAAOC,SACrD3K,KAAK,OACLmQ,KAAK,cAGY,IAAnC1G,KAAKI,MAAM7G,aAAasC,SAAoC,IAApBmE,KAAKhB,MAAM+D,MAAuC,KAAtB/C,KAAKhB,MAAMsL,QAC7E,sBAAKhK,UAAU,iBAAf,UACI,wBAAQ/J,KAAK,SAAS+J,UAAU,oBAAoB+H,MAAO,CAAEP,gBAAiB,UAAWN,MAAO,QAC5F9F,QAAS,SAAA5B,GAAC,OAAI,EAAK+S,cADvB,kBAGA,wBAAQtc,KAAK,SAAS+J,UAAU,oBAAoB+H,MAAO,CAAEP,gBAAiB,UAAWN,MAAO,QAC5F9F,QAAS,SAAA5B,GAAC,OAAI,EAAKkT,eAAe,EAAKhU,MAAM8D,WADjD,qBAG4B,IAA3B9C,KAAKhB,MAAMmE,aACR,qBAAK7C,UAAU,iBAAiBjI,KAAK,SAArC,SACI,sBAAMiI,UAAU,UAAhB,6BAKQ,SAAtBN,KAAKhB,MAAMsL,QAAsB,oBAAIhK,UAAU,kBAAd,0BAEjCN,KAAKhB,MAAMyT,YAA+C,IAAjCzS,KAAKhB,MAAMyT,WAAW5W,SAAoC,IAApBmE,KAAKhB,MAAM+D,MACxE,gCACI,sBAAKzC,UAAU,gBAAf,UACI,qBAAKA,UAAU,wCAAf,mCACA,qBAAKA,UAAU,wCAAf,wBACA,qBAAKA,UAAU,wCAAf,uBAEJ,qBAAKQ,GAAG,YAAR,SACsC,IAAjCd,KAAKhB,MAAMyT,WAAW5W,QAAgBmE,KAAKhB,MAAMyT,WAAWhM,KAAI,SAACZ,EAAK8B,GACnE,IAAI4I,EAAgB,aAAe5I,EAC/B6I,EAAc,YAAc7I,EAChC,OACI,sBAAKrH,UAAU,uBAAf,UACI,qBAAKA,UAAU,cAAcQ,GAAG,YAAYc,cAAY,WAAWC,cAAa0O,EAAeE,gBAAc,OAAOC,gBAAeF,EAAnI,SACI,sBAAKlQ,UAAU,eAAf,UACI,qBAAKA,UAAU,4BAAf,SAA4CuF,EAAIoH,gBAChD,sBAAK3M,UAAU,4BAAf,UAA4CuF,EAAI8K,WAAhD,OACA,sBAAKrQ,UAAU,4BAAf,UAA2C,sBAAM+H,MAAO,CAAEb,MAAuB,SAAf3B,EAAI+G,OAAqB,UAA4B,WAAf/G,EAAI+G,OAAuB,QAA0B,QAAf/G,EAAI+G,OAAoB,UAA4B,QAAf/G,EAAI+G,OAAoB,UAAY,SAA5K,SAAwL/G,EAAI+G,SAAvO,YAGR,qBAAK9L,GAAI0P,EAAalQ,UAAU,WAAWsQ,cAAY,aAAa1J,kBAAgB,YAApF,SACI,qBAAKpG,GAAG,cAAR,SACI,qBAAKR,UAAU,8BAA8BQ,GAAG,cAAhD,SACI,sBAAKR,UAAU,WAAf,UACwB,SAAnBuF,EAAI8K,WAAwB,qBAAKrQ,UAAU,oBAAf,SACQ,aAAhC,EAAKtB,MAAMqT,iBACR,sBAAK/R,UAAU,qBAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,gCAAO,+DAEX,qBAAKA,UAAU,oBAAf,SACI,0BAAUA,UAAU,oBAChBY,MAAO2E,EAAIqN,OACX7M,UAAQ,EACR9P,KAAK,OACLmQ,KAAK,WAGjB,sBAAKpG,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,gCAAO,qEAEX,qBAAKA,UAAU,oBAAf,SACI,0BAAUA,UAAU,oBAAoBY,MAAO2E,EAAIsN,KAC/C5c,KAAK,OACL8P,UAAQ,EACRK,KAAK,cAKrB,sBAAKpG,UAAU,qBAAf,UACI,gCAAO,iDACP,0BAAUA,UAAU,eAChBY,MAAO2E,EAAIgL,SACXxK,UAAQ,EACR9P,KAAK,OACLmQ,KAAK,WAEjB,sBAAKpG,UAAU,oBAAf,UACI,gCAAO,iDACP,0BAAUA,UAAU,eAChBY,MAAO2E,EAAIgL,SACXxK,UAAQ,EACR9P,KAAK,OACLmQ,KAAK,SAGjB,sBAAKpG,UAAU,oBAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,yBAAf,SACI,gCAAQ,8DAEZ,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,oBAAoBY,MAAO2E,EAAIiH,WAAWgE,MAAM,IAAK,GAClEzK,UAAQ,EACR9P,KAAK,cAGW,cAA1BsP,EAAIkL,mBAA+D,OAA1BlL,EAAIkL,mBAC3C,sBAAKzQ,UAAU,WAAf,UACI,qBAAKA,UAAU,yBAAf,SACI,gCAAO,6DAEX,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,oBAAoBY,MAAO2E,EAAIkL,kBAC5C1K,UAAQ,EACR9P,KAAK,mCAanC,IAArByJ,KAAKhB,MAAMtG,OAA+C,WAA5BsH,KAAKhB,MAAMpD,cACtC,sBAAK0E,UAAU,iBAAf,UACI,wBAAQA,UAAU,oBAAoBoB,QAAS,SAAA5B,GAAC,OAAI,EAAKD,SAAS,CAAEnH,OAAO,KAA3E,mBACA,yBAAQ4H,UAAU,oBAAoBoB,QAAS,SAAA5B,GAAC,OAAI,EAAKkT,eAAe,EAAKhU,MAAM8D,WAAnF,0BAC4B,IAA3B9C,KAAKhB,MAAMmE,aACJ,qBAAK7C,UAAU,iBAAiBjI,KAAK,SAArC,SACI,sBAAMiI,UAAU,UAAhB,iCAIE,IAArBN,KAAKhB,MAAMtG,OACR,qBAAK4H,UAAU,MAAf,SACI,sBAAKA,UAAU,2BAAf,UACI,gCAAO,6CACP,0BACIA,UAAU,eACVY,MAAOlB,KAAKhB,MAAMuL,aAClB7D,KAAK,IACL1F,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE0K,aAAczK,EAAEmB,OAAOC,oBAIzD,IAApBlB,KAAKhB,MAAM+D,MACR,qBAAKzC,UAAU,cAAf,SACI,qBAAKA,UAAU,iBAAiBjI,KAAK,SAArC,SACI,sBAAMiI,UAAU,UAAhB,4BAGyB,IAAnCN,KAAKI,MAAM7G,aAAasC,SAAoC,IAApBmE,KAAKhB,MAAM+D,MAAuC,SAAtB/C,KAAKhB,MAAMsL,QAC7E,oBAAIhK,UAAU,cAAd,SAA6BN,KAAKhB,MAAMlH,cAGvB,IAArBkI,KAAKhB,MAAMtG,OACX,eAACoX,GAAA,EAAM2B,OAAP,WACI,wBAAQlb,KAAK,SAAS+J,UAAU,MAAM+H,MAAO,CAAEP,gBAAiB,UAAWN,MAAO,QAAU9F,QAAS,SAAA5B,GAAC,OAAI,EAAK6S,eAA/G,oBAC4B,IAA3B3S,KAAKhB,MAAMmE,aAAwB,qBAAK7C,UAAU,2BAAf,SAChC,cAACuG,GAAA,EAAD,SAIW,SAAtB7G,KAAKhB,MAAMsL,QACR,eAACwF,GAAA,EAAM2B,OAAP,WAEI,yBAAQlb,KAAK,SAAS+J,UAAU,oBAAoB+H,MAAO,CAAEP,gBAAiB,UAAWN,MAAO,QAAU9F,QAAS,SAAA5B,GAAC,OAAI,EAAKkE,gBAA7H,oBACgC,IAA3BhE,KAAKhB,MAAMmE,aACR,qBAAK7C,UAAU,iBAAiBjI,KAAK,SAArC,SACI,sBAAMiI,UAAU,UAAhB,6BAGZ,wBAAQ/J,KAAK,SAAS+J,UAAU,oBAAoB+H,MAAO,CAAEP,gBAAiB,UAAWN,MAAO,QAAU9F,QAAS,SAAA5B,GAAC,OAAI,EAAKD,SAAS,CAAEyK,OAAQ,MAAhJ,wBAKZ,cAACnJ,EAAA,EAAD,CACIC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CC,KAAMvB,KAAKhB,MAAM/F,IACjBqH,UAAU,WACVxI,QAASkI,KAAKhB,MAAMhH,e,GA13BpBgK,aAi5BLC,gBAfS,SAAAjD,GAAK,MAAK,CAC9BxG,UAAWwG,EAAMO,KAAK/G,UACtB8F,aAAcU,EAAMO,KAAKjB,aACzBc,aAAcJ,EAAMD,KAAKK,aACzB7F,aAAcyF,EAAMO,KAAKhG,aACzBgF,WAAYS,EAAMO,KAAKhB,WACvBpF,aAAc6F,EAAMO,KAAKpG,aACzBE,iBAAkB2F,EAAMO,KAAKlG,iBAC7BI,SAAUuF,EAAMO,KAAK9F,aAGE,SAAAxC,GAAQ,MAAK,CACpCoJ,QAAS6B,YAAmB,CAAE5J,4BAAcG,0BAAaa,oCAAkBY,oCAAkBhB,wBAAYE,gCAAgBoB,sBAAWzB,wBAAYC,sBAAWQ,0BAAaiB,yCAAsBxD,MAGnLgL,CAA6CyP,I,gHCx+BtD0B,GAAQ,CAAC,cAAe,QAAS,kBAAmB,MAAO,OAAQ,cACnEC,GAAM,CAAC,UAAW,QAAS,SAAU,QAAS,cAAe,OAC7DpK,GAAU,CASZ,CACIvG,KAAM,WACNwG,MAAO,OACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,IAGd,CACI1G,KAAM,aACNwG,MAAO,aACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,IAGd,CACI1G,KAAM,YACNwG,MAAO,WACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,IAGd,CACI1G,KAAM,OACNwG,MAAO,OACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,IAGd,CACI1G,KAAM,aACNwG,MAAO,WACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,IAGd,CACI1G,KAAM,iBACNwG,MAAO,sBACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,KAYZkK,G,4MACFtU,MAAQ,CACJwG,MAAM,EACNpN,SAAU,GACVR,UAAW,GACX2b,IAAK,GACLlb,KAAM,GACNF,MAAO,GACPH,MAAO,GACPiB,KAAK,EACLkK,aAAa,EACb6I,UAAW,GACXwH,aAAc,GACdrZ,UAAW,GACXkJ,SAAU,GACVN,MAAM,EACN0Q,MAAO,GACP1H,OAAQ,GACRxI,MAAO,GACPmQ,UAAW,GACXnV,WAAY,I,EAwBhBoV,cAAgB,WACZ,EAAK9T,SAAS,CAAE2F,MAAM,K,EAE1BxN,MAAQ,WACJ4H,YAAW,WACP,EAAKC,SAAS,CAAE5G,KAAK,EAAOjB,MAAO,OACpC,O,EAEP4b,UAAY,WACqB,KAAzB,EAAK5U,MAAMpH,WAAwC,KAApB,EAAKoH,MAAM3G,MAC1C,EAAKwH,SAAS,CAAE7H,MAAO,2BAA4BiB,KAAK,EAAMgH,UAAW,gBACzE,EAAKjI,SAEC,EAAKgH,MAAMpH,UAAUsI,SAAS,KAG5B,EAAKlB,MAAMpH,UAAUsI,SAAS,YAIb,QAApB,EAAKlB,MAAM3G,KACa,KAAzB,EAAK2G,MAAMgN,WACX,EAAKnM,SAAS,CAAE7H,MAAO,iCAAkCiB,KAAK,EAAMgH,UAAW,gBAC/E,EAAKjI,SAEgC,IAAhC,EAAKgH,MAAM7E,UAAU0B,QAC1B,EAAKgE,SAAS,CAAE7H,MAAO,yBAA0BiB,KAAK,EAAMgH,UAAW,gBACvE,EAAKjI,SAEmC,IAAnC,EAAKgH,MAAMwU,aAAa3X,QAC7B,EAAKgE,SAAS,CAAE7H,MAAO,6BAA8BiB,KAAK,EAAMgH,UAAW,gBAC3E,EAAKjI,SAGL,EAAK6b,QAGgB,eAApB,EAAK7U,MAAM3G,KACa,KAAzB,EAAK2G,MAAMgN,WACX,EAAKnM,SAAS,CAAE7H,MAAO,iCAAkCiB,KAAK,EAAMgH,UAAW,gBAC/E,EAAKjI,SAEgC,IAAhC,EAAKgH,MAAM7E,UAAU0B,QAC1B,EAAKgE,SAAS,CAAE7H,MAAO,yBAA0BiB,KAAK,EAAMgH,UAAW,gBACvE,EAAKjI,SAGL,EAAK6b,QAIT,EAAKA,SAlCL,EAAKhU,SAAS,CAAE7H,MAAO,+BAAgCiB,KAAK,EAAMgH,UAAW,gBAC7E,EAAKjI,UAJL,EAAK6H,SAAS,CAAE7H,MAAO,wBAAyBiB,KAAK,EAAMgH,UAAW,gBACtE,EAAKjI,U,EAuCbqT,YAAc,WACV,EAAKxL,SAAS,CAAE2F,MAAM,IACtB,EAAKzB,e,EAET+P,YAAc,SAAC/c,GACXM,KAAMY,KAAiB,sBAAuB,CAAElB,UAC3CS,MAAK,SAACC,GAEqB,MAApBA,EAASC,SAA2C,IAAzBD,EAASd,KAAKe,OACzC,EAAKmI,SAAS,CAAEzH,SAAUX,EAASd,KAAK+L,OAGxC,EAAK7C,SAAS,CAAEzH,SAAU,QAE/BL,OAAM,SAAAkB,GACL,EAAK4G,SAAS,CAAEzH,SAAU,S,EA8EtC2L,YAAc,WACV,EAAKlE,SAAS,CACV2F,MAAM,EACNpN,SAAU,GACVR,UAAW,GACX2b,IAAK,GACLlb,KAAM,GACNF,MAAO,GACPH,MAAO,GAAIiB,KAAK,EAChBkK,aAAa,EACb6I,UAAW,GACXwH,aAAc,GACdrZ,UAAW,GACXkJ,SAAU,GACVN,MAAM,EACNgJ,OAAQ,M,EAqBhBgI,WAAa,SAACjU,GAEV,GADA,EAAKD,SAAS,CAAExH,KAAMyH,EAAEmB,OAAOC,QACR,QAAnBpB,EAAEmB,OAAOC,MACT,EAAKrB,SAAS,CAAEmM,UAAW,GAAI7R,UAAW,GAAIqZ,aAAc,SAE3D,CACD,IAAIxH,EAAY,EAAKhN,MAAMpH,UAAUkZ,MAAM,IAAK,GAChD,EAAKjR,SAAS,CAAEmM,UAAWA,M,EAGnCgI,aAAe,WACiB,KAAxB,EAAKhV,MAAM5G,UAA4C,KAAzB,EAAK4G,MAAMpH,WAAwC,KAApB,EAAKoH,MAAM3G,MACxE,EAAKwH,SAAS,CAAE7H,MAAO,2BAA4BiB,KAAK,EAAMgH,UAAW,gBACzE,EAAKjI,SAEC,EAAKgH,MAAMpH,UAAUsI,SAAS,KAG5B,EAAKlB,MAAMpH,UAAUsI,SAAS,YAIb,QAApB,EAAKlB,MAAM3G,KACoB,IAAhC,EAAK2G,MAAM7E,UAAU0B,QAAyC,KAAzB,EAAKmD,MAAMgN,WAChD,EAAKnM,SAAS,CAAE7H,MAAO,2BAA4BiB,KAAK,EAAMgH,UAAW,gBACzE,EAAKjI,SAEmC,IAAnC,EAAKgH,MAAMwU,aAAa3X,QAC7B,EAAKgE,SAAS,CAAE7H,MAAO,6BAA8BiB,KAAK,EAAMgH,UAAW,gBAC3E,EAAKjI,SAGL,EAAKic,iBAIT,EAAKA,kBAjBL,EAAKpU,SAAS,CAAE7H,MAAO,+BAAgCiB,KAAK,EAAMgH,UAAW,gBAC7E,EAAKjI,UAJL,EAAK6H,SAAS,CAAE7H,MAAO,wBAAyBiB,KAAK,EAAMgH,UAAW,gBACtE,EAAKjI,U,EAsBbuN,MAAQ,WACJ3F,YAAW,WACP,EAAKmE,gBACN,M,+DAvPP,WACI/D,KAAKI,MAAMC,QAAQ7G,cACnBwG,KAAKI,MAAMC,QAAQnG,qB,gCAEvB,SAAmB6L,GAAY,IAAD,OAC1B,GAAIA,EAAUxH,aAAeyB,KAAKI,MAAM7B,WAAY,CAChD,IAAIhI,EAAO,GAC0B,gBAAjCyJ,KAAKI,MAAMhB,aAAa/G,MAA0B2H,KAAKI,MAAM7B,YAA+C,IAAjCyB,KAAKI,MAAM7B,WAAW1C,QAEjGmE,KAAKI,MAAM7B,WAAWqH,SAAQ,SAACC,GAC3BtP,EAAK6W,KAAKvH,EAAInD,SAElB1C,KAAKH,SAAS,CAAE0D,MAAOhN,KAEiB,eAAjCyJ,KAAKI,MAAMhB,aAAa/G,MAAyB2H,KAAKI,MAAM7B,YAA+C,IAAjCyB,KAAKI,MAAM7B,WAAW1C,SAEvGtF,EAAOyJ,KAAKI,MAAM7B,WAAWzC,QAAO,SAAAC,GAAC,OAAI,EAAKqE,MAAMhB,aAAaqN,QAAQ,GAAhC,WAAiDvM,SAASnE,EAAE2G,SAAO+D,KAAI,SAAAyN,GAAC,OAAIA,EAAExR,QACvH1C,KAAKH,SAAS,CAAE0D,MAAOhN,Q,mBA6EnC,WAAS,IAAD,OACAkd,EAAQ,GACZzT,KAAKH,SAAS,CAAEsD,aAAa,IAa7B,IAZA,IAAIsJ,EAAU,CACV8G,IAAKnP,KAAKC,MAAsB,IAAhBD,KAAKD,UAAoB,IACzCgQ,OAAQnU,KAAKhB,MAAM7G,MACnBic,SAAUpU,KAAKhB,MAAM5G,SACrB+U,KAAMnN,KAAKhB,MAAM3G,KACjBkZ,UAAWvR,KAAKhB,MAAMpH,UAAUkO,cAChC6K,WAAY3Q,KAAKhB,MAAMgN,UACvBgC,WAAYhO,KAAKhB,MAAM7E,UAAUka,KAAK,KACtCnO,eAAgBlG,KAAKhB,MAAMwU,aAAaa,KAAK,KAC7ChP,aAAcrF,KAAKI,MAAMhB,aAAahH,SACtCkN,cAAetF,KAAKI,MAAMhB,aAAaxH,WAElCoV,EAAI,EAAGA,EAAIhN,KAAKI,MAAM3G,SAASoC,OAAQmR,IACxChN,KAAKI,MAAM3G,SAASuT,GAAGuE,YAAcvR,KAAKhB,MAAMpH,WAChDoI,KAAKH,SAAS,CAAE5G,KAAK,EAAMjB,MAAO,sBAAuBiI,UAAW,cAAekD,aAAa,IAChGnD,KAAKhI,UAGLyb,EAAMrG,KAAKJ,GACPhN,KAAKI,MAAM3G,SAASoC,SAAW4X,EAAM5X,SACrCmE,KAAKI,MAAMC,QAAQ3G,QAAQ+S,GAC3B7M,YAAW,WAC2B,MAA9B,EAAKQ,MAAMzG,QAAQjC,QACnB,EAAKmI,SAAS,CACV2F,MAAM,EAAOrC,aAAa,EAAOlK,KAAK,EAAMjB,MAAO,mBAAoBI,SAAU,GAAIR,UAAW,GAAIO,MAAO,GAAIE,KAAM,GACrHmb,aAAc,GAAIrZ,UAAW,GAAI8F,UAAW,iBAEhD,EAAKjI,UAGL,EAAK6H,SAAS,CAAE2F,MAAM,EAAOrC,aAAa,EAAOlK,KAAK,EAAMjB,MAAO,oDAAqDiI,UAAW,gBACnI,EAAKjI,WAEV,S,4BAKnB,WAAkB,IAAD,OACbgI,KAAKH,SAAS,CAAEsD,aAAa,IAE7B,IAAImR,EAAStU,KAAKhB,MAAMqE,SAAUvH,QAAO,SAAAoF,GAAK,OAAK,EAAKlC,MAAMwU,aAActT,SAASgB,MACjFuL,EAAU,GACdxH,OAAOC,OAAOuH,EAAS,CACnB8G,IAAKvT,KAAKhB,MAAMuU,IAChBY,OAAQnU,KAAKhB,MAAM7G,MACnBic,SAAUpU,KAAKhB,MAAM5G,SACrB+U,KAAMnN,KAAKhB,MAAM3G,KACjBkZ,UAAWvR,KAAKhB,MAAMpH,UAAUkO,cAChC6K,WAAY3Q,KAAKhB,MAAMgN,UACvBgC,WAAYhO,KAAKhB,MAAM7E,UAAUka,KAAK,KACtCnO,eAAgBoO,EAAMD,KAAK,KAE3BhP,aAAcrF,KAAKI,MAAMhB,aAAahH,SACtCkN,cAAetF,KAAKI,MAAMhB,aAAaxH,YAE3CoI,KAAKI,MAAMC,QAAQzG,WAAW6S,GAC9B7M,YAAW,WACiC,MAApC,EAAKQ,MAAMvG,cAAcnC,QACzB,EAAKmI,SAAS,CACV2F,MAAM,EAAOrC,aAAa,EAAOlK,KAAK,EAAMjB,MAAO,sBAAuBI,SAAU,GAAIR,UAAW,GAAIO,MAAO,GAAIE,KAAM,GACxHmb,aAAc,GAAIrZ,UAAW,GAAI8F,UAAW,iBAEhD,EAAKjI,QACL,EAAKuN,UAGL,EAAK1F,SAAS,CAAEsD,aAAa,EAAOqC,MAAM,EAAOvM,KAAK,EAAMjB,MAAO,oDAAqDiI,UAAW,gBACnI,EAAKjI,WAEV,O,8BAoBP,SAAiB8H,GACb,IAAIwD,EAAU,GACVqC,EAAQ7F,EAAEmB,OAAOC,MACG,eAApBlB,KAAKhB,MAAM3G,MACX2H,KAAKI,MAAM7B,YAAcyB,KAAKI,MAAM7B,WAAWqH,SAAQ,SAAUC,GAC7D,IAAK,IAAI0O,EAAI,EAAGA,EAAI5O,EAAM9J,OAAQ0Y,IAC9B,GAAI1O,EAAInD,OAASiD,EAAM4O,GAAI,CACvB,IAAIvO,EAAMH,EAAIvC,QACd0C,GAAOA,EAAIJ,SAAQ,SAAC4O,GAChBlR,EAAQ8J,KAAKoH,UAOjCxU,KAAKH,SAAS,CAAE1F,UAAW2F,EAAEmB,OAAOC,MAAOmC,SAAUC,M,oBA8CzD,WAAU,IAAD,OAGC6F,EAAU,CACZmE,WAAY,SACZC,eAAgB,SAChBkH,cAAe,WACX,OAAQ,cAACC,GAAA,EAAD,CAAShK,MAAO,WAAhB,SACJ,cAACiK,EAAA,EAAD,CAAYrU,UAAU,UAAUoB,QAAS,SAAA5B,GAAC,OAAI,EAAK6T,iBAAnD,SACI,cAAC,KAAD,SAEZnG,WAAY,SAACC,EAAD,GAAuB,IAAjBC,EAAgB,EAAhBA,UACVC,EAAgB,EAAKvN,MAAM3G,SAASiU,GACxC,EAAK7N,SAAS,CACV2F,MAAM,EACNzC,MAAM,EACNwQ,IAAK5F,EAAc4F,IACnBnb,SAAUuV,EAAcyG,SACxBxc,UAAW+V,EAAc4D,UACzBlZ,KAAMsV,EAAcR,KACpBhV,MAAOwV,EAAcwG,OACrBnI,UAAW2B,EAAcgD,WACzB5E,OAAQ,WAEZ6I,QAAQC,IAAIlH,GACZ,IAGImH,EAHAhC,EAAwC,OAA7BnF,EAAcK,YAAuBL,EAAcK,WAAWnS,OAAS,EAAK8R,EAAcK,WAAY8C,MAAM,KAAO,GAE9HxN,EAAU,GAEd,EAAKlD,MAAM7B,YAAc,EAAK6B,MAAM7B,WAAWqH,SAAQ,SAAUC,GAC7D,IAAK,IAAI0O,EAAI,EAAGA,EAAIzB,EAASjX,OAAQ0Y,IACjC,GAAI1O,EAAInD,OAASoQ,EAASyB,GAAI,CAC1B,IAAIvO,EAAMH,EAAIvC,QACd0C,GAAOA,EAAIJ,SAAQ,SAAC4O,GAChBlR,EAAQ8J,KAAKoH,MAEjBM,EAA0C,OAAjCnH,EAAczH,eAA2ByH,EAAczH,eAAgB4K,MAAM,KAAO,QAGtFrR,IAAXqV,IACAA,EAAS,OAGjB,EAAKjV,SAAS,CAAE1F,UAAW2Y,EAAUzP,SAAUC,EAASkQ,aAAcsB,KAE1EC,aAAc,SAACC,GACX,IAAIre,EAAO,EAAKyJ,MAAM3G,SAASub,EAAYre,KAAK,GAAG+W,WAAW6F,IAC9D,EAAKnT,MAAMC,QAAQvG,WAAW,CAC1B,KAAQnD,EACR0O,aAAc,EAAKjF,MAAMhB,aAAahH,SACtCkN,cAAe,EAAKlF,MAAMhB,aAAaxH,UACvCkJ,GAAI,EAAKV,MAAM3G,SAASub,EAAYre,KAAK,GAAG+W,WAAW6D,YAE3D3R,YAAW,WAC6B,MAAhC,EAAKQ,MAAMrG,UAAUrC,QACrB,EAAKmI,SAAS,CAAE2F,MAAM,EAAOrC,aAAa,EAAOlK,KAAK,EAAMjB,MAAO,iBAAkBiI,UAAW,iBAChG,EAAKjI,UAGL,EAAK6H,SAAS,CAAE2F,MAAM,EAAOvM,KAAK,EAAMjB,MAAO,oDAAqDiI,UAAW,gBAC/G,EAAKjI,WAEV,MAEPsW,WAAY,CACRC,KAAM,CACFC,QAAS,mCACTC,QAAS,OACTC,oBAAqB,SAAAC,GAAM,yBAAgBA,EAAOzF,SAEtD0F,WAAY,CACRC,KAAM,YACNC,SAAU,gBACVC,YAAa,iBACbC,YAAa,MAEjBC,QAAS,CACLC,OAAQ,SACRC,YAAa,eACbC,MAAO,QACPC,YAAa,eACbC,YAAa,gBAEjBxT,OAAQ,CACJyT,IAAK,MACL7E,MAAO,UACP8E,MAAO,SAEXH,YAAa,CACT3E,MAAO,eACP+E,UAAW,2BAEfC,aAAc,CACV1G,KAAM,kBACN2G,OAAQ,SACRC,WAAY,0BAIxB,OACI,sBAAKtP,UAAU,wBAAf,UACMN,KAAKI,MAAM3G,UAA2C,IAA/BuG,KAAKI,MAAM3G,SAASwb,OACzC,cAAC,KAAD,CACIvK,MAAO,aACP/T,KAAMqJ,KAAKI,MAAM3G,SACjBwP,QAASA,GACTE,QAASA,IAEb,qBAAK7I,UAAU,cAAf,SACI,qBAAKA,UAAU,iBAAiBjI,KAAK,SAArC,SACI,sBAAMiI,UAAU,UAAhB,4BAGZ,eAACwP,GAAA,EAAD,CAAOtK,KAAMxF,KAAKhB,MAAMwG,KAAMuK,OAAQ,SAAAjQ,GAAC,OAAI,EAAKuL,eAAe2E,gBAAgB,aAAaC,KAAK,KAAjG,UACI,cAACH,GAAA,EAAMI,OAAP,CAAc7H,MAAO,CAAE8H,aAAc,oBAAqB3I,MAAO,WAAa4I,aAAW,EAAzF,SACI,cAACN,GAAA,EAAMO,MAAP,WAAmC,IAApBrQ,KAAKhB,MAAM+D,KAAiB,WAAa,kBAE5D,cAAC+M,GAAA,EAAMQ,KAAP,UACI,sBAAKhQ,UAAU,MAAf,UACI,qBAAKA,UAAU,sBACf,sBAAKA,UAAU,kCAAf,UACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,0BAAf,SACI,gCAAO,2DAEY,WAAtBN,KAAKhB,MAAM+M,OACR,qBAAKzL,UAAU,qBAAf,SACI,uBACI/J,KAAK,QACL+J,UAAU,eACVS,mBAAiB,YACjBG,MAAOlB,KAAKhB,MAAMpH,UAClByO,UAAQ,MAGhB,qBAAK/F,UAAU,qBAAf,SACI,uBACI/J,KAAK,QACL+J,UAAU,eACVS,mBAAiB,YACjBG,MAAOlB,KAAKhB,MAAMpH,UAClBoJ,SAAU,SAAAlB,GACN,EAAKD,SAAS,CAAEjI,UAAWkI,EAAEmB,OAAOC,QACpCtB,YAAW,WAAQ,EAAKkU,YAAY,EAAK9U,MAAMpH,aAAc,aAKxD,KAAxBoI,KAAKhB,MAAM5G,UAAmB,sBAAKkI,UAAU,UAAf,UAC3B,qBAAKA,UAAU,0BAAf,SACI,gCAAO,wDAEX,qBAAKA,UAAU,qBAAf,SACI,uBACIA,UAAU,eACVY,MAAOlB,KAAKhB,MAAM5G,SAClBmO,UAAQ,SAIpB,sBAAKjG,UAAU,UAAf,UACI,qBAAKA,UAAU,0BAAf,SACI,gCAAO,+CAEX,qBAAKA,UAAU,qBAAf,SACI,yBACIA,UAAU,eACVY,MAAOlB,KAAKhB,MAAM3G,KAClB2I,SAAU,SAAAlB,GAAC,OAAI,EAAKiU,WAAWjU,IAHnC,UAII,2BACCsT,IAASA,GAAM3M,KAAI,SAACZ,GACjB,OACI,iCAAmBA,GAANA,cAMjC,sBAAKvF,UAAU,UAAf,UACI,qBAAKA,UAAU,0BAAf,SACI,gCAAO,oDAEX,qBAAKA,UAAU,qBAAf,SACI,yBACIA,UAAU,eACVY,MAAOlB,KAAKhB,MAAM0U,UAClB1S,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE6T,UAAW5T,EAAEmB,OAAOC,SAHvD,UAII,2BACCmS,IAAOA,GAAIjK,OAAO3C,KAAI,SAACZ,GACpB,OACI,iCAAmBA,GAANA,eAKX,QAApB7F,KAAKhB,MAAM3G,MAAsC,eAApB2H,KAAKhB,MAAM3G,OACtC,sBAAKiI,UAAU,UAAf,UACI,qBAAKA,UAAU,0BAAf,SACI,gCAAO,qDAEX,qBAAKA,UAAU,qBAAf,SACI,uBACIA,UAAU,eACVY,MAAOlB,KAAKhB,MAAMgN,UAClBhL,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAEmM,UAAWlM,EAAEmB,OAAOC,gBAG9C,QAApBlB,KAAKhB,MAAM3G,MAAkB2H,KAAKhB,MAAMuE,OAAqC,IAA5BvD,KAAKhB,MAAMuE,MAAM1H,QAC/D,gCACI,sBAAKyE,UAAU,UAAf,UACI,qBAAKA,UAAU,0BAAf,SACI,gCAAO,mDAEX,qBAAKA,UAAU,qBAAf,SACI,cAAC4U,GAAA,EAAD,CACIC,UAAQ,EACR7U,UAAU,eACVoC,KAAK,WACLxB,MAAOlB,KAAKhB,MAAM7E,UAClB6G,SAAU,SAAAlB,GAAC,OAAI,EAAK0G,iBAAiB1G,IACrCsV,MAAO,cAACC,GAAA,EAAD,CAAOC,kBAAgB,IAC9BC,YAAa,SAAAC,GAAQ,OAAIA,EAASnB,KAAK,OAP3C,SAUMrU,KAAKhB,MAAMuE,OAAUvD,KAAKhB,MAAMuE,MAAMkD,KAAI,SAAA/D,GAAI,OAC5C,eAAC+S,GAAA,EAAD,CAAqBvU,MAAOwB,EAA5B,UACI,cAACgT,GAAA,EAAD,CAAUtP,QAAS,EAAKpH,MAAM7E,UAAUwb,QAAQjT,IAAS,IACzD,cAACkT,EAAA,EAAD,CAAcC,QAASnT,MAFZA,aAQ9B1C,KAAKhB,MAAMqE,UAA2C,IAA/BrD,KAAKhB,MAAMqE,SAASxH,QACxC,sBAAKyE,UAAU,UAAf,UACI,qBAAKA,UAAU,0BAAf,SACI,gCAAO,8DAEX,qBAAKA,UAAU,qBAAf,SACI,cAAC4U,GAAA,EAAD,CACIC,UAAQ,EACR7U,UAAU,eACVoC,KAAK,WACLxB,MAAOlB,KAAKhB,MAAMwU,aAClBxS,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE2T,aAAc1T,EAAEmB,OAAOC,SACtDkU,MAAO,cAACC,GAAA,EAAD,CAAOC,kBAAgB,IAC9BC,YAAa,SAAAC,GAAQ,OAAIA,EAASnB,KAAK,OAP3C,SAUMrU,KAAKhB,MAAMqE,UAAarD,KAAKhB,MAAMqE,SAASoD,KAAI,SAAA/D,GAAI,OAClD,eAAC+S,GAAA,EAAD,CAAqBvU,MAAOwB,EAA5B,UACI,cAACgT,GAAA,EAAD,CAAUtP,QAAS,EAAKpH,MAAMwU,aAAamC,QAAQjT,IAAS,IAC5D,cAACkT,EAAA,EAAD,CAAcC,QAASnT,MAFZA,gBAStB,eAApB1C,KAAKhB,MAAM3G,MAAyB2H,KAAKhB,MAAMuE,OAAqC,IAA5BvD,KAAKhB,MAAMuE,MAAM1H,QACtE,8BACI,sBAAKyE,UAAU,UAAf,UACI,qBAAKA,UAAU,0BAAf,SACI,gCAAO,mDAEX,qBAAKA,UAAU,qBAAf,SACI,cAAC4U,GAAA,EAAD,CACIC,UAAQ,EACR7U,UAAU,eACVoC,KAAK,WACLxB,MAAOlB,KAAKhB,MAAM7E,UAClB6G,SAAU,SAAAlB,GAAC,OAAI,EAAK0G,iBAAiB1G,IACrCsV,MAAO,cAACC,GAAA,EAAD,CAAOC,kBAAgB,IAC9BC,YAAa,SAAAC,GAAQ,OAAIA,EAASnB,KAAK,OAP3C,SAUMrU,KAAKhB,MAAMuE,OAAUvD,KAAKhB,MAAMuE,MAAMkD,KAAI,SAAA/D,GAAI,OAC5C,eAAC+S,GAAA,EAAD,CAAqBvU,MAAOwB,EAA5B,UACI,cAACgT,GAAA,EAAD,CAAUtP,QAAS,EAAKpH,MAAM7E,UAAUwb,QAAQjT,IAAS,IACzD,cAACkT,EAAA,EAAD,CAAcC,QAASnT,MAFZA,wBAY9B,IAApB1C,KAAKhB,MAAM+D,KACR,eAAC+M,GAAA,EAAM2B,OAAP,WACI,wBAAQlb,KAAK,SAAS+J,UAAU,OAAO+H,MAAO,CAAEP,gBAAiB,UAAWN,MAAO,QAAU9F,QAAS,SAAA5B,GAAC,OAAI,EAAK8T,aAAhH,kBAC4B,IAA3B5T,KAAKhB,MAAMmE,aAAwB,qBAAK7C,UAAU,cAAf,SAChC,qBAAKA,UAAU,iBAAiBjI,KAAK,SAArC,SACI,sBAAMiI,UAAU,UAAhB,+BAKZ,eAACwP,GAAA,EAAM2B,OAAP,WACI,wBAAQlb,KAAK,SAAS+J,UAAU,OAAO+H,MAAO,CAAEP,gBAAiB,UAAWN,MAAO,QAAU9F,QAAS,SAAA5B,GAAC,OAAI,EAAKkU,gBAAhH,qBAC4B,IAA3BhU,KAAKhB,MAAMmE,aAAwB,qBAAK7C,UAAU,cAAf,SAChC,qBAAKA,UAAU,iBAAiBjI,KAAK,SAArC,SACI,sBAAMiI,UAAU,UAAhB,kCAKpB,cAACa,EAAA,EAAD,CACIC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CC,KAAMvB,KAAKhB,MAAM/F,IACjBqH,UAAU,WACVxI,QAASkI,KAAKhB,MAAMhH,e,GAvkBnBgK,aA2lBNC,gBAbS,SAAAjD,GAAK,MAAK,CAC9BvF,SAAUuF,EAAMO,KAAK9F,SACrBE,QAASqF,EAAMO,KAAK5F,QACpBI,UAAWiF,EAAMO,KAAKxF,UACtBqF,aAAcJ,EAAMD,KAAKK,aACzBb,WAAYS,EAAMO,KAAKhB,WACvB1E,cAAemF,EAAMO,KAAK1F,kBAGH,SAAA5C,GAAQ,MAAK,CACpCoJ,QAAS6B,YAAmB,CAAE1I,0BAAaE,kBAASI,wBAAYI,oCAAkBN,yBAAc3C,MAGrFgL,CAA6CqR,I,0CC9qB7C,I,OAAA,IAA0B,iCCe1BwC,GAXI,WACjB,OACE,sBAAKxV,UAAU,SAAf,UACE,qBAAKC,IAAKC,GAAKC,IAAI,WAAWH,UAAU,qBACxC,wBAAQA,UAAU,cAAlB,SACE,uBAAMA,UAAU,GAAhB,mBAA2B,IAAIiE,MAAOa,cAAtC,8B,qBCHF2Q,G,4MACF/W,MAAQ,CACJ7E,UAAW,GACX6b,YAAa,GACbC,SAAU,GACVC,UAAW,GACXC,gBAAiB,GACjBC,aAAc,GACdC,cAAe,GACfC,aAAc,GACdrd,KAAK,EACLjB,MAAO,GACPue,eAAgB,GAChB9S,WAAY,GACZ+S,iBAAkB,GAClBC,eAAgB,GAChBC,cAAe,GACfC,gBAAiB,GACjBC,YAAa,I,EA6BjB5e,MAAQ,WACJ4H,YAAW,WACP,EAAKC,SAAS,CAAE5G,KAAK,EAAOjB,MAAO,OACpC,O,EAWP6e,kBAAoB,SAAC/W,GACjB,IAAI8W,EACJ,EAAK5X,MAAMsX,cAAgB,EAAKtX,MAAMsX,aAAa1Q,SAAQ,SAAUC,GACjE,IAAK,IAAI8C,EAAI,EAAGA,EAAI9C,EAAIpC,WAAW5H,OAAQ8M,IACnC9C,EAAIpC,WAAWkF,GAAGrF,UAAYxD,IAC9B8W,EAAc/Q,EAAIpC,WAAWkF,GAAGpS,SAI5C,EAAKsJ,SAAS,CAAE2W,iBAAkB1W,EAAG8W,YAAaA,EAAaD,gBAAiB,GAAID,cAAe,M,EAEvG9C,UAAY,SAACkD,GACT,GAAY,QAARA,EAC4B,KAAxB,EAAK9X,MAAMiX,UAA8C,KAA3B,EAAKjX,MAAMgX,aAAgD,KAA1B,EAAKhX,MAAMyE,YAC1E,EAAK5D,SAAS,CAAE7H,MAAO,2BAA4BiB,KAAK,EAAMgH,UAAW,gBACzE,EAAKjI,SAGL,EAAK+e,eAAe,EAAK/X,MAAMiX,SAAU,EAAKjX,MAAMgX,YAAa,EAAKhX,MAAMyE,WAAY,YAG3F,GAAY,qBAARqT,EACwB,KAAzB,EAAK9X,MAAMkX,WAAmD,KAA/B,EAAKlX,MAAMmX,iBAAoD,KAA1B,EAAKnX,MAAMyE,YAC/E,EAAK5D,SAAS,CAAE7H,MAAO,2BAA4BiB,KAAK,EAAMgH,UAAW,gBACzE,EAAKjI,SAGL,EAAK+e,eAAe,EAAK/X,MAAMkX,UAAW,EAAKlX,MAAMmX,gBAAiB,EAAKnX,MAAMyE,WAAY,yBAGhG,GAAY,oBAARqT,EACwB,KAAzB,EAAK9X,MAAMkX,WAAkD,KAA9B,EAAKlX,MAAMuX,gBAC1C,EAAK1W,SAAS,CAAE7H,MAAO,2BAA4BiB,KAAK,EAAMgH,UAAW,gBACzE,EAAKjI,SAIL,EAAK+e,eAAe,EAAK/X,MAAMkX,UAAW,EAAKlX,MAAMuX,eAAgB,GAAI,wBAG5E,GAAY,wBAARO,EACL,GAA6B,KAAzB,EAAK9X,MAAMkX,WAAoD,KAAhC,EAAKlX,MAAMwX,kBAAyD,KAA9B,EAAKxX,MAAMyX,eAChF,EAAK5W,SAAS,CAAE7H,MAAO,2BAA4BiB,KAAK,EAAMgH,UAAW,gBACzE,EAAKjI,YAGJ,CACD,EAAK6H,SAAS,CAAEsD,aAAa,IAC7B,IAAI0I,EAAM,GACV5G,OAAOC,OAAO2G,EAAK,CACfmL,IAAK,EAAKhY,MAAMkX,UAChBe,QAAS,EAAKjY,MAAMwX,iBACpBU,YAAa,EAAKlY,MAAMyX,eACxBK,IAAK,sBACLzR,aAAc,EAAKjF,MAAMhB,aAAahH,SACtC,MAAS,EAAKgI,MAAMhB,aAAaxH,YAErC,EAAKuf,aAAatL,QAGrB,GAAY,uBAARiL,EACL,GAA6B,KAAzB,EAAK9X,MAAMkX,WAAoD,KAAhC,EAAKlX,MAAMwX,kBAA0D,KAA/B,EAAKxX,MAAM2X,iBAAuD,KAA7B,EAAK3X,MAAM0X,cACrH,EAAK7W,SAAS,CAAE7H,MAAO,2BAA4BiB,KAAK,EAAMgH,UAAW,gBACzE,EAAKjI,YAEJ,CACD,EAAK6H,SAAS,CAAEsD,aAAa,IAC7B,IAAIiU,EAAY,GAChBnS,OAAOC,OAAOkS,EAAW,CACrBJ,IAAK,EAAKhY,MAAMkX,UAChBe,QAAS,EAAKjY,MAAMwX,iBACpBI,YAAa,EAAK5X,MAAM2X,gBACxBU,gBAAiB,EAAKrY,MAAM0X,cAC5BI,IAAK,qBACLzR,aAAc,EAAKjF,MAAMhB,aAAahH,SACtC,MAAS,EAAKgI,MAAMhB,aAAaxH,YAErC,EAAKuf,aAAaC,OAGT,oBAARN,IACwB,KAAzB,EAAK9X,MAAMkX,WAAiD,KAA7B,EAAKlX,MAAMqX,eAAkD,KAA1B,EAAKrX,MAAMyE,YAC7E,EAAK5D,SAAS,CAAE7H,MAAO,2BAA4BiB,KAAK,EAAMgH,UAAW,gBACzE,EAAKjI,SAGL,EAAK+e,eAAe,EAAK/X,MAAMkX,UAAW,EAAKlX,MAAMqX,cAAe,EAAKrX,MAAMyE,WAAY,qB,EAIvG0T,aAAe,SAACtL,GACZ,EAAKzL,MAAMC,QAAQjG,SAASyR,GAC5BjM,YAAW,WACgC,MAAnC,EAAKQ,MAAM/F,aAAa3C,QACxB,EAAKmI,SAAS,CAAE7H,MAAO,EAAKoI,MAAM/F,aAAa1D,KAAKmB,QAASmB,KAAK,EAAMgH,UAAW,eAAgBkD,aAAa,IAChH,EAAKnL,QACL,EAAKuN,UAGL,EAAK1F,SAAS,CAAE2F,MAAM,EAAOvM,KAAK,EAAMjB,MAAO,uBAAwBiI,UAAW,cAAekD,aAAa,IAC9G,EAAKnL,WAEV,M,EAEP+e,eAAiB,SAAC3T,EAAUkU,EAAa7T,EAAYiF,GACjD,EAAK7I,SAAS,CAAEsD,aAAa,IAC7B,IAAI0I,EAAM,GACV5G,OAAOC,OAAO2G,EAAK,CACflG,MAAOvC,EACPA,SAAUkU,EACV7T,WAAYA,EACZqT,IAAKpO,EACL,MAAS,EAAKtI,MAAMhB,aAAaxH,UACjCyN,aAAc,EAAKjF,MAAMhB,aAAahH,WAE1C,EAAKgI,MAAMC,QAAQjG,SAASyR,GAC5BjM,YAAW,WACgC,MAAnC,EAAKQ,MAAM/F,aAAa3C,QACxB,EAAKmI,SAAS,CAAE7H,MAAO,EAAKoI,MAAM/F,aAAa1D,KAAKmB,QAASmB,KAAK,EAAMgH,UAAW,eAAgBkD,aAAa,IAChH,EAAKnL,QACL,EAAKuN,UAGL,EAAK1F,SAAS,CAAE2F,MAAM,EAAOvM,KAAK,EAAMjB,MAAO,uBAAwBiI,UAAW,cAAekD,aAAa,IAC9G,EAAKnL,WAEV,M,EAEPuN,MAAQ,WACJ3F,YAAW,WACP,EAAKmE,gBACN,M,EAEPA,YAAc,WACV,EAAKlE,SAAS,CACV1F,UAAW,GACX6b,YAAa,GACbC,SAAU,GACVC,UAAW,GACXC,gBAAiB,GACjBC,aAAc,GACdC,cAAe,GACfE,eAAgB,GAChB9S,WAAY,GACZ+S,iBAAkB,GAClBC,eAAgB,GAChBC,cAAe,GACfC,gBAAiB,GACjBC,YAAa,M,EAGrBW,aAAe,SAACT,GACA,oBAARA,EAC6B,KAAzB,EAAK9X,MAAMkX,WACX,EAAKrW,SAAS,CAAE7H,MAAO,yBAA0BiB,KAAK,EAAMgH,UAAW,gBACvE,EAAKjI,SAGL,EAAKwf,OAAO,EAAKxY,MAAMkX,UAAW,GAAI,SAG7B,wBAARY,IACwB,KAAzB,EAAK9X,MAAMkX,WAAiD,KAA7B,EAAKlX,MAAMqX,eAC1C,EAAKxW,SAAS,CAAE7H,MAAO,2BAA4BiB,KAAK,EAAMgH,UAAW,gBACzE,EAAKjI,SAGL,EAAKwf,OAAO,EAAKxY,MAAMkX,UAAW,EAAKlX,MAAMqX,cAAe,M,EAKxEmB,OAAS,SAAC7R,EAAOvC,EAAUsF,GACvB,IAAImD,EAAM,GACV5G,OAAOC,OAAO2G,EAAK,CACflG,MAAOA,EACPvC,SAAUA,EACV7M,KAAMmS,EACN,MAAS,EAAKtI,MAAMhB,aAAaxH,UACjCyN,aAAc,EAAKjF,MAAMhB,aAAahH,WAE1C,EAAKgI,MAAMC,QAAQ/F,YAAYuR,GAC/B,EAAKhM,SAAS,CAAEsD,aAAa,IAC7BvD,YAAW,WAC+B,MAAlC,EAAKQ,MAAM9F,YAAY5C,QACvB,EAAKmI,SAAS,CAAE7H,MAAO,gBAAiBiB,KAAK,EAAMgH,UAAW,eAAgBkD,aAAa,IAC3F,EAAKnL,QACL,EAAKuN,UAGL,EAAK1F,SAAS,CAAE2F,MAAM,EAAOvM,KAAK,EAAMjB,MAAO,uBAAwBiI,UAAW,cAAekD,aAAa,IAC9G,EAAKnL,WAEV,M,+DA1OP,WACIgI,KAAKI,MAAMC,QAAQnG,qB,gCAEvB,SAAmB6L,EAAW0R,GACtB1R,EAAUxH,aAAeyB,KAAKI,MAAM7B,YAChCyB,KAAKI,MAAM7B,YAA+C,IAAjCyB,KAAKI,MAAM7B,WAAW1C,QAC/CmE,KAAKH,SAAS,CAAEyW,aAActW,KAAKI,MAAM7B,aAG7CkZ,EAAUtd,YAAc6F,KAAKhB,MAAM7E,WACnC6F,KAAKH,SAAS,CACVmW,YAAa,GACbC,SAAU,GACVC,UAAW,GACXC,gBAAiB,GACjBC,aAAc,GACdC,cAAe,GACfE,eAAgB,GAChB9S,WAAY,GACZ+S,iBAAkB,GAClBC,eAAgB,GAChBC,cAAe,GACfC,gBAAiB,GACjBC,YAAa,O,8BASzB,SAAiB9W,GACb,IAAIwD,EACJtD,KAAKhB,MAAMsX,cAAgBtW,KAAKhB,MAAMsX,aAAa1Q,SAAQ,SAAUC,GAC7DA,EAAInD,OAAS5C,EAAEmB,OAAOC,QACtBoC,EAAUuC,EAAIvC,YAGtBtD,KAAKH,SAAS,CAAEqW,UAAWpW,EAAEmB,OAAOC,MAAOkV,aAAc9S,EAASkT,iBAAkB,GAAIC,eAAgB,GAAIE,gBAAiB,GAAID,cAAe,O,oBAqMpJ,WAAU,IAAD,OACL,OACI,sBAAKpW,UAAU,kBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,uCAAf,0BACA,qBAAKA,UAAU,qBAAf,SACI,qBAAKA,UAAU,MAAf,SAEI,sBAAKA,UAAU,sBAAf,UACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,GAAjB,SAAoB,+CAExB,sBAAKA,UAAU,sBAAf,UACI,wBAAOA,UAAU,aAAjB,UACI,uBACIY,MAAM,MACNkF,QAAkC,QAAzBpG,KAAKhB,MAAM7E,UACpB5D,KAAK,QACLyK,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE1F,UAAW2F,EAAEmB,OAAOC,WAL3D,0BAMA,wBAAOZ,UAAU,wBAAjB,UACI,uBAAO/J,KAAK,QAAQ2K,MAAM,mBACtBkF,QAAkC,qBAAzBpG,KAAKhB,MAAM7E,UACpB6G,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE1F,UAAW2F,EAAEmB,OAAOC,WAH3D,qCAIA,wBAAOZ,UAAU,wBAAjB,UACI,uBAAO/J,KAAK,QAAQ2K,MAAM,kBACtBkF,QAAkC,oBAAzBpG,KAAKhB,MAAM7E,UACpB6G,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE1F,UAAW2F,EAAEmB,OAAOC,WAH3D,6BAIA,wBAAOZ,UAAU,wBAAjB,UACI,uBAAO/J,KAAK,QAAQ2K,MAAM,kBACtBkF,QAAkC,oBAAzBpG,KAAKhB,MAAM7E,UACpB6G,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE1F,UAAW2F,EAAEmB,OAAOC,WAH3D,6BAIA,wBAAOZ,UAAU,wBAAjB,UACI,uBAAO/J,KAAK,QAAQ2K,MAAM,sBACtBkF,QAAkC,wBAAzBpG,KAAKhB,MAAM7E,UACpB6G,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE1F,UAAW2F,EAAEmB,OAAOC,WAH3D,wCAIA,wBAAOZ,UAAU,wBAAjB,UACI,uBAAO/J,KAAK,QAAQ2K,MAAM,qBACtBkF,QAAkC,uBAAzBpG,KAAKhB,MAAM7E,UACpB6G,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE1F,UAAW2F,EAAEmB,OAAOC,WAH3D,gCAIA,wBAAOZ,UAAU,uBAAjB,UACI,uBACIY,MAAM,kBACNkF,QAAkC,oBAAzBpG,KAAKhB,MAAM7E,UACpB5D,KAAK,QACLyK,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE1F,UAAW2F,EAAEmB,OAAOC,WAL3D,6BAMA,wBAAOZ,UAAU,QAAjB,UACI,uBACIY,MAAM,sBACNkF,QAAkC,wBAAzBpG,KAAKhB,MAAM7E,UACpB5D,KAAK,QACLyK,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE1F,UAAW2F,EAAEmB,OAAOC,WAL3D,wCAKqH,6BAGnG,QAAzBlB,KAAKhB,MAAM7E,WAAuB,gCAC/B,sBAAKmG,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,kDAE5B,qBAAKA,UAAU,oBAAf,SACI,uBACIY,MAAOlB,KAAKhB,MAAMiX,SAClB3V,UAAU,eACVU,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAEoW,SAAUnW,EAAEmB,OAAOC,gBAG9D,sBAAKZ,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,6DAE5B,qBAAKA,UAAU,sBAAf,SACI,uBACIY,MAAOlB,KAAKhB,MAAMgX,YAClB1V,UAAU,eACVU,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAEmW,YAAalW,EAAEmB,OAAOC,gBAGjE,sBAAKZ,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,qDAE5B,qBAAKA,UAAU,oBAAf,SACI,uBACIY,MAAOlB,KAAKhB,MAAMyE,WAClBnD,UAAU,eACVU,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE4D,WAAY3D,EAAEmB,OAAOC,mBAK1C,qBAAzBlB,KAAKhB,MAAM7E,WAAoC6F,KAAKhB,MAAMsX,cAAmD,IAAnCtW,KAAKhB,MAAMsX,aAAarB,QAC/F,gCACI,sBAAK3U,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,kDAE5B,qBAAKA,UAAU,oBAAf,SACI,yBACIY,MAAOlB,KAAKhB,MAAMkX,UAClB5V,UAAU,eACVU,SAAU,SAAAlB,GAAC,OAAI,EAAK0G,iBAAiB1G,IAHzC,UAII,wBAAQoB,MAAM,GAAGqF,UAAQ,EAAzB,kCACCvG,KAAKhB,MAAMsX,cAAgBtW,KAAKhB,MAAMsX,aAAa7P,KAAI,SAACZ,GACrD,OACI,iCAAwBA,EAAInD,MAAfmD,EAAInD,iBAKrC,sBAAKpC,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,6DAE5B,qBAAKA,UAAU,sBAAf,SACI,uBACIY,MAAOlB,KAAKhB,MAAMmX,gBAClB7V,UAAU,eACVU,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAEsW,gBAAiBrW,EAAEmB,OAAOC,gBAGrE,sBAAKZ,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,qDAE5B,qBAAKA,UAAU,oBAAf,SACI,uBACIY,MAAOlB,KAAKhB,MAAMyE,WAClBnD,UAAU,eACVU,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE4D,WAAY3D,EAAEmB,OAAOC,mBAM9C,oBAAzBlB,KAAKhB,MAAM7E,WAAmC6F,KAAKhB,MAAMsX,cAAmD,IAAnCtW,KAAKhB,MAAMsX,aAAarB,QAC9F,gCACI,sBAAK3U,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,kDAE5B,qBAAKA,UAAU,oBAAf,SACI,yBACIY,MAAOlB,KAAKhB,MAAMkX,UAClB5V,UAAU,eACVU,SAAU,SAAAlB,GAAC,OAAI,EAAK0G,iBAAiB1G,IAHzC,UAII,wBAAQoB,MAAM,GAAGqF,UAAQ,EAAzB,kCACCvG,KAAKhB,MAAMsX,cAAgBtW,KAAKhB,MAAMsX,aAAa7P,KAAI,SAACZ,GACrD,OACI,iCAAwBA,EAAInD,MAAfmD,EAAInD,iBAKpC1C,KAAKhB,MAAMoX,cAAmD,IAAnCpW,KAAKhB,MAAMoX,aAAava,QAChD,sBAAKyE,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,6DAE5B,qBAAKA,UAAU,sBAAf,SACI,yBACIY,MAAOlB,KAAKhB,MAAMqX,cAClB/V,UAAU,eACVU,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAEwW,cAAevW,EAAEmB,OAAOC,SAH3D,UAII,wBAAQA,MAAM,GAAGqF,UAAQ,EAAzB,kCACCvG,KAAKhB,MAAMoX,cAAgBpW,KAAKhB,MAAMoX,aAAa3P,KAAI,SAACZ,GACrD,OACI,iCAAmBA,GAANA,cAKpC7F,KAAKhB,MAAMqX,eAA8C,KAA7BrW,KAAKhB,MAAMqX,eACpC,sBAAK/V,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,qDAE5B,qBAAKA,UAAU,oBAAf,SACI,uBACIY,MAAOlB,KAAKhB,MAAMyE,WAClBnD,UAAU,eACVU,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE4D,WAAY3D,EAAEmB,OAAOC,mBAMlD,oBAAzBlB,KAAKhB,MAAM7E,WAAmC6F,KAAKhB,MAAMsX,cAAmD,IAAnCtW,KAAKhB,MAAMsX,aAAarB,QAC9F,gCACI,sBAAK3U,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,2DAE5B,qBAAKA,UAAU,oBAAf,SACI,yBACIY,MAAOlB,KAAKhB,MAAMkX,UAClB5V,UAAU,eACVU,SAAU,SAAAlB,GAAC,OAAI,EAAK0G,iBAAiB1G,IAHzC,UAII,wBAAQoB,MAAM,GAAGqF,UAAQ,EAAzB,kCACCvG,KAAKhB,MAAMsX,cAAgBtW,KAAKhB,MAAMsX,aAAa7P,KAAI,SAACZ,GACrD,OACI,iCAAwBA,EAAInD,MAAfmD,EAAInD,iBAKrC,sBAAKpC,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,kDAE5B,qBAAKA,UAAU,sBAAf,SACI,uBACIY,MAAOlB,KAAKhB,MAAMuX,eAClBjW,UAAU,eACVU,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE0W,eAAgBzW,EAAEmB,OAAOC,mBAKlD,wBAAzBlB,KAAKhB,MAAM7E,WAAuC6F,KAAKhB,MAAMsX,cAAmD,IAAnCtW,KAAKhB,MAAMsX,aAAarB,QAClG,gCACI,sBAAK3U,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,kDAE5B,qBAAKA,UAAU,oBAAf,SACI,yBACIY,MAAOlB,KAAKhB,MAAMkX,UAClB5V,UAAU,eACVU,SAAU,SAAAlB,GAAC,OAAI,EAAK0G,iBAAiB1G,IAHzC,UAII,wBAAQoB,MAAM,GAAGqF,UAAQ,EAAzB,kCACCvG,KAAKhB,MAAMsX,cAAgBtW,KAAKhB,MAAMsX,aAAa7P,KAAI,SAACZ,GACrD,OACI,iCAAwBA,EAAInD,MAAfmD,EAAInD,iBAKpC1C,KAAKhB,MAAMoX,cAAmD,IAAnCpW,KAAKhB,MAAMoX,aAAava,QAChD,sBAAKyE,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,6DAE5B,qBAAKA,UAAU,sBAAf,SACI,yBACIY,MAAOlB,KAAKhB,MAAMwX,iBAClBlW,UAAU,eACVU,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE2W,iBAAkB1W,EAAEmB,OAAOC,SAH9D,UAII,wBAAQA,MAAM,GAAGqF,UAAQ,EAAzB,kCACCvG,KAAKhB,MAAMoX,cAAgBpW,KAAKhB,MAAMoX,aAAa3P,KAAI,SAACZ,GACrD,OACI,iCAAmBA,GAANA,cAMrC,sBAAKvF,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,iEAE5B,qBAAKA,UAAU,qBAAf,SACI,uBACIY,MAAOlB,KAAKhB,MAAMyX,eAClBnW,UAAU,eACVU,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE4W,eAAgB3W,EAAEmB,OAAOC,mBAKlD,uBAAzBlB,KAAKhB,MAAM7E,WAAsC6F,KAAKhB,MAAMsX,cAAmD,IAAnCtW,KAAKhB,MAAMsX,aAAarB,QACjG,gCACI,sBAAK3U,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,kDAE5B,qBAAKA,UAAU,oBAAf,SACI,yBACIY,MAAOlB,KAAKhB,MAAMkX,UAClB5V,UAAU,eACVU,SAAU,SAAAlB,GAAC,OAAI,EAAK0G,iBAAiB1G,IAHzC,UAII,wBAAQoB,MAAM,GAAGqF,UAAQ,EAAzB,kCACCvG,KAAKhB,MAAMsX,cAAgBtW,KAAKhB,MAAMsX,aAAa7P,KAAI,SAACZ,GACrD,OACI,iCAAwBA,EAAInD,MAAfmD,EAAInD,iBAKpC1C,KAAKhB,MAAMoX,cAAmD,IAAnCpW,KAAKhB,MAAMoX,aAAava,QAChD,sBAAKyE,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,6DAE5B,qBAAKA,UAAU,sBAAf,SACI,yBACIY,MAAOlB,KAAKhB,MAAMwX,iBAClBlW,UAAU,eAEVU,SAAU,SAAAlB,GAAC,OAAI,EAAK+W,kBAAkB/W,EAAEmB,OAAOC,QAJnD,UAMI,wBAAQA,MAAM,GAAGqF,UAAQ,EAAzB,kCACCvG,KAAKhB,MAAMoX,cAAgBpW,KAAKhB,MAAMoX,aAAa3P,KAAI,SAACZ,GACrD,OACI,iCAAmBA,GAANA,cAMpC7F,KAAKhB,MAAM4X,aAAiD,IAAlC5W,KAAKhB,MAAM4X,YAAY3B,QAC9C,sBAAK3U,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,8DAE5B,qBAAKA,UAAU,qBAAf,SACI,yBACIY,MAAOlB,KAAKhB,MAAM2X,gBAClBrW,UAAU,eACVU,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE8W,gBAAiB7W,EAAEmB,OAAOC,SAH7D,UAII,wBAAQA,MAAM,GAAGqF,UAAQ,EAAzB,kCACCvG,KAAKhB,MAAM4X,aAAe5W,KAAKhB,MAAM4X,YAAYnQ,KAAI,SAACZ,GACnD,OACI,iCAAmBA,GAANA,cAOrC,sBAAKvF,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,yDAE5B,qBAAKA,UAAU,qBAAf,SACI,uBACIY,MAAOlB,KAAKhB,MAAM0X,cAClBpW,UAAU,eACVU,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE6W,cAAe5W,EAAEmB,OAAOC,mBAKjD,oBAAzBlB,KAAKhB,MAAM7E,WAAmC6F,KAAKhB,MAAMsX,cAAmD,IAAnCtW,KAAKhB,MAAMsX,aAAarB,QAC9F,8BACI,sBAAK3U,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,kDAE5B,qBAAKA,UAAU,oBAAf,SACI,yBACIY,MAAOlB,KAAKhB,MAAMkX,UAClB5V,UAAU,eACVU,SAAU,SAAAlB,GAAC,OAAI,EAAK0G,iBAAiB1G,IAHzC,UAII,wBAAQoB,MAAM,GAAGqF,UAAQ,EAAzB,kCACCvG,KAAKhB,MAAMsX,cAAgBtW,KAAKhB,MAAMsX,aAAa7P,KAAI,SAACZ,GACrD,OACI,iCAAwBA,EAAInD,MAAfmD,EAAInD,mBAOnB,wBAAzB1C,KAAKhB,MAAM7E,WAAuC6F,KAAKhB,MAAMsX,cAAmD,IAAnCtW,KAAKhB,MAAMsX,aAAarB,QAClG,gCACI,sBAAK3U,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,kDAE5B,qBAAKA,UAAU,oBAAf,SACI,yBACIY,MAAOlB,KAAKhB,MAAMkX,UAClB5V,UAAU,eACVU,SAAU,SAAAlB,GAAC,OAAI,EAAK0G,iBAAiB1G,IAHzC,UAII,wBAAQoB,MAAM,GAAGqF,UAAQ,EAAzB,kCACCvG,KAAKhB,MAAMsX,cAAgBtW,KAAKhB,MAAMsX,aAAa7P,KAAI,SAACZ,GACrD,OACI,iCAAwBA,EAAInD,MAAfmD,EAAInD,iBAKpC1C,KAAKhB,MAAMoX,cAAmD,IAAnCpW,KAAKhB,MAAMoX,aAAava,QAChD,sBAAKyE,UAAU,WAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,uBAAOA,UAAU,OAAjB,SAAwB,6DAE5B,qBAAKA,UAAU,sBAAf,SACI,yBACIY,MAAOlB,KAAKhB,MAAMqX,cAClB/V,UAAU,eACVU,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAEwW,cAAevW,EAAEmB,OAAOC,SAH3D,UAII,wBAAQA,MAAM,GAAGqF,UAAQ,EAAzB,kCACCvG,KAAKhB,MAAMoX,cAAgBpW,KAAKhB,MAAMoX,aAAa3P,KAAI,SAACZ,GACrD,OACI,iCAAmBA,GAANA,wBAW/B,QAAzB7F,KAAKhB,MAAM7E,WACR,qBAAKmG,UAAU,2BAAf,SACI,yBAAQA,UAAU,iBAAiBoB,QAAS,SAAA5B,GAAC,OAAI,EAAK8T,UAAU,QAAhE,iBAC4B,IAA3B5T,KAAKhB,MAAMmE,aACJ,qBAAK7C,UAAU,iBAAiBjI,KAAK,SAArC,SACI,sBAAMiI,UAAU,UAAhB,+BAKM,oBAAzBN,KAAKhB,MAAM7E,WACR,qBAAKmG,UAAU,2BAAf,SACI,yBAAQA,UAAU,iBAAiBoB,QAAS,SAAA5B,GAAC,OAAI,EAAK8T,UAAU,oBAAhE,oBAC4B,IAA3B5T,KAAKhB,MAAMmE,aACJ,qBAAK7C,UAAU,iBAAiBjI,KAAK,SAArC,SACI,sBAAMiI,UAAU,UAAhB,+BAKM,wBAAzBN,KAAKhB,MAAM7E,WACR,qBAAKmG,UAAU,2BAAf,SACI,yBAAQA,UAAU,iBAAiBoB,QAAS,SAAA5B,GAAC,OAAI,EAAK8T,UAAU,wBAAhE,oBAC4B,IAA3B5T,KAAKhB,MAAMmE,aACJ,qBAAK7C,UAAU,iBAAiBjI,KAAK,SAArC,SACI,sBAAMiI,UAAU,UAAhB,+BAKM,uBAAzBN,KAAKhB,MAAM7E,WACR,qBAAKmG,UAAU,2BAAf,SACI,yBAAQA,UAAU,iBAAiBoB,QAAS,SAAA5B,GAAC,OAAI,EAAK8T,UAAU,uBAAhE,oBAC4B,IAA3B5T,KAAKhB,MAAMmE,aACJ,qBAAK7C,UAAU,iBAAiBjI,KAAK,SAArC,SACI,sBAAMiI,UAAU,UAAhB,+BAKM,qBAAzBN,KAAKhB,MAAM7E,WACR,qBAAKmG,UAAU,2BAAf,SACI,yBAAQA,UAAU,iBAAiBoB,QAAS,SAAA5B,GAAC,OAAI,EAAK8T,UAAU,qBAAhE,iBAC4B,IAA3B5T,KAAKhB,MAAMmE,aACJ,qBAAK7C,UAAU,iBAAiBjI,KAAK,SAArC,SACI,sBAAMiI,UAAU,UAAhB,+BAKM,oBAAzBN,KAAKhB,MAAM7E,WACR,qBAAKmG,UAAU,2BAAf,SACI,yBAAQA,UAAU,iBAAiBoB,QAAS,SAAA5B,GAAC,OAAI,EAAK8T,UAAU,oBAAhE,iBAC4B,IAA3B5T,KAAKhB,MAAMmE,aACJ,qBAAK7C,UAAU,iBAAiBjI,KAAK,SAArC,SACI,sBAAMiI,UAAU,UAAhB,+BAKM,oBAAzBN,KAAKhB,MAAM7E,WACR,qBAAKmG,UAAU,2BAAf,SACI,yBAAQA,UAAU,iBAAiBoB,QAAS,SAAA5B,GAAC,OAAI,EAAKyX,aAAa,oBAAnE,oBAC4B,IAA3BvX,KAAKhB,MAAMmE,aACJ,qBAAK7C,UAAU,iBAAiBjI,KAAK,SAArC,SACI,sBAAMiI,UAAU,UAAhB,+BAIM,wBAAzBN,KAAKhB,MAAM7E,WACR,qBAAKmG,UAAU,2BAAf,SACI,yBAAQA,UAAU,iBAAiBoB,QAAS,SAAA5B,GAAC,OAAI,EAAKyX,aAAa,wBAAnE,oBAC4B,IAA3BvX,KAAKhB,MAAMmE,aACJ,qBAAK7C,UAAU,iBAAiBjI,KAAK,SAArC,SACI,sBAAMiI,UAAU,UAAhB,kCAMpB,cAACa,EAAA,EAAD,CACIC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CC,KAAMvB,KAAKhB,MAAM/F,IACjBqH,UAAU,WACVxI,QAASkI,KAAKhB,MAAMhH,e,GA1uBrBgK,aA6vBRC,gBAXS,SAAAjD,GAAK,MAAK,CAC9BT,WAAYS,EAAMO,KAAKhB,WACvBlE,aAAc2E,EAAMO,KAAKlF,aACzBC,YAAa0E,EAAMO,KAAKjF,YACxB8E,aAAcJ,EAAMD,KAAKK,iBAGF,SAAAnI,GAAQ,MAAK,CACpCoJ,QAAS6B,YAAmB,CAAEhI,oCAAkBE,oBAAUE,2BAAerD,MAG9DgL,CAA6C8T,I,2FC3vBtD2B,G,4MACF1Y,MAAQ,CACJ2Y,aAAc,GACdlgB,SAAU,GACV+N,KAAM,GACNrC,YAAa,GACbyU,kBAAmB,GACnB3e,KAAK,EACLjB,MAAO,I,EAEX6f,gBAAkB,SAAAzP,GACd,EAAKvI,SAAS,CACV8X,aAAcvP,EAAMnH,OAAO6W,MAAM,GACjCC,OAAQ,K,EAUhBhU,YAAc,WACV6Q,QAAQC,IAAI,SACZ,EAAKhV,SAAS,CACVpI,SAAU,GACV+N,KAAM,GACNrC,YAAa,GACbyU,kBAAmB,GACnB3e,KAAK,EACLjB,MAAO,M,EAsCfggB,e,wBAAiB,iCAAA/R,EAAA,6DACb,EAAKpG,SAAS,CAAE2F,MAAM,IAGlByS,EAAI,EAAKjZ,MAAM2Y,aACfO,EAAS,IAAIC,WALJ,SAMS,SAAUrY,GAC5B,IAAInJ,EAAOmJ,EAAEmB,OAAO7C,OAChBga,EAAaC,QAAU1hB,EAAM,CAAEJ,KAAM,WACnC+hB,EAASF,EAAWG,WAAW,GAC/BC,EAAKJ,EAAWK,OAAOH,GAE7BI,EAAYL,SAAWM,0BAA0BH,EAAI,CAAEI,OAAQ,MAZtD,OAMbV,EAAOW,OANM,OAcbjZ,YAAW,WACH8Y,GAAkC,IAArBA,EAAU7c,QAEvB,EAAKuE,MAAMC,QAAQ1F,YAAY+d,EAAW,CAAE,aAAgB,EAAKtY,MAAMhB,aAAahH,SAAU,MAAS,EAAKgI,MAAMhB,aAAaxH,cAEpI,KACHgI,YAAW,WAEH,EAAKQ,MAAMvF,WAA6C,MAAhC,EAAKuF,MAAMvF,UAAUnD,SAC7C,EAAKmI,SAAS,CAAEpI,SAAU,EAAK2I,MAAMvF,UAAW2K,MAAM,EAAOxN,MAAO,EAAKoI,MAAMvF,UAAUlE,KAAKmB,QAASmB,KAAK,EAAMgH,UAAW,iBAC7HL,YAAW,WACP,EAAKmE,gBACN,SAGR,KACHmU,EAAOY,mBAAmBb,GA9Bb,2C,4CAiCjB,WACI,OACI,sBAAK3X,UAAU,kBAAf,UACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,uCAAf,8BACA,sBAAKA,UAAU,iCAAf,UACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,MAAf,SACI,iCACI,uBAAO/J,KAAK,OAAOmM,KAAK,OAAOpC,UAAU,aAAayY,OAAO,cAAc/X,SAAUhB,KAAK6X,kBAC1F,wBAAQvX,UAAU,gBAAgBoB,QAAS1B,KAAKgY,eAAhD,gCAMC,IAApBhY,KAAKhB,MAAMwG,MAAiB,qBAAKlF,UAAU,cAAf,SACzB,qBAAKA,UAAU,iBAAiBjI,KAAK,SAArC,SACI,sBAAMiI,UAAU,UAAhB,sCA6BxB,cAACa,EAAA,EAAD,CACIC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CC,KAAMvB,KAAKhB,MAAM/F,IACjBqH,UAAU,WACVxI,QAASkI,KAAKhB,MAAMhH,e,GA7JnBgK,aA8KNC,gBATS,SAAAjD,GAAK,MAAK,CAC9BnE,UAAWmE,EAAMO,KAAK1E,UACtBK,UAAW8D,EAAMO,KAAKrE,UACtBkE,aAAcJ,EAAMD,KAAKK,iBAGF,SAAAnI,GAAQ,MAAK,CACpCoJ,QAAS6B,YAAmB8W,EAAY/hB,MAE7BgL,CAA6CyV,I,UClL/CuB,GAAmB,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,UAAW7N,EAA+C,EAA/CA,YAAa8N,EAAkC,EAAlCA,aAAkC,EAApBC,cAErE,OACI,eAACtJ,GAAA,EAAD,CAAOtK,KAAM0T,EAAWnJ,OAAQ1E,EAAa/K,UAAU,aAAvD,UACI,cAACwP,GAAA,EAAMI,OAAP,CAAcE,aAAW,EAAzB,SACI,cAACN,GAAA,EAAMO,MAAP,oCAEJ,cAACP,GAAA,EAAMQ,KAAP,wDACA,eAACR,GAAA,EAAM2B,OAAP,WACI,cAAC,KAAD,CAAQ4H,QAAQ,SAAS3X,QAASyX,EAAlC,oBAGA,cAAC,KAAD,CAAQ7Y,UAAU,iBAAiBoB,QAAS2J,EAA5C,yB,oBCVViO,I,OAAS,CAAC,UAAW,cAAe,cAAe,yBACnDjG,GAAM,CAAC,UAAW,QAAS,SAAU,QAAS,cAAe,OAE7DkG,GAAW,CAAC,MAAO,eAAgB,MAAO,cAAe,WAAY,oBAAqB,uBAAwB,uBAAwB,KAAM,aAAc,eAAgB,cAAe,aAAc,cAC3MC,G,4MACFxa,MAAQ,CACJuE,MAAO,GACPF,SAAU,GACVD,SAAU,GACVkU,YAAa,GACbmC,OAAQ,GACR7W,YAAa,GACb3J,KAAK,EACLygB,SAAU,GACVzZ,UAAW,GACXkD,aAAa,EACbwW,SAAU,GACVJ,SAAU,GACVK,YAAa,GACbC,SAAU,GACVnG,UAAW,GACXoG,OAAQ,cACRnC,aAAc,GACdoC,aAAa,G,EAsBjBC,eAAiB,SAACC,GAId,OAHQA,EAAMxT,KAAI,SAACyT,GAAD,OAAOA,EAAE/M,QAAMrR,QAAO,SAACoF,EAAOyG,EAAOwS,GACnD,OAAOA,EAAKxE,QAAQzU,KAAWyG,M,EAIvCyS,cAAgB,SAACC,GACb,IAAI9jB,EAAO,GAcX,MAbqC,gBAAjC,EAAK6J,MAAMhB,aAAa/G,MAA2D,eAAjC,EAAK+H,MAAMhB,aAAa/G,OAC1E9B,EAAO8jB,EAAO5T,KAAI,SAACyT,GAAD,OAAOA,EAAExX,QAAM5G,QAAO,SAACoF,EAAOyG,EAAOwS,GACnD,OAAOA,EAAKxE,QAAQzU,KAAWyG,MAWhCpR,G,EAOXiQ,iBAAmB,SAAC1G,GAChB,IACIwU,EADAhR,EAAU,GAEdA,EAAU,EAAKlD,MAAM7B,YAAc,EAAK6B,MAAM7B,WAAWzC,QAAO,SAAU+J,GACtE,OAAOA,EAAInD,OAAS5C,EAAEmB,OAAOC,SAC9BuF,KAAI,SAAA6T,GAAC,OAAIA,EAAEhX,WAEuB,QAAjC,EAAKlD,MAAMhB,aAAa/G,MACxBic,EAAShR,EAAQ,GAAIxH,QAAO,SAAAoF,GAAK,OAAK,EAAKlC,MAAM2a,SAAUzZ,SAASgB,MACpE,EAAKrB,SAAS,CAAEuD,SAAUtD,EAAEmB,OAAOC,MAAOmC,SAAUiR,EAAOgD,YAAa,MAExE,EAAKzX,SAAS,CAAEuD,SAAUtD,EAAEmB,OAAOC,MAAOmC,SAAUC,EAAQ,GAAIgU,YAAa,GAAIiC,SAAU,KAExE,iBAAnBzZ,EAAEmB,OAAOC,MACT,EAAKrB,SAAS,CAAE+Z,YAAaL,KAE7B,EAAK1Z,SAAS,CAAE+Z,YAAa,M,EAGrCW,YAAc,SAACza,GACX,IAAI0a,EAAS1a,EAAEmB,OAAOC,MACtB,EAAKrB,SAAS,CAAEyX,YAAakD,EAAQjB,SAAU,M,EAQnDkB,SAAW,WACP,GAA4B,KAAxB,EAAKzb,MAAMoE,UAAyC,KAAtB,EAAKpE,MAAMya,QAAyC,KAAxB,EAAKza,MAAMua,UAA8C,KAA3B,EAAKva,MAAM4D,aAA+C,KAAzB,EAAK5D,MAAM0U,UACpI,EAAK7T,SAAS,CAAE5G,KAAK,EAAMygB,SAAU,yBAA0BzZ,UAAW,gBAC1E,EAAKjI,aAEJ,GAA4B,WAAxB,EAAKgH,MAAMoE,UAAoD,KAA3B,EAAKpE,MAAMsY,YACpD,EAAKzX,SAAS,CAAE5G,KAAK,EAAMygB,SAAU,6BAA8BzZ,UAAW,gBAC9E,EAAKjI,aAEJ,GAA4B,WAAxB,EAAKgH,MAAMua,UAAiD,KAAxB,EAAKva,MAAM6a,SACpD,EAAKha,SAAS,CAAE5G,KAAK,EAAMygB,SAAU,wBAAyBzZ,UAAW,gBACzE,EAAKjI,aAEJ,GAA4B,WAAxB,EAAKgH,MAAMua,UAA0B,EAAKva,MAAM6a,SAAS3Z,SAAS,KAItE,GAA4B,WAAxB,EAAKlB,MAAMua,UAA0B,EAAKva,MAAM6a,SAAS3Z,SAAS,YAItE,CACD,EAAKL,SAAS,CAAEsD,aAAa,IAC7B,IAAI2H,EAAW,GACXvU,EAAO,GACiB,KAAxB,EAAKyI,MAAM6a,UACX/O,EAAY,EAAK9L,MAAM6a,SAAU1U,QAAQ,SAAU,IAAI2L,MAAM,KAC7Dva,EAAO,OAaPA,EAAO,SACPuU,EAAW,IAGf,IAAI4P,EAAUzV,OAAOC,OAAO,GAAI,CAC5B9B,SAAU,EAAKpE,MAAMoE,SACrBkU,YAAa,EAAKtY,MAAMsY,YACxBmC,OAAQ,EAAKza,MAAMya,OACnB7W,YAAa,EAAK5D,MAAM4D,YAAYuC,QAAQ,iBAAkB,MAC9DuO,UAAW,EAAK1U,MAAM0U,UACtB5I,SAAUA,EAASjP,OAAS,EAAIiP,EAAW,GAC3CyO,SAAU,EAAKva,MAAMua,SACrBxa,KAAM,EAAKqB,MAAMhB,aAAaxH,UAC9ByN,aAAc,EAAKjF,MAAMhB,aAAahH,SACtCkN,cAAe,EAAKlF,MAAMhB,aAAaxH,UACvCrB,KAAMA,EACNohB,aAAc,EAAK3Y,MAAM2Y,eAEH,UAAtB,EAAK3Y,MAAM8a,OACX,EAAK1Z,MAAMC,QAAQvF,iBAAiB4f,GACP,UAAtB,EAAK1b,MAAM8a,OAClB,EAAK1Z,MAAMC,QAAQpE,kBAAkBye,GACR,gBAAtB,EAAK1b,MAAM8a,SAClB,EAAK1Z,MAAMC,QAAQvF,iBAAiB4f,GACpC,EAAKta,MAAMC,QAAQpE,kBAAkBye,IAGzC9a,YAAW,WACH,EAAKQ,MAAMZ,cAAmD,MAAnC,EAAKY,MAAMZ,aAAa9H,QAAwD,SAAtC,EAAK0I,MAAMZ,aAAa7I,KAAKA,MAClG,EAAKkJ,SAAS,CAAE5G,KAAK,EAAMygB,SAAU,iCAAkCzZ,UAAW,eAAgBkD,aAAa,EAAO0W,SAAU,KAChI,EAAK7hB,QACL,EAAK+L,gBAGL,EAAKlE,SAAS,CAAE5G,KAAK,EAAMygB,SAAU,uBAAwBzZ,UAAW,cAAekD,aAAa,EAAO0W,SAAU,KACrH,EAAK7hB,WAEV,UA3DH,EAAK6H,SAAS,CAAE5G,KAAK,EAAMygB,SAAU,iCAAkCzZ,UAAW,gBAClF,EAAKjI,aALL,EAAK6H,SAAS,CAAE5G,KAAK,EAAMygB,SAAU,2BAA4BzZ,UAAW,gBAC5E,EAAKjI,S,EAiEb+L,YAAc,WACV,EAAKlE,SAAS,CACVuD,SAAU,GACVkU,YAAa,GACbmC,OAAQ,GACR7W,YAAa,GACbO,aAAa,EACboW,SAAU,GACVM,SAAU,GACVxW,SAAU,GACVuW,YAAa,GACblG,UAAW,GACXoG,OAAQ,cACRnC,aAAc,GACdoC,aAAa,IAEjB,EAAKY,SAASC,QAAQ1Z,MAAQ,I,EAElClJ,MAAQ,WACJ4H,YAAW,WACP,EAAKC,SAAS,CAAE5G,KAAK,EAAOygB,SAAU,GAAIzZ,UAAW,OACtD,O,EAEP4a,eAAiB,SAAC/a,GACd,IAAIgb,EAAMhb,EACV,EAAKD,SAAS,CAAE0Z,SAAUuB,EAAKjB,SAAU,M,EAI7CkB,a,yCAAe,WAAO3S,GAAP,gBAAAnC,EAAA,6DACP6R,EAAQ7S,OAAO+V,OAAO5S,EAAMnH,OAAO6W,OACvC,EAAKjY,SAAS,CAAEka,aAAa,IAFlB,SAGLjC,EAAMlS,SAAQ,SAACqV,EAAMjO,GACvB,EAAKkO,oBAAoBD,GAAM,SAACE,GAC5B,EAAKtb,UAAS,SAAA4X,GAAS,MAAK,CACxBE,aAAa,GAAD,oBAAMF,EAAUE,cAAhB,CAA8B,CAAEyD,SAAUH,EAAKvY,KAAM2Y,KAAMF,SAEvEnO,EAAI,IAAM8K,EAAMjc,QAChB,EAAKgE,SAAS,CAAEka,aAAa,UAT9B,2C,wDAgBfmB,oBAAsB,SAACD,EAAMK,GACzB,IAAIpD,EAAS,IAAIC,WACjBD,EAAOqD,cAAcN,GACrBrb,YAAW,WAAQ0b,EAAGpD,EAAO9Z,UAAW,M,+DA7M5C,WACI4B,KAAK2a,SAAWvY,IAAMoZ,YACtBxb,KAAKI,MAAMC,QAAQnG,mBAcf8F,KAAKI,MAAM7B,WAAW1C,OAAS,GAC/BmE,KAAKH,SAAS,CAAE0D,MAAOvD,KAAKoa,cAAcpa,KAAKI,MAAM7B,gB,gCA0B7D,SAAmBwH,GACXA,EAAUxH,aAAeyB,KAAKI,MAAM7B,YACpCyB,KAAKH,SAAS,CAAE0D,MAAOvD,KAAKoa,cAAcpa,KAAKI,MAAM7B,gB,oBAmK7D,WAAU,IAAD,OACL,OACI,sBAAK+B,UAAU,6BAAf,UACKN,KAAKhB,MAAMuE,OAAqC,IAA5BvD,KAAKhB,MAAMuE,MAAM1H,OAClC,sBAAKyE,UAAU,iBAAf,UACI,qBAAKA,UAAU,uCAAf,0BACA,sBAAKA,UAAU,qBAAf,UACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,gCAAO,iDACP,yBAAQA,UAAU,eACdY,MAAOlB,KAAKhB,MAAM0U,UAClB1S,SAAU,SAAClB,GAAD,OAAO,EAAKD,SAAS,CAAE6T,UAAW5T,EAAEmB,OAAOC,SAFzD,UAGI,wBAAQA,MAAM,GAAGqF,UAAQ,EAAzB,kCACC8M,IAAOA,GAAI5M,KAAI,SAACZ,GACb,OACI,iCAAmBA,GAANA,YAK7B,sBAAKvF,UAAU,gBAAf,UACI,gCAAO,gDACP,yBAAQA,UAAU,eACdY,MAAOlB,KAAKhB,MAAMoE,SAClBpC,SAAU,SAAClB,GAAD,OAAO,EAAK0G,iBAAiB1G,IAF3C,UAGI,wBAAQoB,MAAM,GAAGqF,UAAQ,EAAzB,kCACCvG,KAAKhB,MAAMuE,OAASvD,KAAKhB,MAAMuE,MAAMkD,KAAI,SAACZ,GACvC,OACI,iCAAmBA,GAANA,MAGrB,kDAGiB,WAAxB7F,KAAKhB,MAAMoE,UACR,sBAAK9C,UAAU,gBAAf,UACI,gCAAO,2DACP,yBAAQA,UAAU,eACdY,MAAOlB,KAAKhB,MAAMsY,YAClBtW,SAAU,SAAClB,GAAD,OAAO,EAAKya,YAAYza,IAFtC,UAGI,wBAAQoB,MAAM,GAAGqF,UAAQ,EAAzB,kCACCvG,KAAKhB,MAAMqE,UAAYrD,KAAKhB,MAAMqE,SAASoD,KAAI,SAACZ,GAC7C,OACI,iCAAmBA,GAANA,YAMjC,sBAAKvF,UAAU,gBAAf,UACI,gCAAO,8CACP,yBAAQA,UAAU,eACdY,MAAOlB,KAAKhB,MAAMya,OAClBzY,SAAU,SAAClB,GAAD,OAAO,EAAKD,SAAS,CAAE4Z,OAAQ3Z,EAAEmB,OAAOC,SAFtD,UAGI,wBAAQA,MAAM,GAAGqF,UAAQ,EAAzB,kCACC+S,IAAUA,GAAO7S,KAAI,SAACZ,GACnB,OACI,iCAAmBA,GAANA,MAGrB,kDAIR,sBAAKvF,UAAU,gBAAf,UACI,gCAAO,gDACP,yBAAQA,UAAU,eACdY,MAAOlB,KAAKhB,MAAMua,SAClBvY,SAAU,SAAClB,GAAD,OAAO,EAAK+a,eAAe/a,EAAEmB,OAAOC,QAFlD,UAII,wBAAQA,MAAM,GAAGqF,UAAQ,EAAzB,kCACCvG,KAAKhB,MAAM4a,aAAe5Z,KAAKhB,MAAM4a,YAAYnT,KAAI,SAACZ,GACnD,OACI,iCAAmBA,GAANA,MAGrB,2CAAa,mBAIA,WAAxB7F,KAAKhB,MAAMua,UACR,qBAAKjZ,UAAU,WAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,gCAAO,sDACP,0BACIA,UAAU,eACVgG,YAAY,gEACZpF,MAAOlB,KAAKhB,MAAM6a,SAClB7Y,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAEga,SAAU/Z,EAAEmB,OAAOC,SAClD3K,KAAK,OACLmQ,KAAK,WAGrB,qBAAKpG,UAAU,WAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,gCAAO,mDACP,0BACIA,UAAU,eACVgG,YAAY,cACZpF,MAAOlB,KAAKhB,MAAM4D,YAClB5B,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE+C,YAAa9C,EAAEmB,OAAOC,SACrD3K,KAAK,OACLmQ,KAAK,WAGM,UAAtB1G,KAAKhB,MAAM8a,QAAsB,qBAAKxZ,UAAU,WAAf,SAC9B,sBAAKA,UAAU,gBAAf,UACI,gCAAO,oDACP,uBACA/J,KAAK,OACLuK,GAAG,aACHY,QAAS,SAAA5B,GAAOA,EAAEmB,OAAOC,MAAQ,KAAM,EAAKrB,SAAS,CAAC8X,aAAc,MACpErX,UAAU,oBACVU,SAAUhB,KAAK+a,aACf5F,UAAQ,EACR7S,IAAKtC,KAAK2a,mBAItB,sBAAKra,UAAU,2BAAf,UACI,wBAAQA,UAAU,iBAAiBoB,QAAS,SAAA5B,GAAC,OAAI,EAAK2a,YAAYlU,SAAUvG,KAAKhB,MAAM+a,YAAvF,kBACA,sBAAKzZ,UAAU,iBAAf,UACI,uBAAOA,UAAU,kCAAjB,SAAmD,gDACnD,yBAAQA,UAAU,iCACdY,MAAOlB,KAAKhB,MAAM8a,OAClB9Y,SAAU,SAAClB,GAAD,OAAO,EAAKD,SAAS,CAAEia,OAAQha,EAAEmB,OAAOC,SAFtD,UAGI,wBAAQA,MAAM,GAAGqF,UAAQ,EAAzB,kCACA,wBAAQrF,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,cAAd,kCAIoB,IAA3BlB,KAAKhB,MAAMmE,aAAwB,qBAAK7C,UAAU,cAAf,SAChC,qBAAKA,UAAU,iBAAiBjI,KAAK,SAArC,SACI,sBAAMiI,UAAU,UAAhB,kCAMhB,qBAAKA,UAAU,cAAf,SACI,qBAAKA,UAAU,iBAAiBjI,KAAK,SAArC,SACI,sBAAMiI,UAAU,UAAhB,4BAIZ,cAACa,EAAA,EAAD,CACIC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CC,KAAMvB,KAAKhB,MAAM/F,IACjBqH,UAAU,WACVxI,QAASkI,KAAKhB,MAAM0a,kB,GA7Xb1X,aA8YZC,gBAVS,SAAAjD,GAAK,MAAK,CAC9BT,WAAYS,EAAMO,KAAKhB,WACvBiB,aAAcR,EAAMO,KAAKC,aACzBJ,aAAcJ,EAAMD,KAAKK,iBAGF,SAAAnI,GAAQ,MAAK,CACpCoJ,QAAS6B,YAAmB8W,EAAY/hB,MAG7BgL,CAA6CuX,I,qBC/YtDF,I,OAAS,CAAC,UAAW,cAAe,cAAe,yBACnDjG,GAAM,CAAC,UAAW,QAAS,SAAU,QAAS,cAAe,OAC7DoI,G,kDACF,WAAYrb,GAAQ,IAAD,8BACf,cAAMA,IAgCVga,cAAgB,SAACC,GACb,IAAI9jB,EAAO,GAgBX,MAfqC,gBAAjC,EAAK6J,MAAMhB,aAAa/G,MAA2D,eAAjC,EAAK+H,MAAMhB,aAAa/G,OAC1E9B,EAAO8jB,GAAUA,EAAO5T,KAAI,SAACyT,GAAD,OAAOA,EAAExX,QAAM5G,QAAO,SAACoF,EAAOyG,EAAOwS,GAC7D,OAAOA,EAAKxE,QAAQzU,KAAWyG,MAahCpR,GAlDQ,EA4DnBiQ,iBAAmB,SAAC1G,GAChB,IACIwU,EADAhR,EAAU,GAEdA,EAAU,EAAKlD,MAAM7B,YAAc,EAAK6B,MAAM7B,WAAWzC,QAAO,SAAU+J,GACtE,OAAOA,EAAInD,OAAS5C,EAAEmB,OAAOC,SAC9BuF,KAAI,SAAA6T,GAAC,OAAIA,EAAEhX,WAEuB,QAAjC,EAAKlD,MAAMhB,aAAa/G,MACxBic,EAAShR,EAAQ,GAAIxH,QAAO,SAAAoF,GAAK,OAAK,EAAKlC,MAAM2a,SAAUzZ,SAASgB,MACpE,EAAKrB,SAAS,CAAEuD,SAAUtD,EAAEmB,OAAOC,MAAOmC,SAAUiR,EAAOgD,YAAa,MAExE,EAAKzX,SAAS,CAAEuD,SAAUtD,EAAEmB,OAAOC,MAAOmC,SAAUC,EAAQ,GAAIgU,YAAa,MAvElE,EAiFnBiD,YAAc,SAACza,GACX,IAAI0a,EAAS1a,EAAEmB,OAAOC,MACtB,EAAKrB,SAAS,CAAEyX,YAAakD,KAnFd,EAsFnBzW,YAAc,WACV,EAAKlE,SAAS,CACVuD,SAAU,GACVkU,YAAa,GACbmC,OAAQ,GACR/F,UAAW,GACX6F,SAAU,GACVmC,MAAO,GACPC,IAAK,GACL/Y,YAAa,GACbgX,YAAa,GACbgC,aAAc,IAAIrX,KAClBsX,WAAY,IAAItX,QAlGL,EAqGnBuX,SAAW,WACP,GAA4B,KAAxB,EAAK9c,MAAMoE,UAAyC,KAAtB,EAAKpE,MAAMya,QAA4C,KAA3B,EAAKza,MAAMsY,aAA+C,KAAzB,EAAKtY,MAAM0U,UACtG,EAAK7T,SAAS,CAAE5G,KAAK,EAAMygB,SAAU,yBAA0BzZ,UAAW,gBAC1E,EAAKjI,aAcJ,GAA0B,KAAtB,EAAKgH,MAAMya,QAAsC,KAArB,EAAKza,MAAM0c,MAC5C,EAAK7b,SAAS,CAAE5G,KAAK,EAAMygB,SAAU,0BAA2BzZ,UAAW,gBAC3E,EAAKjI,aAEJ,GAA0B,KAAtB,EAAKgH,MAAMya,QAAoC,KAAnB,EAAKza,MAAM2c,IAC5C,EAAK9b,SAAS,CAAE5G,KAAK,EAAMygB,SAAU,wBAAyBzZ,UAAW,gBACzE,EAAKjI,aAEJ,GAA0B,KAAtB,EAAKgH,MAAMya,QAA4C,KAA3B,EAAKza,MAAM4D,YAC5C,EAAK/C,SAAS,CAAE5G,KAAK,EAAMygB,SAAU,2BAA4BzZ,UAAW,gBAC5E,EAAKjI,YAEJ,CACD,IAAI6T,EAAM5G,OAAOC,OAAO,GAAI,CACxB9B,SAAU,EAAKpE,MAAMoE,SACrBkU,YAAa,EAAKtY,MAAMsY,YACxBmC,OAAQ,EAAKza,MAAMya,OACnB/F,UAAW,EAAK1U,MAAM0U,UAEtBgI,MAAO,EAAK1c,MAAM0c,MAClBC,IAAK,EAAK3c,MAAM2c,IAChB/Y,YAAa,EAAK5D,MAAM4D,YACxB7D,KAAM,EAAKqB,MAAMhB,aAAaxH,UAC9ByN,aAAc,EAAKjF,MAAMhB,aAAahH,SACtCkN,cAAe,EAAKlF,MAAMhB,aAAaxH,YAE3C,EAAKwI,MAAMC,QAAQjF,iBAAiByQ,GACpCjM,YAAW,WACH,EAAKQ,MAAMZ,cAAmD,MAAnC,EAAKY,MAAMZ,aAAa9H,QACnD,EAAKmI,SAAS,CAAE5G,KAAK,EAAMygB,SAAU,kCAAmCzZ,UAAW,eAAgBkD,aAAa,EAAO0W,SAAU,KACjI,EAAK7hB,QACL,EAAK+L,gBAGL,EAAKlE,SAAS,CAAE5G,KAAK,EAAMygB,SAAU,uBAAwBzZ,UAAW,cAAekD,aAAa,IACpG,EAAKnL,WAEV,OA3JQ,EA+JnBA,MAAQ,WACJ4H,YAAW,WACP,EAAKC,SAAS,CAAE5G,KAAK,EAAOygB,SAAU,GAAIzZ,UAAW,OACtD,OAlKY,EA2KnB8b,gBAAkB,SAACzX,GACf,OAAOA,EAAG6M,eA1KV,EAAKnS,MAAQ,CACTuE,MAAO,GACPF,SAAU,GACVD,SAAU,GACVkU,YAAa,GACbmC,OAAQ,GACR7W,YAAa,GACb3J,KAAK,EACLygB,SAAU,GACVzZ,UAAW,GACXkD,aAAa,EACbwW,SAAU,GACVJ,SAAU,GACVK,YAAa,GACbC,SAAU,GACVnG,UAAW,GACXgI,MAAO,GACPC,IAAK,GACLC,aAAc,IAAIrX,KAClBsX,WAAY,IAAItX,MArBL,E,6DAyBnB,WACIvE,KAAKI,MAAMC,QAAQnG,mBAEf8F,KAAKI,MAAM7B,WAAW1C,OAAS,GAE/BmE,KAAKH,SAAS,CAAE0D,MAAOvD,KAAKoa,cAAcpa,KAAKI,MAAM7B,gB,gCAuB7D,SAAmBwH,GACXA,EAAUxH,aAAeyB,KAAKI,MAAM7B,YAEpCyB,KAAKH,SAAS,CAAE0D,MAAOvD,KAAKoa,cAAcpa,KAAKI,MAAM7B,gB,oBAuH7D,WAAU,IAAD,OAGL,OACI,sBAAK+B,UAAU,6BAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,uCAAf,0BACA,sBAAKA,UAAU,qBAAf,UACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,gCAAO,iDACP,yBAAQA,UAAU,eACdY,MAAOlB,KAAKhB,MAAM0U,UAClB1S,SAAU,SAAClB,GAAD,OAAO,EAAKD,SAAS,CAAE6T,UAAW5T,EAAEmB,OAAOC,SAFzD,UAGI,wBAAQA,MAAM,GAAGqF,UAAQ,EAAzB,kCACC8M,IAAOA,GAAI5M,KAAI,SAACZ,GACb,OACI,iCAAmBA,GAANA,YAK7B,sBAAKvF,UAAU,gBAAf,UACI,gCAAO,gDACP,yBAAQA,UAAU,eACdY,MAAOlB,KAAKhB,MAAMoE,SAClBpC,SAAU,SAAClB,GAAD,OAAO,EAAK0G,iBAAiB1G,IAF3C,UAGI,wBAAQoB,MAAM,GAAGqF,UAAQ,EAAzB,kCACCvG,KAAKhB,MAAMuE,OAASvD,KAAKhB,MAAMuE,MAAMkD,KAAI,SAACZ,GACvC,OACI,iCAAmBA,GAANA,YAO7B,sBAAKvF,UAAU,gBAAf,UACI,gCAAO,2DACP,yBAAQA,UAAU,eACdY,MAAOlB,KAAKhB,MAAMsY,YAClBtW,SAAU,SAAClB,GAAD,OAAO,EAAKya,YAAYza,IAFtC,UAGI,wBAAQoB,MAAM,GAAGqF,UAAQ,EAAzB,kCACCvG,KAAKhB,MAAMqE,UAAYrD,KAAKhB,MAAMqE,SAASoD,KAAI,SAACZ,GAC7C,OACI,iCAAmBA,GAANA,YAM7B,sBAAKvF,UAAU,gBAAf,UACI,gCAAO,8CACP,yBAAQA,UAAU,eACdY,MAAOlB,KAAKhB,MAAMya,OAClBzY,SAAU,SAAClB,GAAD,OAAO,EAAKD,SAAS,CAAE4Z,OAAQ3Z,EAAEmB,OAAOC,SAFtD,UAGI,wBAAQA,MAAM,GAAGqF,UAAQ,EAAzB,kCACC+S,IAAUA,GAAO7S,KAAI,SAACZ,GACnB,OACI,iCAAmBA,GAANA,eAmCV,KAAtB7F,KAAKhB,MAAMya,QAAiB,gCACzB,sBAAKnZ,UAAU,WAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,gCAAO,2DAWP,cAAC,KAAD,CACIkV,SAAUxV,KAAKhB,MAAM4c,aACrBtb,UAAU,eACVU,SAAU,SAAAwD,GACN,EAAK3E,SAAS,CAAE+b,aAAcpX,IAC9B,EAAK3E,SAAS,CAAE6b,MAAO,EAAKK,gBAAgBvX,MAEhDwX,OAAO,KACPC,gBAAc,EACdC,WAAW,IACXC,cAAe,EACfC,WAAW,UAGnB,sBAAK9b,UAAU,gBAAf,UACI,gCAAO,yDAYP,cAAC,KAAD,CACIkV,SAAUxV,KAAKhB,MAAM6c,WACrBvb,UAAU,eACVU,SAAU,SAAAwD,GACN,EAAK3E,SAAS,CAAEgc,WAAYrX,IAC5B,EAAK3E,SAAS,CAAE8b,IAAK,EAAKI,gBAAgBvX,MAE9CwX,OAAO,KACPC,gBAAc,EACdC,WAAW,IACXC,cAAe,EACfC,WAAW,KACXC,QAASrc,KAAKhB,MAAM4c,qBAIhC,qBAAKtb,UAAU,WAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,gCAAO,mDACP,0BACIA,UAAU,eACVgG,YAAY,cACZpF,MAAOlB,KAAKhB,MAAM4D,YAClB5B,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE+C,YAAa9C,EAAEmB,OAAOC,SACrD3K,KAAK,OACLmQ,KAAK,iBAMzB,sBAAKpG,UAAU,2BAAf,UACI,wBAAQA,UAAU,iBAAiBoB,QAAS,SAAA5B,GAAC,OAAI,EAAKgc,YAAtD,mBAC4B,IAA3B9b,KAAKhB,MAAMmE,aAAwB,qBAAK7C,UAAU,cAAf,SAChC,qBAAKA,UAAU,iBAAiBjI,KAAK,SAArC,SACI,sBAAMiI,UAAU,UAAhB,kCAKhB,cAACa,EAAA,EAAD,CACIC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CC,KAAMvB,KAAKhB,MAAM/F,IACjBqH,UAAU,WACVxI,QAASkI,KAAKhB,MAAM0a,kB,GAnWR1X,aAsXjBC,gBAZS,SAAAjD,GAAK,MAAK,CAC9BT,WAAYS,EAAMO,KAAKhB,WACvBiB,aAAcR,EAAMO,KAAKC,aAEzB/F,SAAUuF,EAAMO,KAAK9F,SACrB2F,aAAcJ,EAAMD,KAAKK,iBAGF,SAAAnI,GAAQ,MAAK,CACpCoJ,QAAS6B,YAAmB8W,EAAY/hB,MAG7BgL,CAA6CwZ,ICxXtDnC,GAAS,CAAC,UAAW,cAAe,cAAe,wBACnDjG,GAAM,CAAC,UAAW,QAAS,SAAU,QAAS,cAAe,OAC7DkG,GAAW,CAAC,MAAO,eAAgB,MAAO,cAAe,WAAY,oBAAqB,uBAAwB,uBAAwB,KAAM,aAAc,eAAgB,cAAe,aAAc,cAE3M+C,G,kDACF,WAAYlc,GAAQ,IAAD,8BACf,cAAMA,IAiCVga,cAAgB,SAACC,GACb,IAAI9jB,EAAO,GAcX,MAbqC,gBAAjC,EAAK6J,MAAMhB,aAAa/G,MAA2D,eAAjC,EAAK+H,MAAMhB,aAAa/G,OAC1E9B,EAAO8jB,EAAO5T,KAAI,SAACyT,GAAD,OAAOA,EAAExX,QAAM5G,QAAO,SAACoF,EAAOyG,EAAOwS,GACnD,OAAOA,EAAKxE,QAAQzU,KAAWyG,MAWhCpR,GAjDQ,EA0DnBiQ,iBAAmB,SAAC1G,GAChB,IACIwU,EADAhR,EAAU,GAEdA,EAAU,EAAKlD,MAAM7B,YAAc,EAAK6B,MAAM7B,WAAWzC,QAAO,SAAU+J,GACtE,OAAOA,EAAInD,OAAS5C,EAAEmB,OAAOC,SAC9BuF,KAAI,SAAA6T,GAAC,OAAIA,EAAEhX,WAEuB,QAAjC,EAAKlD,MAAMhB,aAAa/G,MACxBic,EAAShR,EAAQ,GAAIxH,QAAO,SAAAoF,GAAK,OAAK,EAAKlC,MAAM2a,SAAUzZ,SAASgB,MACpE,EAAKrB,SAAS,CAAEuD,SAAUtD,EAAEmB,OAAOC,MAAOmC,SAAUiR,EAAOgD,YAAa,MAExE,EAAKzX,SAAS,CAAEuD,SAAUtD,EAAEmB,OAAOC,MAAOmC,SAAUC,EAAQ,GAAIgU,YAAa,GAAIiC,SAAU,KAExE,iBAAnBzZ,EAAEmB,OAAOC,MACT,EAAKrB,SAAS,CAAE+Z,YAAaL,KAE7B,EAAK1Z,SAAS,CAAE+Z,YAAa,MA1ElB,EA8EnBW,YAAc,SAACza,GACX,IAAI0a,EAAS1a,EAAEmB,OAAOC,MACtB,EAAKrB,SAAS,CAAEyX,YAAakD,EAAQjB,SAAU,MAhFhC,EAmFnBxV,YAAc,WACV,EAAKlE,SAAS,CACVuD,SAAU,GACVkU,YAAa,GACbmC,OAAQ,GACR/F,UAAW,GACX6F,SAAU,GACVmC,MAAO,GACPC,IAAK,GACL/Y,YAAa,GACbgX,YAAa,GACbE,OAAQ,cACR8B,aAAc,IAAIrX,KAClBsX,WAAY,IAAItX,KAChBoT,aAAc,GACdoC,aAAa,KAlGF,EAsGnB+B,SAAW,WACP,GAA4B,KAAxB,EAAK9c,MAAMoE,UAAyC,KAAtB,EAAKpE,MAAMya,QAAyC,KAAxB,EAAKza,MAAMua,UAA8C,KAA3B,EAAKva,MAAMsY,aAA+C,KAAzB,EAAKtY,MAAM0U,UACpI,EAAK7T,SAAS,CAAE5G,KAAK,EAAMygB,SAAU,yBAA0BzZ,UAAW,gBAC1E,EAAKjI,aAEJ,GAA0B,gBAAtB,EAAKgH,MAAMya,QAAiD,KAArB,EAAKza,MAAM0c,MACvD,EAAK7b,SAAS,CAAE5G,KAAK,EAAMygB,SAAU,0BAA2BzZ,UAAW,gBAC3E,EAAKjI,aAEJ,GAA0B,gBAAtB,EAAKgH,MAAMya,QAA+C,KAAnB,EAAKza,MAAM2c,IACvD,EAAK9b,SAAS,CAAE5G,KAAK,EAAMygB,SAAU,wBAAyBzZ,UAAW,gBACzE,EAAKjI,aAEJ,GAA0B,gBAAtB,EAAKgH,MAAMya,QAAuD,KAA3B,EAAKza,MAAM4D,YACvD,EAAK/C,SAAS,CAAE5G,KAAK,EAAMygB,SAAU,2BAA4BzZ,UAAW,gBAC5E,EAAKjI,YAEJ,CACD,EAAK6H,SAAS,CAAEsD,aAAa,IAC7B,IAAI2H,EAAW,GACXvU,EAAO,GACiB,KAAxB,EAAKyI,MAAM6a,UACX/O,EAAY,EAAK9L,MAAM6a,SAAU1U,QAAQ,SAAU,IAAI2L,MAAM,KAC7Dva,EAAO,OAGPA,EAAO,SACPuU,EAAW,IAGf,IAAIe,EAAM5G,OAAOC,OAAO,GAAI,CACxB9B,SAAU,EAAKpE,MAAMoE,SACrBkU,YAAa,EAAKtY,MAAMsY,YACxBmC,OAAQ,EAAKza,MAAMya,OACnB/F,UAAW,EAAK1U,MAAM0U,UACtB6F,SAAU,EAAKva,MAAMua,SACrBmC,MAAO,EAAK1c,MAAM0c,MAClBC,IAAK,EAAK3c,MAAM2c,IAChB/Y,YAAa,EAAK5D,MAAM4D,YACxBkI,SAAUA,EAASjP,OAAS,EAAIiP,EAAW,GAC3C/L,KAAM,EAAKqB,MAAMhB,aAAaxH,UAC9ByN,aAAc,EAAKjF,MAAMhB,aAAahH,SACtCkN,cAAe,EAAKlF,MAAMhB,aAAaxH,UACvCrB,KAAMA,EACNohB,aAAc,EAAK3Y,MAAM2Y,eAEH,UAAtB,EAAK3Y,MAAM8a,OACX,EAAK1Z,MAAMC,QAAQvF,iBAAiB+Q,GACP,UAAtB,EAAK7M,MAAM8a,OAClB,EAAK1Z,MAAMC,QAAQpE,kBAAkB4P,GACR,gBAAtB,EAAK7M,MAAM8a,SAClB,EAAK1Z,MAAMC,QAAQvF,iBAAiB+Q,GACpC,EAAKzL,MAAMC,QAAQpE,kBAAkB4P,IAEzC,EAAKzL,MAAMC,QAAQjF,iBAAiByQ,GACpCjM,YAAW,WACH,EAAKQ,MAAMZ,cAAmD,MAAnC,EAAKY,MAAMZ,aAAa9H,QACnD,EAAKmI,SAAS,CAAE5G,KAAK,EAAMygB,SAAU,kCAAmCzZ,UAAW,eAAgBkD,aAAa,EAAO0W,SAAU,KACjI,EAAK7hB,QACL,EAAK+L,gBAGL,EAAKlE,SAAS,CAAE5G,KAAK,EAAMygB,SAAU,uBAAwBzZ,UAAW,cAAekD,aAAa,IACpG,EAAKnL,WAEV,OAvKQ,EA0KnBA,MAAQ,WACJ4H,YAAW,WACP,EAAKC,SAAS,CAAE5G,KAAK,EAAOygB,SAAU,GAAIzZ,UAAW,OACtD,OA7KY,EAiLnB4a,eAAiB,SAAC/a,GACd,IAAIgb,EAAMhb,EACV,EAAKD,SAAS,CAAE0Z,SAAUuB,EAAKjB,SAAU,MAnL1B,EAsLnBkC,gBAAkB,SAACzX,GACf,OAAOA,EAAG6M,eAvLK,EA2LnB4J,aA3LmB,yCA2LJ,WAAO3S,GAAP,gBAAAnC,EAAA,6DACP6R,EAAQ7S,OAAO+V,OAAO5S,EAAMnH,OAAO6W,OACvC,EAAKjY,SAAS,CAAEka,aAAa,IAFlB,SAGLjC,EAAMlS,SAAQ,SAACqV,EAAMjO,GACvB,EAAKkO,oBAAoBD,GAAM,SAACE,GAC5B,EAAKtb,UAAS,SAAA4X,GAAS,MAAK,CACxBE,aAAa,GAAD,oBAAMF,EAAUE,cAAhB,CAA8B,CAAEyD,SAAUH,EAAKvY,KAAM2Y,KAAMF,SAEvEnO,EAAI,IAAM8K,EAAMjc,QAChB,EAAKgE,SAAS,CAAEka,aAAa,UAT9B,2CA3LI,wDA2MnBmB,oBAAsB,SAACD,EAAMK,GACzB,IAAIpD,EAAS,IAAIC,WACjBD,EAAOqD,cAAcN,GACrBrb,YAAW,WAAQ0b,EAAGpD,EAAO9Z,UAAW,MA5MxC,EAAKY,MAAQ,CACTuE,MAAO,GACPF,SAAU,GACVD,SAAU,GACVkU,YAAa,GACbmC,OAAQ,GACR7W,YAAa,GACb3J,KAAK,EACLygB,SAAU,GACVzZ,UAAW,GACXkD,aAAa,EACbwW,SAAU,GACVJ,SAAU,GACVK,YAAa,GACbC,SAAU,GACVnG,UAAW,GACXoG,OAAQ,cACR8B,aAAc,IAAIrX,KAClBsX,WAAY,IAAItX,KAChBoT,aAAc,GACdoC,aAAa,GAtBF,E,6DA2BnB,WACI/Z,KAAKI,MAAMC,QAAQnG,mBAEf8F,KAAKI,MAAM7B,WAAW1C,OAAS,GAC/BmE,KAAKH,SAAS,CAAE0D,MAAOvD,KAAKoa,cAAcpa,KAAKI,MAAM7B,gB,gCAqB7D,SAAmBwH,GACXA,EAAUxH,aAAeyB,KAAKI,MAAM7B,YACpCyB,KAAKH,SAAS,CAAE0D,MAAOvD,KAAKoa,cAAcpa,KAAKI,MAAM7B,gB,oBA2J7D,WAAU,IAAD,OAEL,OACI,sBAAK+B,UAAU,6BAAf,UACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,uCAAf,0BACA,sBAAKA,UAAU,qBAAf,UACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,gCAAO,iDACP,yBAAQA,UAAU,eACdY,MAAOlB,KAAKhB,MAAM0U,UAClB1S,SAAU,SAAClB,GAAD,OAAO,EAAKD,SAAS,CAAE6T,UAAW5T,EAAEmB,OAAOC,SAFzD,UAGI,wBAAQA,MAAM,GAAGqF,UAAQ,EAAzB,kCACC8M,IAAOA,GAAI5M,KAAI,SAACZ,GACb,OACI,iCAAmBA,GAANA,YAM7B,sBAAKvF,UAAU,gBAAf,UACI,gCAAO,gDACP,yBAAQA,UAAU,eACdY,MAAOlB,KAAKhB,MAAMoE,SAClBpC,SAAU,SAAClB,GAAD,OAAO,EAAK0G,iBAAiB1G,IAF3C,UAGI,wBAAQoB,MAAM,GAAGqF,UAAQ,EAAzB,kCACCvG,KAAKhB,MAAMuE,OAASvD,KAAKhB,MAAMuE,MAAMkD,KAAI,SAACZ,GACvC,OACI,iCAAmBA,GAANA,MAGrB,kDAGR,sBAAKvF,UAAU,gBAAf,UACI,gCAAO,2DACP,yBAAQA,UAAU,eACdY,MAAOlB,KAAKhB,MAAMsY,YAClBtW,SAAU,SAAClB,GAAD,OAAO,EAAKya,YAAYza,IAFtC,UAGI,wBAAQoB,MAAM,GAAGqF,UAAQ,EAAzB,kCACCvG,KAAKhB,MAAMqE,UAAYrD,KAAKhB,MAAMqE,SAASoD,KAAI,SAACZ,GAC7C,OACI,iCAAmBA,GAANA,YAO7B,sBAAKvF,UAAU,gBAAf,UACI,gCAAO,8CACP,yBAAQA,UAAU,eACdY,MAAOlB,KAAKhB,MAAMya,OAClBzY,SAAU,SAAClB,GAAD,OAAO,EAAKD,SAAS,CAAE4Z,OAAQ3Z,EAAEmB,OAAOC,SAFtD,UAGI,wBAAQA,MAAM,GAAGqF,UAAQ,EAAzB,kCACC+S,IAAUA,GAAO7S,KAAI,SAACZ,GACnB,OACI,iCAAmBA,GAANA,YAM7B,sBAAKvF,UAAU,gBAAf,UACI,gCAAO,gDACP,yBAAQA,UAAU,eACdY,MAAOlB,KAAKhB,MAAMua,SAClBvY,SAAU,SAAClB,GAAD,OAAO,EAAK+a,eAAe/a,EAAEmB,OAAOC,QAFlD,UAII,wBAAQA,MAAM,GAAGqF,UAAQ,EAAzB,kCACCvG,KAAKhB,MAAM4a,aAAe5Z,KAAKhB,MAAM4a,YAAYnT,KAAI,SAACZ,GACnD,OACI,iCAAmBA,GAANA,MAGrB,2CAAa,mBAIA,WAAxB7F,KAAKhB,MAAMua,UACR,qBAAKjZ,UAAU,WAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,gCAAO,sDACP,0BACIA,UAAU,eACVgG,YAAY,2DACZpF,MAAOlB,KAAKhB,MAAM6a,SAClB7Y,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAEga,SAAU/Z,EAAEmB,OAAOC,SAClD3K,KAAK,OACLmQ,KAAK,cAIzB,uBACuB,KAAtB1G,KAAKhB,MAAMya,QACR,sBAAKnZ,UAAU,iBAAf,UACI,qBAAKA,UAAU,uCAAf,0BACA,sBAAKA,UAAU,qBAAf,UAEI,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,gCAAO,2DACP,cAAC,KAAD,CACIkV,SAAUxV,KAAKhB,MAAM4c,aACrBtb,UAAU,eACVU,SAAU,SAAAwD,GACN,EAAK3E,SAAS,CAAE+b,aAAcpX,IAC9B,EAAK3E,SAAS,CAAE6b,MAAO,EAAKK,gBAAgBvX,MAEhDwX,OAAO,KACPC,gBAAc,EACdC,WAAW,IACXC,cAAe,EACfC,WAAW,UAGnB,sBAAK9b,UAAU,gBAAf,UACI,gCAAO,yDACP,cAAC,KAAD,CACIkV,SAAUxV,KAAKhB,MAAM6c,WACrBvb,UAAU,eACVU,SAAU,SAAAwD,GACN,EAAK3E,SAAS,CAAEgc,WAAYrX,IAC5B,EAAK3E,SAAS,CAAE8b,IAAK,EAAKI,gBAAgBvX,MAE9CwX,OAAO,KACPC,gBAAc,EACdC,WAAW,IACXC,cAAe,EACfC,WAAW,KACXC,QAASrc,KAAKhB,MAAM4c,qBAIhC,qBAAKtb,UAAU,WAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,gCAAO,mDACP,0BACIA,UAAU,eACVgG,YAAY,cACZpF,MAAOlB,KAAKhB,MAAM4D,YAClB5B,SAAU,SAAAlB,GAAC,OAAI,EAAKD,SAAS,CAAE+C,YAAa9C,EAAEmB,OAAOC,SACrD3K,KAAK,OACLmQ,KAAK,WAGM,UAAtB1G,KAAKhB,MAAM8a,QAAsB,qBAAKxZ,UAAU,WAAf,SAC9B,sBAAKA,UAAU,gBAAf,UACI,gCAAO,oDACP,uBACI/J,KAAK,OACLuK,GAAG,cACHY,QAAS,SAAA5B,GAAOA,EAAEmB,OAAOC,MAAQ,KAAM,EAAKrB,SAAS,CAAE8X,aAAc,MACrErX,UAAU,oBACVU,SAAUhB,KAAK+a,aACf5F,UAAQ,YAKxB,sBAAK7U,UAAU,2BAAf,UACI,wBAAQA,UAAU,iBACdoB,QAAS,SAAA5B,GAAC,OAAI,EAAKgc,YACnBvV,SAAUvG,KAAKhB,MAAM+a,YAFzB,kBAGA,sBAAKzZ,UAAU,iBAAf,UACI,uBAAOA,UAAU,kCAAjB,SAAmD,gDACnD,yBAAQA,UAAU,iCACdY,MAAOlB,KAAKhB,MAAM8a,OAClB9Y,SAAU,SAAClB,GAAD,OAAO,EAAKD,SAAS,CAAEia,OAAQha,EAAEmB,OAAOC,SAFtD,UAGI,wBAAQA,MAAM,GAAGqF,UAAQ,EAAzB,kCACA,wBAAQrF,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,cAAd,kCAIoB,IAA3BlB,KAAKhB,MAAMmE,aAAwB,qBAAK7C,UAAU,cAAf,SAChC,qBAAKA,UAAU,iBAAiBjI,KAAK,SAArC,SACI,sBAAMiI,UAAU,UAAhB,qCAOxB,cAACa,EAAA,EAAD,CACIC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CC,KAAMvB,KAAKhB,MAAM/F,IACjBqH,UAAU,WACVxI,QAASkI,KAAKhB,MAAM0a,kB,GAjZf1X,aAmaVC,gBAVS,SAAAjD,GAAK,MAAK,CAC9BT,WAAYS,EAAMO,KAAKhB,WACvBiB,aAAcR,EAAMO,KAAKC,aACzBJ,aAAcJ,EAAMD,KAAKK,iBAGF,SAAAnI,GAAQ,MAAK,CACpCoJ,QAAS6B,YAAmB8W,EAAY/hB,MAG7BgL,CAA6Cqa,I,0CCxatDrT,GAAU,CASZ,CACIvG,KAAM,YACNwG,MAAO,cACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,IAGd,CACI1G,KAAM,cACNwG,MAAO,cACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,IAEX,CACC1G,KAAM,YACNwG,MAAO,YACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,IAGd,CACI1G,KAAM,iBACNwG,MAAO,iBACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,IAGd,CACI1G,KAAM,aACNwG,MAAO,aACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,IAGd,CACI1G,KAAM,UACNwG,MAAO,UACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,IAGd,CACI1G,KAAM,OACNwG,MAAO,QACPC,QAAS,CACLrN,QAAQ,EACRsN,MAAM,KAKZmT,G,4MACFvd,MAAQ,CACJwd,UAAW,GACXhX,MAAM,G,EAYV6F,YAAc,WACV,EAAKxL,SAAS,CAAE2F,MAAM,K,+DAX1B,WACIxF,KAAKI,MAAMC,QAAQ/E,uB,gCAEvB,SAAmByK,GACXA,EAAUrH,kBAAoBsB,KAAKI,MAAM1B,iBACrCsB,KAAKI,MAAM1B,iBAAyD,IAAtCsB,KAAKI,MAAM1B,gBAAgB7C,QACzDmE,KAAKH,SAAS,CAAE2c,UAAWxc,KAAKI,MAAM1B,oB,oBAOlD,WAAU,IAAD,OACCyK,EAAU,CACZiG,OAAO,EACPF,QAAQ,EACRuN,UAAU,EACV3gB,QAAQ,EACRuT,aAAa,EACbqN,WAAY,WACZnP,gBAAgB,EAChBqB,WAAY,CACRC,KAAM,YACNC,SAAU,gBACVC,YAAa,GACbC,YAAa,MAEjBxB,WAAY,SAACC,EAAD,GAAuB,IAAjBC,EAAgB,EAAhBA,UACVC,EAAgB,EAAK3O,MAAMwd,UAAU9O,GACzC,EAAK7N,SAAS,CACV2F,MAAM,EACNmX,SAAUhP,EAAciP,UACxBha,YAAa+K,EAAcG,YAC3B4F,UAAW/F,EAAckP,UACzBC,cAAenP,EAAczH,eAC7B/L,UAAWwT,EAAcK,WACzB+O,QAASpP,EAAcqP,QACvB/C,MAAOtM,EAAcsP,SAIjC,OACI,sBAAK3c,UAAU,oCAAf,UACI,cAAC,KAAD,CACIoK,MAAO,oBACP/T,KAAMqJ,KAAKhB,MAAMwd,UACjBvT,QAASA,GACTE,QAASA,IAEb,eAAC2G,GAAA,EAAD,CAAOtK,KAAMxF,KAAKhB,MAAMwG,KAAMuK,OAAQ,SAAAjQ,GAAC,OAAI,EAAKuL,eAAe2E,gBAAgB,eAAeC,KAAK,KAAnG,UACI,cAACH,GAAA,EAAMI,OAAP,CAAc7H,MAAO,CAAE8H,aAAc,oBAAqB3I,MAAO,WAAa4I,aAAW,EAAzF,SACI,cAACN,GAAA,EAAMO,MAAP,UAAsC,KAAvBrQ,KAAKhB,MAAM+d,SAA+C,KAA7B/c,KAAKhB,MAAM8d,cAAuB9c,KAAKhB,MAAM+d,QAAU,MAAQ/c,KAAKhB,MAAM8d,cAAgB,UAE1I,cAAChN,GAAA,EAAMQ,KAAP,CAAYhQ,UAAU,aAAtB,SACI,sBAAKA,UAAU,qBAAf,UACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,gCAAO,mDACP,uBACI+F,UAAQ,EACR/F,UAAU,eACVY,MAAOlB,KAAKhB,MAAM2d,SAClBpmB,KAAK,YAEb,sBAAK+J,UAAU,oBAAf,UACI,gCAAO,iDACP,uBACI+F,UAAQ,EACR/F,UAAU,eACVY,MAAOlB,KAAKhB,MAAM0U,UAClBnd,KAAK,eAGjB,sBAAK+J,UAAU,MAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,gCAAO,sDACP,uBACI+F,UAAQ,EACR/F,UAAU,eACVY,MAAOlB,KAAKhB,MAAM8d,cAClBvmB,KAAK,YAEb,sBAAK+J,UAAU,oBAAf,UACI,gCAAO,kDACP,uBACI+F,UAAQ,EACR/F,UAAU,eACVY,MAAOlB,KAAKhB,MAAM7E,UAClB5D,KAAK,eAGjB,sBAAK+J,UAAU,MAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,gCAAO,+CACP,uBACI+F,UAAQ,EACR/F,UAAU,eACVY,MAAOlB,KAAKhB,MAAM+d,QAClBxmB,KAAK,YAEb,sBAAK+J,UAAU,oBAAf,UACI,gCAAO,6CACP,uBACI+F,UAAQ,EACR/F,UAAU,eACVY,MAAOlB,KAAKhB,MAAMib,MAClB1jB,KAAK,eAGjB,qBAAK+J,UAAU,WAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,gCAAO,mDACP,0BACIA,UAAU,eACVY,MAAOlB,KAAKhB,MAAM4D,YAClByD,UAAQ,EACR9P,KAAK,OACLmQ,KAAK,0B,GA3Hf1E,aA0IfC,gBANS,SAACjD,GAAD,MAAY,CAChCN,gBAAiBM,EAAMO,KAAKb,oBAEL,SAAAzH,GAAQ,MAAK,CACpCoJ,QAAS6B,YAAmB,CAAE5G,yCAAsBrE,MAEzCgL,CAA6Csa,I,uCC5MtDW,GAAYC,cAAW,SAACC,GAAD,MAAY,CACrCC,UAAW,CACPC,QAAS,OACTC,SAAU,QAEdC,UAAW,CACPC,OAAQL,EAAMM,QAAQ,GACtBC,MAAO,QAEXC,OAAQ,CACJH,OAAQ,OACRH,QAAS,QACTxV,gBAAiB,WAErB+V,SAAU,CACNJ,OAAQ,YACRH,QAAS,QACT9V,MAAO,WAGXsW,WAAY,CACRC,SAAU,OACVvW,MAAO,MACPc,WAAY,IACZmV,OAAQ,YACRH,QAAS,QACTU,UAAW,cAINC,GAAY,SAAC7d,GACtB,IAAM8d,EAAUhB,KADgB,EAEAiB,mBAAS,IAAI5Z,MAFb,oBAEzB6Z,EAFyB,KAEfC,EAFe,OAGJF,mBAAS,IAAI5Z,MAHT,oBAGzB+Z,EAHyB,KAGjBC,EAHiB,OAIFJ,oBAAS,GAJP,oBAIzBK,EAJyB,KAIhBC,EAJgB,OAKQN,mBAAS,IALjB,oBAKzBO,EALyB,KAKXC,EALW,KAO1BC,EAAcC,aAAY,SAAA7f,GAAK,OAAIA,EAAMD,KAAKK,gBAkDpD,OACI,8BACI,sBAAKkB,UAAU,iBAAf,UACI,qBAAKA,UAAU,uCAAf,wDACA,sBAAKA,UAAU,qBAAf,UACI,eAACwe,GAAA,EAAD,CACIzB,WAAS,EACT7a,UAAU,MACVuc,QAAQ,SACRC,WAAW,SACXtB,QAAS,EALb,UAOI,cAACoB,GAAA,EAAD,CAAMzB,WAAS,EAAC4B,MAAI,EAACC,GAAI,EAAGxB,QAAS,IACrC,cAACoB,GAAA,EAAD,CAAMzB,WAAS,EAAC4B,MAAI,EAACC,GAAI,EAAGxB,QAAS,EAArC,SACI,cAACzM,GAAA,EAAD,CACInQ,GAAG,OACHoI,MAAM,YACN3S,KAAK,OACL2K,MAAOkd,EACPpd,SApEC,SAACwD,GAC1B6Z,EAAY7Z,EAAKvD,OAAOC,OACxByd,EAAgB,KAmEQre,UAAW4d,EAAQV,UACnBnM,gBAAiB,CACbC,QAAQ,OAIpB,cAACwN,GAAA,EAAD,CAAMzB,WAAS,EAAC4B,MAAI,EAACC,GAAI,EAAGxB,QAAS,EAArC,SACI,cAACzM,GAAA,EAAD,CACInQ,GAAG,OACHoI,MAAM,UACN3S,KAAK,OACL2K,MAAOod,EACPtd,SA7ED,SAACwD,GACxB+Z,EAAU/Z,EAAKvD,OAAOC,OACtByd,EAAgB,KA4EQre,UAAW4d,EAAQV,UACnBtM,WAAY,CAAEhN,IAAKka,GACnB/M,gBAAiB,CACbC,QAAQ,OAIpB,cAACwN,GAAA,EAAD,CAAMzB,WAAS,EAAC4B,MAAI,EAACC,GAAI,EAAGxB,QAAS,OAEzC,cAACnW,GAAA,EAAD,CAAQjH,UAAW4d,EAAQN,OAAQlc,QAlF9B,WACjB+c,GAAW,GACXE,EAAgB,IAChBtnB,KAAMY,KAAiB,qBAAsB,CACzC,SAAYmmB,EACZ,OAAUE,EACV,aAAgBM,EAAYxmB,SAC5B,MAASwmB,EAAYhnB,YAEpBJ,MAAK,SAACC,GAEH,GAAwB,MAApBA,EAASC,QAA4C,yBAA1BD,EAASd,KAAKmB,QAAoC,CAC7E,IAAIqnB,EAAQ1nB,EAASd,KAAKA,KAAKkF,OAAS,EAAIpE,EAASd,KAAKA,KAAKyoB,UAAY3nB,EAASd,KAAKA,KACnF0oB,EAAW,SAAC3W,EAAKxH,GAAN,OAA0B,OAAVA,EAAiB,GAAKA,GACjDoe,EAASra,OAAOsa,KAAKJ,EAAM,IAC7BK,EAAML,EAAM1Y,KAAI,SAAAgZ,GAAG,OAAIH,EAAO7Y,KAAI,SAAAiZ,GAAS,OAAIC,KAAKC,UAAUH,EAAIC,GAAYL,MAAWhL,KAAK,QAElGmL,EAAIK,QAAQP,EAAOjL,KAAK,MACxBmL,EAAMA,EAAInL,KAAK,QACfoK,GAAW,GAGX,IAAIqB,EAAeC,SAASC,cAAc,KACtCC,EAAO,IAAIC,KAAK,CAAC,SAAUV,IAC3BW,EAAMC,IAAIC,gBAAgBJ,GAC9BH,EAAaQ,KAAOH,EACpBL,EAAarD,SAAb,wBAAyC2B,EAAzC,eAAwDE,EAAxD,oBACAyB,SAASxR,KAAKgS,YAAYT,GAC1BA,EAAaU,QACbT,SAASxR,KAAKkS,YAAYX,QAG1BrB,GAAW,GACXE,EAAgB,gCAErB5mB,OAAM,SAAAkB,GACLwlB,GAAW,GACXE,EAAgB,iCA6C8CtF,QAAQ,YAAY7R,MAAM,UAApF,sBACa,IAAZgX,GAAoB,cAAC3X,GAAA,EAAD,CAAkBvG,UAAW4d,EAAQL,WACxC,KAAjBa,GAAuB,sBAAMpe,UAAW4d,EAAQJ,WAAzB,SAAsCY,aCxIrEgC,GAAY,SAACtgB,GACtB,OACI,8BACI,wBAAQG,IAAI,oQAAoQmK,MAAM,SAASiT,MAAM,OAAOgD,OAAO,MAAMC,YAAY,IAAIC,iBAAiB,OCqDhWC,IDxCS7e,aARS,SAACjD,GAAD,MAAY,KAIT,GAIZiD,CAA6Cye,ICwCxC,KAEdK,GAAe,CACnB,CACErW,MAAO,mBACPsW,KAAM,cAAC,KAAD,KACL,CACDtW,MAAO,iBACPsW,KAAM,cAAC,KAAD,MAGJC,GAAc,CAClB,CACEvW,MAAO,mBACPsW,KAAM,cAAC,KAAD,KAER,CACEtW,MAAO,iBACPsW,KAAM,cAAC,KAAD,KAER,CACEtW,MAAO,WACPsW,KAAM,cAAC,KAAD,MAGJE,GAAgB,CACpB,CACExW,MAAO,mBACPsW,KAAM,cAAC,KAAD,IACNG,MAAO,eAET,CACEzW,MAAO,iBACPsW,KAAM,cAAC,KAAD,IACNG,MAAO,eAET,CACEzW,MAAO,kBACPsW,KAAM,cAAC,KAAD,IACNG,MAAO,gBAET,CACEzW,MAAO,iBACPsW,KAAM,cAAE,KAAF,IACNG,MAAO,cAET,CACEzW,MAAO,WACPsW,KAAM,cAAC,KAAD,IACNG,MAAO,YAET,CACEzW,MAAO,sBACPrH,SAAU,CACR,CACEX,KAAM,eACN0e,KAAM,CACJ,CAAEC,IAAK,sBACP,CAAEA,IAAK,uBACP,CAAEA,IAAK,mBAETL,KAAM,cAAC,KAAD,KAER,CACEte,KAAM,gBACN0e,KAAM,GACNJ,KAAM,cAAC,KAAD,MAGVA,KAAM,cAAC,IAAD,IACNG,MAAO,UAET,CACEzW,MAAO,SACPsW,KAAM,cAAC,KAAD,IACNG,MAAO,WAET,CACEzW,MAAO,oBACPsW,KAAM,cAAC,KAAD,IACNG,MAAO,qBAET,CACEzW,MAAO,eACPsW,KAAM,cAAC,KAAD,IACNG,MAAO,gBAGLG,GAAe,CACnB,CACE5W,MAAO,mBACPsW,KAAM,cAAC,KAAD,IACNG,MAAO,eAET,CACEzW,MAAO,iBACPsW,KAAM,cAAC,KAAD,IACNG,MAAO,eAET,CACEzW,MAAO,kBACPsW,KAAM,cAAC,KAAD,IACNG,MAAO,gBAET,CACEzW,MAAO,WACPsW,KAAM,cAAC,KAAD,IACNG,MAAO,YAET,CACEzW,MAAO,sBACPrH,SAAU,CACR,CACEX,KAAM,eACN0e,KAAM,CACJ,CAAEC,IAAK,sBACP,CAAEA,IAAK,uBACP,CAAEA,IAAK,mBAETL,KAAM,cAAC,KAAD,KAER,CACEte,KAAM,gBACN0e,KAAM,GACNJ,KAAM,cAAC,KAAD,MAGVA,KAAM,cAAC,IAAD,IACNG,MAAO,WAGLI,GAAe,CACnB,CACE7W,MAAO,mBACPsW,KAAM,cAAC,KAAD,KAER,CACEtW,MAAO,iBACPsW,KAAM,cAAC,KAAD,KAER,CACEtW,MAAO,WACPsW,KAAM,cAAC,KAAD,MA8EJ9Q,G,kDAIJ,WAAY9P,GAAQ,IAAD,8BACjB,cAAMA,IAiFRohB,iBAAmB,WACjB,EAAK3hB,SAAS,CAAE0B,MAAM,EAAMmB,KAAM,YAAa0e,KAAM,MAnFpC,EAsFnBK,kBAAoB,WAClB,EAAK5hB,SAAS,CAAE0B,MAAM,EAAOmB,KAAM,aAAc0e,KAAM,cAvFtC,EAyFnBM,WAAa,SAACjmB,GACC,wBAATA,EACF,EAAKoE,SAAS,CAAEpE,KAAMA,EAAMkmB,MAAO,GAAIC,cAAe,GAAIC,QAAS,GAAIC,IAAK,KAE5E,EAAKjiB,SAAS,CAAEpE,KAAMA,KA7FP,EAgGnBsmB,2BAA6B,SAACC,GAAD,OAAW,SAAC5Z,EAAO6Z,GAC9C,IAAIC,EACU,wBAAVF,IACFE,EAAe,gBAKjB,IAGIxV,EAHI,EAAK1N,MAAMmK,QAChBrN,QAAO,SAAAC,GAAC,OAAIA,EAAE2O,QAAUsX,KACxBvb,KAAI,SAAAyN,GAAC,OAAIA,EAAE7Q,SAAW6Q,EAAE7Q,SAAW,MAC5B,GACPvH,QAAO,SAAAoe,GAAC,OAAIA,EAAExX,MAAQwX,EAAExX,OAASwf,KACjCzb,KAAI,SAAAuG,GAAC,OAAIA,EAAEoU,KAAOpU,EAAEoU,KAAO,MAE1Ba,EACF,EAAKpiB,SAAS,CAAE+hB,cAAeI,EAAOvmB,KAAMumB,EAAOL,MAAOO,EAAcL,QAASnV,EAAE,GAAIoV,IAAKpV,EAAE,GAAG7Q,OAAS,EAAI6Q,EAAE,GAAG,GAAG2U,IAAM,KAG5H,EAAKxhB,SAAS,CAAE+hB,eAAe,EAAOnmB,KAAM,GAAIomB,QAAS,GAAIC,IAAK,OAnHnD,EAsHnBK,YAAc,SAACR,GACb,IAGIjV,EAHI,EAAK1N,MAAMmK,QAChBrN,QAAO,SAAAC,GAAC,OAAIA,EAAE2O,QAAU,EAAK1L,MAAM4iB,iBACnCnb,KAAI,SAAAyN,GAAC,OAAIA,EAAE7Q,SAAW6Q,EAAE7Q,SAAW,MAC5B,GACPvH,QAAO,SAAAoe,GAAC,OAAIA,EAAExX,MAAQwX,EAAExX,OAASif,KACjClb,KAAI,SAAAuG,GAAC,OAAIA,EAAEoU,KAAOpU,EAAEoU,KAAO,MAE9B,EAAKvhB,SAAS,CAAE8hB,MAAOA,EAAOE,QAASnV,EAAE,GAAIoV,IAAKpV,EAAE,GAAG7Q,OAAS,EAAI6Q,EAAE,GAAG,GAAG2U,IAAM,MA9HjE,EAgInBe,aAAe,SAACf,GACd,EAAKxhB,SAAS,CAAEiiB,IAAKT,KA9HrB,EAAKriB,MAAQ,CACXqjB,QAAS,IACTnJ,WAAW,EACXoJ,cAAc,EACdC,YAAY,EACZhhB,MAAM,EACN9F,KAAM,mBACNiH,KAAM,YACNyG,QAAS,GACTwY,MAAO,GACPE,QAAS,GACTC,IAAK,IAGP,EAAKU,UAAY,KACjB,EAAKC,SAAW,EAAKC,UAAU9hB,KAAf,gBAChB,EAAK+hB,SAAW,EAAKC,UAAUhiB,KAAf,gBAChB,EAAKiiB,OAAS,EAAKC,QAAQliB,KAAb,gBACd,EAAKyK,YAAc,EAAK0X,aAAaniB,KAAlB,gBArBF,E,6CAwBnB,SAAUd,GACRE,KAAKH,SAAS,CAAE0iB,YAAY,M,uBAG9B,SAAUziB,GACRE,KAAKH,SAAS,CAAE0iB,YAAY,M,qBAG9B,SAAQziB,IAGa,IAFAE,KAAKhB,MAAMujB,YAG5BviB,KAAKH,SAAS,CAAEqZ,WAAW,IAC3B8J,OAAOhR,SAASiR,WAGhBjjB,KAAKH,SAAS,CAAEqZ,WAAW,IAC3BlZ,KAAKwiB,UAAUhT,QACfxP,KAAKH,SAAS,CAAE0iB,YAAY,O,0BAKhC,WACEviB,KAAKH,SAAS,CAAEqZ,WAAW,M,uCAG7B,WACuC,SAAjClZ,KAAKI,MAAMhB,aAAa/G,KAC1B2H,KAAKH,SAAS,CAAEsJ,QAAS4X,KAEe,QAAjC/gB,KAAKI,MAAMhB,aAAa/G,KAC/B2H,KAAKH,SAAS,CAAEsJ,QAAS8X,KAEe,gBAAjCjhB,KAAKI,MAAMhB,aAAa/G,KAC/B2H,KAAKH,SAAS,CAAEsJ,QAAS+X,KAEe,UAAjClhB,KAAKI,MAAMhB,aAAa/G,KAC/B2H,KAAKH,SAAS,CAAEsJ,QAASoY,KAEe,eAAjCvhB,KAAKI,MAAMhB,aAAa/G,MAC/B2H,KAAKH,SAAS,CAAEsJ,QAASmY,O,gCAI7B,SAAmBvb,GAAY,IAAD,OACxBA,EAAUpH,WAAaqB,KAAKI,MAAMzB,UAA2C,IAA/BqB,KAAKI,MAAMzB,SAAS9C,SACpEmE,KAAK0hB,WAAW1hB,KAAKI,MAAMzB,UAC3BiB,YAAW,WACT,EAAKQ,MAAMC,QAAQ7E,WAAW,MAC7B,Q,0BAIP,WACEwnB,OAAOhR,SAASiR,OAAO,O,oBAoDzB,WAAU,IAAD,aACoBjjB,KAAKI,MAAxB8d,EADD,EACCA,QAASd,EADV,EACUA,MADV,EAEmBpd,KAAKhB,MAAvBuC,EAFD,EAECA,KAAM4H,EAFP,EAEOA,QAGd,OACE,gCACE,sBAAK7I,UAAW4d,EAAQgF,KAAxB,UACE,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CACEC,SAAS,QACT/iB,UAAWgjB,YAAKpF,EAAQqF,OAAT,eACZrF,EAAQsF,YAAcjiB,IAH3B,SAME,eAACkiB,EAAA,EAAD,WACE,cAAC9O,EAAA,EAAD,CACEnN,MAAM,UACNkc,aAAW,cACXhiB,QAAS1B,KAAKwhB,iBACdmC,KAAK,QACLrjB,UAAWgjB,YAAKpF,EAAQ0F,WAAT,eACZ1F,EAAQ2F,KAAOtiB,IANpB,SASE,cAAC,IAAD,MAEF,cAACuiB,EAAA,EAAD,CAAYzK,QAAQ,KAAK0K,QAAM,EAACzjB,UAAU,UAA1C,gCAI2B,IAA9BN,KAAKhB,MAAM6iB,QAAQhmB,QAClB,cAACunB,EAAA,EAAD,CACEC,SAAS,QACT/iB,UAAWgjB,YAAKpF,EAAQ8F,QAAT,eACZ9F,EAAQ+F,aAAe1iB,IAH5B,SAME,cAACkiB,EAAA,EAAD,CAASnjB,UAAWN,KAAKhB,MAAMoiB,KAA/B,SACGphB,KAAKhB,MAAM6iB,SAAW7hB,KAAKhB,MAAM6iB,QAAQpb,KAAI,SAACZ,GAC7C,OACE,yBAAsBvF,UAAW,EAAKtB,MAAM8iB,MAAQjc,EAAIwb,IAAM,cAAgB,iBAC5E3f,QAAS,SAAA5B,GAAC,OAAI,EAAKsiB,aAAavc,EAAIwb,MADtC,iCAEgCxb,EAAIwb,IAFpC,yBAAaxb,EAAIwb,YAQ3B,eAAC6C,EAAA,EAAD,CACE7K,QAAQ,YACR/Y,UAAWgjB,YAAKpF,EAAQiG,QAAT,mBACZjG,EAAQkG,WAAa7iB,GADT,cAEZ2c,EAAQmG,aAAe9iB,GAFX,IAIf2c,QAAS,CACPoG,MAAOhB,aAAI,mBACRpF,EAAQkG,WAAa7iB,GADb,cAER2c,EAAQmG,aAAe9iB,GAFf,KAPf,UAaE,qBAAKjB,UAAW4d,EAAQjP,QAAxB,SACE,eAAC0F,EAAA,EAAD,CAAYjT,QAAS1B,KAAKyhB,kBAA1B,UAA6C,oBAAInhB,UAAU,eAAd,kBACtB,QAApB8c,EAAM5a,UAAsB,cAAC,IAAD,IAAuB,cAAC,IAAD,CAAiBlC,UAAU,oBAGnF,cAACikB,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAMlkB,UAAU,cAAhB,UACG6I,GAAWA,EAAQ1C,KAAI,SAACZ,EAAK8B,GAAN,OACtB,8BACiB,wBAAd9B,EAAI6E,MACH,eAAC+Z,EAAA,EAAD,CAAU7G,QAAM,EAACtd,UAAW,EAAKtB,MAAMvD,OAASoK,EAAI6E,MAAQ,kBAAoB,qBAAsChJ,QAAS,SAAA5B,GAAC,OAAI,EAAK4hB,WAAW7b,EAAI6E,QAAxJ,UACE,cAACga,GAAA,EAAD,UAAe7e,EAAImb,OACnB,cAACpL,EAAA,EAAD,CAAcC,QAAShQ,EAAI6E,UAF8E7E,EAAI6E,OAK/G,eAACia,EAAA,EAAD,CAAgBC,SAAuC,wBAA7B,EAAK5lB,MAAM4iB,cAAyC5gB,SAAU,EAAK+gB,2BAA2Blc,EAAI6E,OAAQpK,UAAU,WAA9I,WACuB,IAApB,EAAKtB,MAAMuC,KACV,eAACsjB,EAAA,EAAD,CAAuBC,WAAY,cAAC,KAAD,IAAgBpjB,QAAS,SAAA5B,GAAC,OAAI,EAAK4hB,WAAW7b,EAAI6E,QAAQpK,UAAU,WAAvG,UACGuF,EAAImb,KADP,kBACkCnb,EAAI6E,SAItC,cAACma,EAAA,EAAD,CAAuBC,WAAY,cAAC,KAAD,IAAgBpjB,QAAS,SAAA5B,GAAC,OAAI,EAAK4hB,WAAW7b,EAAI6E,QAArF,SACG7E,EAAImb,OAIT,cAAC+D,EAAA,EAAD,CAAuBzkB,UAAU,cAAjC,SACE,cAACkkB,EAAA,EAAD,UACG3e,EAAIxC,UAAYwC,EAAIxC,SAASxH,OAAS,GAAKgK,EAAIxC,SAASoD,KAAI,SAACue,EAAIrd,GAAL,OAC3D,eAAC8c,EAAA,EAAD,CAAUnkB,UAAW,EAAKtB,MAAM2iB,QAAUqD,EAAGtiB,KAAO,kBAAoB,qBAAsBkb,QAAM,EAAelc,QAAS,SAAA5B,GAAC,OAAI,EAAKqiB,YAAY6C,EAAGtiB,OAArJ,UACE,cAACgiB,GAAA,EAAD,UAAeM,EAAGhE,OAClB,cAACpL,EAAA,EAAD,CAAcC,QAASmP,EAAGtiB,SAF8EsiB,EAAGtiB,iBAtB/GmD,EAAI6E,UAiChB,eAAC+Z,EAAA,EAAD,CAAU7G,QAAM,EAAClc,QAAS,SAAA5B,GAAC,OAAI,EAAKqZ,gBAApC,UACE,cAACuL,GAAA,EAAD,UAAc,cAAC,KAAD,MACd,cAAC9O,EAAA,EAAD,CAAcC,QAAQ,cAEc,KAArC7V,KAAKI,MAAMhB,aAAahH,SAAkB,eAACqsB,EAAA,EAAD,CAAU7G,QAAM,EAACtd,UAAU,cAA3B,UACzC,cAACokB,GAAA,EAAD,CAAcpkB,UAAU,cAAxB,SAAsC,cAAC,KAAD,MACtC,sBAAKA,UAAU,eAAf,UACE,cAACsV,EAAA,EAAD,CAAcC,QAAS7V,KAAKI,MAAMhB,aAAahH,WAC/C,cAACwd,EAAA,EAAD,CAAcC,QAAS,KAAO7V,KAAKI,MAAMhB,aAAa/G,KAAO,YAEnD,YAIpB,cAAC,KAAD,CACEiK,IAAK,SAAAA,GAAS,EAAKkgB,UAAYlgB,GAC/B2iB,QAASlF,SACT4C,SAAU3iB,KAAK2iB,SACfE,OAAQ7iB,KAAK6iB,OACbJ,SAAUziB,KAAKyiB,SACfyC,SAAU,IACV7C,QAASriB,KAAKhB,MAAMqjB,UACtB,sBAAK/hB,UAAWN,KAAKhB,MAAM0D,KAA3B,UACuB,mBAApB1C,KAAKhB,MAAMvD,MAA6B,cAAC,GAAD,IACpB,qBAApBuE,KAAKhB,MAAMvD,MAA+B,cAAC,GAAD,IACtB,mBAApBuE,KAAKhB,MAAMvD,MAA6B,cAAC,GAAD,KACnB,aAApBuE,KAAKhB,MAAMvD,MAA2C,oBAApBuE,KAAKhB,MAAMvD,OAA+B,cAAC,GAAD,IACxD,aAApBuE,KAAKhB,MAAMvD,MAAwB,cAAC0pB,GAAD,IACf,WAApBnlB,KAAKhB,MAAMvD,MAAsB,cAAC,GAAD,IACb,sBAApBuE,KAAKhB,MAAMvD,MAAiC,cAAC,GAAD,IAExB,wBAApBuE,KAAKhB,MAAMvD,MAAuD,iBAArBuE,KAAKhB,MAAM2iB,OAA+C,uBAAnB3hB,KAAKhB,MAAM8iB,KAAgC,cAAC,GAAD,IAC3G,wBAApB9hB,KAAKhB,MAAMvD,MAAuD,iBAArBuE,KAAKhB,MAAM2iB,OAA+C,wBAAnB3hB,KAAKhB,MAAM8iB,KAAiC,cAAC,GAAD,IAC5G,wBAApB9hB,KAAKhB,MAAMvD,MAAuD,iBAArBuE,KAAKhB,MAAM2iB,OAA+C,mBAAnB3hB,KAAKhB,MAAM8iB,KAA4B,cAAC,GAAD,IAEvG,wBAApB9hB,KAAKhB,MAAMvD,MAAuD,kBAArBuE,KAAKhB,MAAM2iB,OAA6B,cAAC,GAAD,IAEjE,iBAApB3hB,KAAKhB,MAAMvD,MAA4B,cAAC,GAAD,OAE3C,cAAC,GAAD,CACEyd,UAAWlZ,KAAKhB,MAAMka,UACtB7N,YAAarL,KAAKqL,YAClB8N,aAAcnZ,KAAKmZ,eAErB,cAAC,GAAD,W,GA1RanX,aA2SNyF,eAAWxF,aAPF,SAAAjD,GAAK,MAAK,CAChCI,aAAcJ,EAAMD,KAAKK,aACzBT,SAAUK,EAAMO,KAAKZ,aAEI,SAAA1H,GAAQ,MAAK,CACtCoJ,QAAS6B,YAAmB,CAAE1G,yBAAcvE,MAEpBgL,CAA6CmjB,aArXxD,SAAAhI,GAAK,MAAK,CACvB8F,KAAM,CACJ5F,QAAS,QAEXiG,OAAQ,CACN8B,OAAQjI,EAAMiI,OAAOlB,OAAS,EAC9BmB,WAAYlI,EAAMmI,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQrI,EAAMmI,YAAYE,OAAOC,MACjCC,SAAUvI,EAAMmI,YAAYI,SAASC,iBAGzCpC,YAAa,CACXqC,WAAY/E,GACZnD,MAAM,eAAD,OAAiBmD,GAAjB,OACLwE,WAAYlI,EAAMmI,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQrI,EAAMmI,YAAYE,OAAOC,MACjCC,SAAUvI,EAAMmI,YAAYI,SAASG,kBAGzC9B,QAAS,CACP+B,UAAW,OACXje,gBAAiB,oBAEnBmc,aAAc,CACZ4B,WAAY/E,GACZiF,UAAW,OACXpI,MAAM,eAAD,OAAiBmD,GAAjB,OACLhZ,gBAAiB,oBAEnB8b,WAAY,CACVoC,YAAa,IAEfnC,KAAM,CACJvG,QAAS,QAEX6G,OAAQ,CACNxG,MAAOmD,GACPmF,WAAY,EACZC,WAAY,UAEd9B,WAAY,CACVzG,MAAOmD,GACPwE,WAAYlI,EAAMmI,YAAYC,OAAO,QAAS,CAC5CC,OAAQrI,EAAMmI,YAAYE,OAAOC,MACjCC,SAAUvI,EAAMmI,YAAYI,SAASG,iBAEvCT,OAAQ,KAEVhB,YAAY,aACViB,WAAYlI,EAAMmI,YAAYC,OAAO,QAAS,CAC5CC,OAAQrI,EAAMmI,YAAYE,OAAOC,MACjCC,SAAUvI,EAAMmI,YAAYI,SAASC,gBAEvCP,OAAQ,IACRc,UAAW,SACXxI,MAAOP,EAAMM,QAAQ,GAAK,GACzBN,EAAMgJ,YAAYC,GAAG,MAAQ,CAC5B1I,MAAOP,EAAMM,QAAQ,GAAK,IAG9BzO,QAAQ,aACNqO,QAAS,OACT0B,WAAY,SACZsH,eAAgB,WAChBC,QAASnJ,EAAMM,QAAQ,EAAG,GAC1B5V,gBAAiB,SAEdsV,EAAMoJ,OAAOvX,SAElBwX,QAAS,CACPC,SAAU,EACVH,QAASnJ,EAAMM,QAAQ,OA8S+D,CAAEiJ,WAAW,GAAhCvB,CAAwClV,M,qBC5jBzG0W,G,4JAEF,WAAS,IAEGhoB,EAAiBoB,KAAKI,MAAtBxB,aACR,OACI,sBAAKyJ,MAAO,CAAEsV,MAAO,QAArB,UACI,iDACC/e,EAAa/C,OAAS,EAAI,gCACvB,kCACI,+BACI,gDACA,6BAAK+C,EAAa,GAAGioB,eAAe,aAAejoB,EAAa,GAAG5C,UAAY,QAEnF,+BACI,kDACA,6BAAK4C,EAAa,GAAGioB,eAAe,cAAgBjoB,EAAa,GAAGiP,WAAa,QAErF,+BACI,yCACA,6BAAKjP,EAAa,GAAGioB,eAAe,UAAYjoB,EAAa,GAAGgO,OAAS,QAE7E,+BACI,8CACA,6BAAKhO,EAAa,GAAGioB,eAAe,eAAiBjoB,EAAa,GAAGkP,YAAc,QAEvF,+BACI,0CACA,6BAAKlP,EAAa,GAAGioB,eAAe,WAAajoB,EAAa,GAAGsP,QAAU,QAE/E,+BACI,+CACA,6BAAKtP,EAAa,GAAGioB,eAAe,gBAAkBjoB,EAAa,GAAG+N,aAAe,QAEzF,+BACI,sCACA,6BAAK/N,EAAa,GAAGioB,eAAe,OAASjoB,EAAa,GAAGiO,IAAM,aAK3E,2B,GAzCO7K,aAmD3B4kB,GAAaE,aAAe,CACxBC,WAAOtnB,GAIX,IAQewC,gBARS,SAAAjD,GAAK,MAAK,CAC9BJ,aAAcI,EAAMO,KAAKX,iBAGF,SAAA3H,GAAQ,MAAK,CACpCoJ,QAAS6B,YAAmB,CAAE1G,wBAAYlD,6BAAgBrB,MAG/CgL,CAA6C2kB,IC3DtDI,I,mNACFhoB,MAAQ,CACJioB,WAAY,G,uDAEhB,WACIjnB,KAAKknB,UAAYlnB,KAAKknB,UAAUtmB,KAAKZ,Q,uBAGzC,YAA6B,EAAjB+mB,MAAiB,EAAV/L,OACfhb,KAAKH,UAAS,SAAC4X,GAAD,MAAgB,CAC1BwP,WAAYxP,EAAUwP,WAAa,Q,oBAG3C,WAAU,IAAD,OAEL,OACI,8BACI,cAAC,KAAD,CACIE,YAAY,eACZC,UAAU,EACVF,UAAWlnB,KAAKknB,UAEhBH,MAAO,CACH,CACIjmB,GAAI,YACJhJ,QAAS,uCACTuvB,QAAS,YAAsB,EAAnBnmB,MAAmB,EAAZ6lB,MACf,MAAO,gBAGf,CACIjmB,GAAI,cACJqI,QAAS,CACL,CAAEjI,MAAO,cAAegI,MAAO,cAAeme,QAAS,eACvD,CAAEnmB,MAAO,WAAYgI,MAAO,mBAAoBme,QAAS,YACzD,CAAEnmB,MAAO,aAAcgI,MAAO,iBAAkBme,QAAS,aACzD,CAAEnmB,MAAO,gBAAiBgI,MAAO,uBAAwBme,QAAS,mBAG1E,CACIvmB,GAAI,cACJhJ,QAAS,gCACTuvB,QAAS,YAAsB,EAAnBnmB,MAAmB,EAAZ6lB,MAEf,OADA,EAAK3mB,MAAMC,QAAQ7E,WAAW,oBACvB,cAGf,CACIsF,GAAI,WACJhJ,QAAS,4BACTuvB,QAAS,YAAsB,EAAnBnmB,MAAmB,EAAZ6lB,MAEf,OADA,EAAK3mB,MAAMC,QAAQ7E,WAAW,kBACvB,cAGf,CACIsF,GAAI,YACJhJ,QAAS,2BACTuvB,QAAS,YAAsB,EAAnBnmB,MAAmB,EAAZ6lB,MAEf,OADA,EAAK3mB,MAAMC,QAAQ7E,WAAW,mBACvB,cAGf,CACIsF,GAAI,gBACJhJ,QAAS,wBACTuvB,QAAS,cAGb,CACIvmB,GAAI,aACJ/B,MAAM,EAENuoB,UAAW,SAACpmB,GACR,OAAIqmB,MAAMrmB,IACC,6BAIfmmB,QAAS,YAAuB,IACxB1wB,EADIuK,EAAmB,EAAnBA,MAAmB,EAAZ6lB,MAqBf,OAlBIpwB,EADkC,gBAAjC,EAAKyJ,MAAMhB,aAAa/G,MAA6D,eAAjC,EAAK+H,MAAMhB,aAAa/G,KACtE,CAAE,MAAS,EAAK+H,MAAMhB,aAAaxH,UAAW,KAAQ,EAAKwI,MAAMhB,aAAa/G,KAAM,KAAQ,UAG5F,CAAE,MAAS,EAAK+H,MAAMhB,aAAaxH,UAAW,KAAQ,EAAKwI,MAAMhB,aAAa/G,KAAM,KAAQ,YAAa+K,SAAU,EAAKhD,MAAMhB,aAAakE,SAEtJjM,KAAMY,KAAiB,uBAAwBtB,GAC1Ca,MAAK,SAACC,GAEqB,MAApBA,EAASC,QAAkBD,EAASd,KAAKkwB,eAAe,SAAWpvB,EAASd,KAAKA,KAAKkF,OAAS,EAC/F,EAAKuE,MAAMC,QAAQ3E,oBAAoBwF,EAAOzJ,EAASd,KAAKA,MAG5D,EAAKyJ,MAAMC,QAAQ3E,oBAAoBwF,EAAO,OAGrDnJ,OAAM,SAAAC,GACH,EAAKoI,MAAMC,QAAQ3E,oBAAoBwF,EAAO,OAE/C,iBAGf,CACIJ,GAAI,eACJ6F,UAAW,cAAC,GAAD,IACX6gB,WAAW,EACXC,MAAO,IACPJ,QAAS,YAEb,CACIvmB,GAAI,WACJhJ,QAAS,+BACTuvB,QAAS,cAEb,CACIvmB,GAAI,aACJ2mB,MAAO,IACP3vB,QAAS,MACT6jB,KAAK,KAlGR3b,KAAKhB,MAAMioB,kB,GArBZjlB,cAyITC,gBATS,SAAAjD,GAAK,MAAK,CAC9BI,aAAcJ,EAAMD,KAAKK,aACzBR,aAAcI,EAAMO,KAAKX,iBAGF,SAAA3H,GAAQ,MAAK,CACpCoJ,QAAS6B,YAAmB,CAAE1G,wBAAYE,2CAAuBzE,MAGtDgL,CAA6C+kB,IChItDU,G,4JACJ,WAAU,IACA3oB,EAASiB,KAAKI,MAAdrB,KAgCR,OAAIA,IAAgC,IAAxBA,EAAKhB,eAEb,gCACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,IAAD,OAeF,eAAC,IAAD,WAEE,cAAC,IAAD,CAAO4pB,OAAK,EAACtM,KAAK,IAAI1U,UAAWjH,IACjC,cAAC,IAAD,CAAOioB,OAAK,EAACtM,KAAK,KAAKuM,OAAQ,kBAAO,cAAC,IAAD,CAAU9lB,GAAG,gB,GAzD3CE,aAgFHC,gBAZS,SAAAjD,GAAK,MAAK,CAChCD,KAAMC,EAAMD,KACZQ,KAAMP,EAAMO,KACZjJ,eAAgB0I,EAAMD,KAAKzI,eAC3ByH,eAAgBiB,EAAMD,KAAKhB,eAC3BlH,aAAcmI,EAAMD,KAAKlI,aACzBqH,QAASc,EAAMO,KAAKrB,YAEK,SAAAjH,GAAQ,MAAK,CACtCoJ,QAAS6B,YAAmB,CAAEpL,eAASkiB,EAAY/hB,MAGtCgL,CAA6CylB,ICxFxCG,U,ICPmBhqB,G,SCmB1BiqB,GAAUC,eACjBC,GDnBGC,YACLppB,EACAhB,GACAqqB,YAAQC,YAAgBC,OCmB5BC,IAAST,OACP,cAAC,IAAD,CAAUE,QAASA,GAASE,MAAOA,GAAnC,SACE,cAAC,IAAD,UACE,cAAC,GAAD,QAESjI,SAASuI,eAAe,SFgGjC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjxB,MAAK,SAAAkxB,GACjCA,EAAaC,iB,gCGnInB,wIAAO,IAAMzpB,EAAoB,oBACpBC,EAAoB,oBACpBE,EAAkB,kBAClBC,EAAO,W","file":"static/js/main.09959d9d.chunk.js","sourcesContent":["import * as loginTypes from '../constants/LoginActionTypes'\r\nimport * as pageTypes from '../constants/PageActionTypes'\r\nimport axios from \"axios\";\r\n\r\n// const serverUrl = 'http://localhost:8181';\r\nconst serverUrl = \"\";\r\nexport const setLoginPending = isLoginPending => ({\r\n  type: loginTypes.SET_LOGIN_PENDING,\r\n  payload: { isLoginPending }\r\n})\r\n\r\nexport const setLoginSuccess = data => ({\r\n  type: loginTypes.SET_LOGIN_SUCCESS,\r\n  payload: { data }\r\n})\r\n\r\nexport const setLoginError = isLoginError => ({\r\n  type: loginTypes.SET_LOGIN_ERROR,\r\n  payload: { isLoginError }\r\n})\r\n\r\n\r\n\r\n//Login...\r\nexport function login(email, password) {\r\n  return (dispatch) => {\r\n    dispatch(setLoginPending(true));\r\n    let password_encode = new Buffer(password).toString('base64')\r\n    axios.get(serverUrl + '/login?email=' + email + '&pass=' + password_encode)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          if (!response.data.isAuthenticated) {\r\n            dispatch(setLoginError(response.data.message));\r\n          } else if (response.data.isAuthenticated) {\r\n            response.data.userEmail = email;\r\n            dispatch(checkUser(response.data));\r\n          } else {\r\n            dispatch(setLoginError(response.data.message));\r\n          }\r\n        } else {\r\n          dispatch(setLoginError(\"Server Error, Please Try Later!\"));\r\n        }\r\n      })\r\n      .catch(error => {\r\n        dispatch(setLoginError(\"Network Error, Please Try Later!\"))\r\n      });\r\n  }\r\n}\r\n\r\n//Check user has access for this portal or not...\r\nexport function checkUser(data) {\r\n  return (dispatch => {\r\n    axios.post(serverUrl + '/api/v1/checkUser', { \"userId\": data.userEmail })\r\n      .then((response) => {\r\n        var userInfo = response.data;\r\n        userInfo.empId = data.empId;\r\n        userInfo.username = data.username;\r\n        userInfo.userEmail = data.userEmail;\r\n        userInfo.role = response.data.role\r\n        if (response.data.isAuthenticated && response.status === 200) {\r\n          dispatch(setLoginSuccess(userInfo));\r\n        }\r\n        else {\r\n          dispatch(setLoginError(response.data.message)\r\n          );\r\n        }\r\n      })\r\n      .catch(error => {\r\n        dispatch(setLoginError(error));\r\n      });\r\n  })\r\n}\r\n//Getting all issues\r\nexport function getAllIssues(data) {\r\n  return (dispatch => {\r\n    axios.post(serverUrl + '/api/v1/getAllIssues', data)\r\n      .then((response) => {\r\n        // console.log(response)\r\n        if (response.status === 200) {\r\n          dispatch({\r\n            type: pageTypes.ALL_ISSUES,\r\n            payload: {\r\n              allIssues: response.data\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          dispatch(setLoginError(response.data.message))\r\n        }\r\n      })\r\n      .catch(error => {\r\n        dispatch(setLoginError(error));\r\n      });\r\n  })\r\n}\r\n\r\n\r\n//update the Issue\r\nexport function updateIssue(reply) {\r\n  return function (dispatch) {\r\n    axios.post(serverUrl + '/api/v1/response', reply)\r\n      .then((updateData) => {\r\n        if (updateData.status === 200) {\r\n          dispatch({\r\n            type: pageTypes.UPDATE_REQUEST,\r\n            payload: {\r\n              response_data: updateData\r\n            }\r\n          });\r\n          dispatch(getAllIssues(reply))\r\n        }\r\n        else {\r\n          dispatch(setLoginError(updateData.data.message))\r\n        }\r\n\r\n      })\r\n      .catch(error => {\r\n        dispatch(setLoginError(error));\r\n      });\r\n  }\r\n}\r\n\r\n//form submition\r\nexport function raiseIssue(data) {\r\n  return (dispatch => {\r\n    axios.post(serverUrl + '/api/v1/craeteIncident', data)\r\n      .then((response) => {\r\n        // console.log(response)\r\n        if (response.status === 201 && response.data.message === \"Successfully Inserted\") {\r\n          dispatch({\r\n            type: pageTypes.CREATE_ISSUE,\r\n            payload: {\r\n              Details: response.data.data\r\n            }\r\n          });\r\n          dispatch(mailToUser(data))\r\n          dispatch(mailToSME(data))\r\n        }\r\n        else {\r\n          dispatch(setLoginError(response.data.message))\r\n          dispatch({\r\n            type: pageTypes.CREATE_ISSUE,\r\n            payload: {\r\n              Details: []\r\n            }\r\n          });\r\n        }\r\n\r\n      }).catch(function (err) {\r\n        dispatch(setLoginError(\"Network Error, Please try Later!\"))\r\n        dispatch({\r\n          type: pageTypes.CREATE_ISSUE,\r\n          payload: {\r\n            Details: []\r\n          }\r\n        });\r\n      })\r\n  })\r\n}\r\n\r\n//form editing\r\nexport function editTicket(data) {\r\n  return (dispatch => {\r\n    axios.post(serverUrl + '/api/v1/editIncident', data)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          dispatch({\r\n            type: pageTypes.EDIT_TICKET,\r\n            payload: {\r\n              editResponse: response\r\n            }\r\n          });\r\n          dispatch(getAllIssues(data))\r\n        }\r\n        else {\r\n          dispatch(setLoginError(response.data.message))\r\n        }\r\n\r\n      })\r\n  })\r\n}\r\n\r\n//Withdrw Ticket\r\nexport function withdrawTicket(data) {\r\n  return (dispatch => {\r\n    axios.post(serverUrl + '/api/v1/withdrawTicket', data)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          dispatch({\r\n            type: pageTypes.WITHDRAW_TICKET,\r\n            payload: {\r\n              withdrawResponse: response\r\n            }\r\n          });\r\n          dispatch(getAllIssues(data))\r\n        }\r\n        else {\r\n          dispatch(setLoginError(response.data.message))\r\n        }\r\n\r\n      })\r\n  })\r\n}\r\n\r\n//getting updated record\r\nexport function getUpdatedRecord(data) {\r\n  return (dispatch => {\r\n    axios.post(serverUrl + '/api/v1/getupdatedIssue', data)\r\n      .then((response) => {\r\n        // console.log(response)\r\n        if (response.status === 200) {\r\n          dispatch({\r\n            type: pageTypes.ALL_UPDATED_RECORD,\r\n            payload: {\r\n              updateRecord: response.data.data\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          dispatch(setLoginError(response.data.message))\r\n        }\r\n      })\r\n      .catch(error => {\r\n        dispatch(setLoginError(error));\r\n      });\r\n  })\r\n}\r\n//Getiing all users\r\nexport function getAllUsers() {\r\n  return (dispatch => {\r\n    axios.post(serverUrl + '/api/v1/getAllUsers')\r\n      .then((response) => {\r\n        // console.log(response)\r\n        if (response.status === 200) {\r\n          dispatch({\r\n            type: pageTypes.ALL_USERS,\r\n            payload: {\r\n              allUsers: response.data.data\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          dispatch(setLoginError(response.data.message))\r\n        }\r\n      })\r\n      .catch(error => {\r\n        dispatch(setLoginError(error));\r\n      });\r\n  })\r\n}\r\n\r\n//adding user\r\nexport function addUser(data) {\r\n  return (dispatch => {\r\n    axios.post(serverUrl + '/api/v1/addUser', data)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          dispatch({\r\n            type: pageTypes.ADD_USER,\r\n            payload: {\r\n              userRes: response\r\n            }\r\n          });\r\n          dispatch(getAllUsers())\r\n        }\r\n        else {\r\n          dispatch(setLoginError(response.data.message))\r\n        }\r\n\r\n      })\r\n  })\r\n}\r\n//update user\r\nexport function updateUser(data) {\r\n  return (dispatch => {\r\n    axios.post(serverUrl + '/api/v1/updateUser', data)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          dispatch({\r\n            type: pageTypes.UPDATE_USER,\r\n            payload: {\r\n              updateuserRes: response\r\n            }\r\n          });\r\n          dispatch(getAllUsers())\r\n        }\r\n        else {\r\n          dispatch(setLoginError(response.data.message))\r\n        }\r\n\r\n      })\r\n  })\r\n}\r\n\r\n//deleting user\r\nexport function deleteUser(data) {\r\n  return (dispatch => {\r\n    axios.post(serverUrl + '/api/v1/deleteUser', data)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          dispatch({\r\n            type: pageTypes.DELETE_USER,\r\n            payload: {\r\n              deleteRes: response\r\n            }\r\n          });\r\n          dispatch(getAllUsers())\r\n        }\r\n        else {\r\n          dispatch(setLoginError(response.data.message))\r\n        }\r\n\r\n      })\r\n  })\r\n}\r\n\r\n//transfering ticket\r\nexport function trasferTicket(data) {\r\n  return (dispatch => {\r\n    axios.post(serverUrl + '/api/v1/ticketTransfer', data)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          dispatch({\r\n            type: pageTypes.TICKET_TRANSFER,\r\n            payload: {\r\n              transferTicket: response\r\n            }\r\n          });\r\n          dispatch(getAllIssues(data))\r\n        }\r\n        else {\r\n          dispatch(setLoginError(response.data.message))\r\n        }\r\n\r\n      })\r\n  })\r\n}\r\n\r\n\r\n//Getting All issue types\r\nexport function getAllIssueTypes() {\r\n  return (dispatch => {\r\n    axios.get(serverUrl + '/api/v1/getAllIssueTypes')\r\n      .then((response) => {\r\n        // console.log(response)\r\n        if (response.status === 200) {\r\n          dispatch({\r\n            type: pageTypes.GET_ALLISSUETYPES,\r\n            payload: {\r\n              issueType: response.data.data\r\n            }\r\n          });\r\n          // dispatch(getAllIssues(data))\r\n        }\r\n        else {\r\n          dispatch(setLoginError(response.data.message))\r\n        }\r\n\r\n      })\r\n  })\r\n}\r\n\r\n//adding  issue\r\nexport function addIssue(data) {\r\n  return (dispatch => {\r\n    axios.post(serverUrl + '/api/v1/addIssue', data)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          dispatch({\r\n            type: pageTypes.ADD_ISSUE,\r\n            payload: {\r\n              addIssueData: response\r\n            }\r\n          });\r\n          dispatch(getAllIssueTypes())\r\n        }\r\n        else {\r\n          dispatch(setLoginError(response.data.message))\r\n        }\r\n\r\n      })\r\n  })\r\n}\r\n//delete issue\r\nexport function deleteIssue(data) {\r\n  return (dispatch => {\r\n    axios.post(serverUrl + '/api/v1/DELETEISSUE', data)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          dispatch({\r\n            type: pageTypes.DELETE_ISSUE,\r\n            payload: {\r\n              deleteIssue: response\r\n            }\r\n          });\r\n          dispatch(getAllIssueTypes())\r\n        }\r\n        else {\r\n          dispatch(setLoginError(response.data.message))\r\n        }\r\n\r\n      })\r\n  })\r\n}\r\n\r\n//mail to user\r\nexport function mailToUser(data) {\r\n  return (dispatch => {\r\n    axios.post(serverUrl + '/api/v1/mailToUser', data)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          dispatch({\r\n            type: pageTypes.MAIL_TO_USER,\r\n            payload: {\r\n              userMail: response\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          dispatch(setLoginError(response.data.message))\r\n        }\r\n      })\r\n  })\r\n}\r\n//mail to sme\r\nexport function mailToSME(data) {\r\n  return (dispatch => {\r\n    axios.post(serverUrl + '/api/v1/mailToSME', data)\r\n      .then((response) => {\r\n        // if (response.status === 200) {\r\n        //   dispatch({\r\n        //     type: pageTypes.MAIL_TO_SME,\r\n        //     payload: {\r\n        //       SMEMail: response\r\n        //     }\r\n        //   });\r\n        // }\r\n        // else {\r\n        //   dispatch(setLoginError(response.data.message))\r\n        // }\r\n      }).catch(function (err) {\r\n\r\n      })\r\n  })\r\n}\r\nexport function replyMail(data) {\r\n  return (dispatch => {\r\n    axios.post(serverUrl + '/api/v1/replyMail', data)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          dispatch({\r\n            type: pageTypes.REPLY_MAIL,\r\n            payload: {\r\n              replyMail: response\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          dispatch(setLoginError(response.data.message))\r\n        }\r\n      })\r\n  })\r\n}\r\n//mail for withdrawing ticket\r\nexport function withdrawTicketMail(data) {\r\n  return (dispatch => {\r\n    axios.post(serverUrl + '/api/v1/withdrawTicketMail', data)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          dispatch({\r\n            type: pageTypes.WITHDRAW_TICKET_MAIL,\r\n            payload: {\r\n              withdrawMail: response\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          dispatch(setLoginError(response.data.message))\r\n        }\r\n      })\r\n  })\r\n}\r\n\r\n\r\n//upload dat for sst userlist\r\nexport function uploadExcel(data, userData) {\r\n  return (dispatch => {\r\n    axios.post(serverUrl + '/api/v1/uploadExcel', {data, userData})\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          dispatch({\r\n            type: pageTypes.UPLOAD,\r\n            payload: {\r\n              excelData: response\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          dispatch(setLoginError(response.data.message))\r\n        }\r\n      })\r\n      .catch(error => {\r\n        dispatch(setLoginError(error));\r\n      });\r\n  })\r\n}\r\n\r\n//notification mail\r\nexport function notificationMail(data) {\r\n  return (dispatch => {\r\n    axios.post(serverUrl + '/api/v1/notificationMail', { data })\r\n      .then((response) => {\r\n        // console.log(response)\r\n        if (response.status === 200) {\r\n          dispatch({\r\n            type: pageTypes.NOTIFICATION_MAIL,\r\n            payload: {\r\n              notificationMail: response\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          dispatch(setLoginError(response.data.message))\r\n        }\r\n      })\r\n  })\r\n}\r\nexport function getUsers(data) {\r\n  return (dispatch => {\r\n    axios.post(serverUrl + '/api/v1/ampUsers', { data })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          dispatch({\r\n            type: pageTypes.AMP_USERS,\r\n            payload: {\r\n              ampUsers: response.data.data\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          dispatch(setLoginError(response.data.message))\r\n        }\r\n      })\r\n  })\r\n}\r\n//upload dat for esync\r\nexport function uploadeSyncExcel(eSyncData) {\r\n  return (dispatch => {\r\n    axios.post(serverUrl + '/api/v1/uploadeSyncExcel', eSyncData)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          dispatch({\r\n            type: pageTypes.UPLOAD_ESYNC,\r\n            payload: {\r\n              eSyncexcelData: response\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          dispatch(setLoginError(response.data.message))\r\n        }\r\n      })\r\n      .catch(error => {\r\n        dispatch(setLoginError(error));\r\n      });\r\n  })\r\n}\r\n\r\nexport function postNotification(data) {\r\n  return (dispatch => {\r\n    axios.post(serverUrl + '/api/v1/postNotification', { data })\r\n      .then((response) => {\r\n        // console.log(response)\r\n        if (response.status === 200) {\r\n          dispatch({\r\n            type: pageTypes.NOTIFICATION_MAIL,\r\n            payload: {\r\n              notificationMail: response\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          dispatch(setLoginError(response.data.message))\r\n        }\r\n      }).catch(err => {\r\n        dispatch(setLoginError(err.message))\r\n      })\r\n  })\r\n}\r\n\r\nexport function getPopNotification(data) {\r\n  return (dispatch => {\r\n    axios.post(serverUrl + '/api/v1/getPopNotification', { data })\r\n      .then((response) => {\r\n        // console.log(response)\r\n        if (response.status === 200) {\r\n          dispatch({\r\n            type: pageTypes.VERIFY_ISSUE,\r\n            payload: {\r\n              data: response.data\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          dispatch(setLoginError(response.data.message))\r\n        }\r\n      }).catch(err => {\r\n        dispatch(setLoginError(err.message))\r\n      })\r\n  })\r\n}\r\n\r\nexport function getAllNotification() {\r\n  return (dispatch => {\r\n    axios.get(serverUrl + '/api/v1/allNotification')\r\n      .then((response) => {\r\n        // console.log(response)\r\n        if (response.status === 200) {\r\n          dispatch({\r\n            type: pageTypes.GET_ALL_NOTIFICATION,\r\n            payload: {\r\n              allNotifications: response.data.data\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          dispatch(setLoginError(response.data.message))\r\n        }\r\n      })\r\n  })\r\n}\r\n\r\nexport const changeMenu = (menu) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: pageTypes.CHANGE_MENU,\r\n      payload: { menu }\r\n    })\r\n  }\r\n}\r\nexport const fetchTicketByNumber = (ticketNumber, data) => {\r\n  return (dispatch) => {\r\n    let ticketStatus = data.length > 0 && ticketNumber !== null ? data.filter(x => x.TICKET_NO === ticketNumber) : [];\r\n    dispatch({\r\n      type: pageTypes.FETCH_TICKET_DETAILS,\r\n      payload: ticketStatus\r\n    })\r\n  }\r\n}\r\n\r\nexport function slackNotification(data) {\r\n  return (dispatch => {\r\n    axios.post(serverUrl + '/api/v1/slackNotification', { data })\r\n      .then((response) => {\r\n        // console.log(response)\r\n        if (response.status === 200) {\r\n          dispatch({\r\n            type: pageTypes.NOTIFICATION_MAIL,\r\n            payload: {\r\n              notificationMail: response\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          dispatch(setLoginError(response.data.message))\r\n        }\r\n      })\r\n  })\r\n}","\r\nexport const INITIAL_STATE = 'INITIAL_STATE'\r\nexport const CREATE_ISSUE = 'CREATE_ISSUE'\r\nexport const ALL_ISSUES = 'ALL_ISSUES'\r\nexport const UPDATE_REQUEST = 'UPDATE_REQUEST'\r\nexport const ALL_UPDATED_RECORD = 'ALL_UPDATED_RECORD'\r\nexport const ALL_USERS = 'ALL_USERS'\r\nexport const ADD_USER = 'ADD_USER'\r\nexport const DELETE_USER = 'DELETE_USER'\r\nexport const TICKET_TRANSFER = 'TICKET_TRANSFER'\r\nexport const GET_ALLISSUETYPES = 'GET_ALLISSUETYPES'\r\nexport const ADD_ISSUE = 'ADD_ISSUE'\r\nexport const DELETE_ISSUE = 'DELETE_ISSUE'\r\nexport const EDIT_TICKET = 'EDIT_TICKET'\r\nexport const WITHDRAW_TICKET = 'WITHDRAW_TICKET'\r\nexport const UPDATE_USER = 'UPDATE_USER'\r\nexport const MAIL_TO_USER = 'MAIL_TO_USER'\r\nexport const MAIL_TO_SME = 'MAIL_TO_SME'\r\nexport const REPLY_MAIL = 'REPLY_MAIL'\r\nexport const WITHDRAW_TICKET_MAIL = 'WITHDRAW_TICKET_MAIL'\r\nexport const UPLOAD = 'UPLOAD'\r\nexport const NOTIFICATION_MAIL = 'NOTIFICATION_MAIL'\r\nexport const AMP_USERS = 'AMP_USERS'\r\nexport const UPLOAD_ESYNC = 'UPLOAD_ESYNC'\r\nexport const VERIFY_ISSUE = 'VERIFY_ISSUE'\r\nexport const GET_ALL_NOTIFICATION = 'GET_ALL_NOTIFICATION'\r\nexport const CHANGE_MENU = 'CHANGE_MENU'\r\nexport const FETCH_TICKET_DETAILS = 'FETCH_TICKET_DETAILS'","import { SET_LOGIN_PENDING, SET_LOGIN_SUCCESS, SET_LOGIN_ERROR, LOGOUT } from '../constants/LoginActionTypes';\r\n\r\nconst initialState = {\r\n  user_detail: {},\r\n  isLoginSuccess: false,\r\n  isLoginPending: false,\r\n  isLoginError: null,\r\n  getAccountData: [],\r\n  excelData: [],\r\n  error: '',\r\n  getNames: [],\r\n  Success: false,\r\n};\r\n\r\nexport const user = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case SET_LOGIN_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoginPending: true,\r\n        isLoginError: null\r\n      };\r\n    case SET_LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoginSuccess: true,\r\n        Success: true,\r\n        user_details: action.payload.data,\r\n        isLoginError: null,\r\n        isLoginPending: false\r\n      }\r\n    case SET_LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoginPending: true,\r\n        isLoginError: action.payload.isLoginError,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        state\r\n      }\r\n\r\n\r\n    default:\r\n      // ALWAYS have a default case in a reducer\r\n      return state;\r\n  }\r\n\r\n}\r\n","import {\r\n    INITIAL_STATE, CREATE_ISSUE, ALL_ISSUES, UPDATE_REQUEST, ALL_UPDATED_RECORD, ALL_USERS, ADD_USER, DELETE_USER, TICKET_TRANSFER,\r\n    GET_ALLISSUETYPES, ADD_ISSUE, DELETE_ISSUE, EDIT_TICKET, WITHDRAW_TICKET, UPDATE_USER, MAIL_TO_USER, MAIL_TO_SME,\r\n    REPLY_MAIL, WITHDRAW_TICKET_MAIL, UPLOAD, NOTIFICATION_MAIL, AMP_USERS, UPLOAD_ESYNC, VERIFY_ISSUE, GET_ALL_NOTIFICATION, CHANGE_MENU, FETCH_TICKET_DETAILS\r\n} from '../constants/PageActionTypes'\r\n\r\nconst initialPageState = {\r\n    result: \"\",\r\n    formDate: \"\",\r\n    updateResult: '',\r\n    updateRecord: \"\",\r\n    userRes: \"\",\r\n    allIssues: \"\",\r\n    allUsers: [],\r\n    transferTicket: '',\r\n    issueTypes: '',\r\n    addIssueData: '',\r\n    deleteIssue: '',\r\n    editResponse: '',\r\n    withdrawResponse: \"\",\r\n    updateuserRes: '',\r\n    userMail: '',\r\n    SMEMail: '',\r\n    replyMail: '',\r\n    withdrawMail: '',\r\n    ampUsers: '',\r\n    verify: [],\r\n    allNotification: [],\r\n    menuData: '',\r\n    ticketRecord: []\r\n}\r\n\r\nexport const page = (state = initialPageState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_ISSUE: {\r\n            return { ...state, result: action.payload.Details }\r\n        }\r\n        case ALL_ISSUES: {\r\n            return { ...state, allIssues: action.payload.allIssues.data }\r\n        }\r\n        case UPDATE_REQUEST: {\r\n            return { ...state, updateResult: action.payload.response_data }\r\n        }\r\n        case ALL_UPDATED_RECORD: {\r\n            return { ...state, updateRecord: action.payload.updateRecord }\r\n        }\r\n        case ALL_USERS: {\r\n            return { ...state, allUsers: action.payload.allUsers }\r\n        }\r\n        case ADD_USER: {\r\n            return { ...state, userRes: action.payload.userRes }\r\n        }\r\n        case DELETE_USER: {\r\n            return { ...state, deleteRes: action.payload.deleteRes }\r\n        }\r\n        case TICKET_TRANSFER: {\r\n            return { ...state, transferTicket: action.payload.transferTicket }\r\n        }\r\n        case GET_ALLISSUETYPES: {\r\n            return { ...state, issueTypes: action.payload.issueType }\r\n        }\r\n        case ADD_ISSUE: {\r\n            return { ...state, addIssueData: action.payload.addIssueData }\r\n        }\r\n        case DELETE_ISSUE: {\r\n            return { ...state, deleteIssue: action.payload.deleteIssue }\r\n        }\r\n        case EDIT_TICKET: {\r\n            return { ...state, editResponse: action.payload.editResponse }\r\n        }\r\n        case WITHDRAW_TICKET: {\r\n            return { ...state, withdrawResponse: action.payload.withdrawResponse }\r\n        }\r\n        case UPDATE_USER: {\r\n            return { ...state, updateuserRes: action.payload.updateuserRes }\r\n        }\r\n        case MAIL_TO_USER: {\r\n            return { ...state, userMail: action.payload.userMail }\r\n        }\r\n        case MAIL_TO_SME: {\r\n            return { ...state, SMEMail: action.payload.SMEMail }\r\n        }\r\n        case REPLY_MAIL: {\r\n            return { ...state, replyMail: action.payload.replyMail }\r\n        }\r\n        case WITHDRAW_TICKET_MAIL: {\r\n            return { ...state, withdrawMail: action.payload.withdrawMail }\r\n        }\r\n        case UPLOAD: {\r\n            return { ...state, excelData: action.payload.excelData }\r\n        }\r\n        case NOTIFICATION_MAIL: {\r\n            return { ...state, notification: action.payload.notificationMail }\r\n        }\r\n        case AMP_USERS: {\r\n            return { ...state, ampUsers: action.payload.ampUsers }\r\n        }\r\n        case UPLOAD_ESYNC: {\r\n            return { ...state, eSyncData: action.payload.eSyncexcelData }\r\n        }\r\n        case VERIFY_ISSUE: {\r\n            return { ...state, verify: action.payload.data.data }\r\n        }\r\n        case GET_ALL_NOTIFICATION: {\r\n            return { ...state, allNotification: action.payload.allNotifications }\r\n        }\r\n        case CHANGE_MENU: {\r\n            return { ...state, menuData: action.payload.menu }\r\n        }\r\n        case FETCH_TICKET_DETAILS: {\r\n            return { ...state, ticketRecord: action.payload }\r\n        }\r\n        case INITIAL_STATE: {\r\n            return {\r\n                ...state,\r\n                result: undefined\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport {user} from './user'\r\nimport {page} from './page'\r\n\r\nconst rootReducer = combineReducers({\r\n  user,\r\n  page\r\n})\r\n\r\nexport default rootReducer\r\n","export default __webpack_public_path__ + \"static/media/IBM_white.879438fe.png\";","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { login } from '../actions/index';\r\nimport ibm from '../images/IBM_white.png';\r\nimport '../styles/Login.css';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nclass Login extends Component {\r\n  state = {\r\n    email: '', passwords: '', error: '', err: false\r\n  }\r\n  error = () => {\r\n    setTimeout(() => {\r\n      this.setState({ err: false, error: '' })\r\n    }, 1500);\r\n  }\r\n  validate(e) {\r\n    e.preventDefault();\r\n    let { email, passwords } = this.state;\r\n    this.setState({ err: false })\r\n    if (this.state.email === \"\" && this.state.passwords === \"\") {\r\n      this.setState({ error: \"Email Id and password should not be blank!\", err: true, iconColor: \"text-danger\" });\r\n      this.error()\r\n\r\n\r\n    } else if (!this.state.email.includes(\"ibm.com\")) {\r\n      this.setState({ error: \"Allowed IBM authorized user only!\", err: true, iconColor: \"text-danger\" })\r\n      this.error()\r\n\r\n    } else if (this.state.passwords === \"\") {\r\n      this.setState({ error: \"Password should not be blank!\", err: true, iconColor: \"text-danger\" })\r\n      this.error()\r\n    }\r\n    else {\r\n      this.doLogin(email, passwords)\r\n    }\r\n\r\n  }\r\n\r\n  doLogin(email, passwords) {\r\n    this.props.actions.login(email, passwords);\r\n    this.setState({\r\n      email: '',\r\n      passwords: ''\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    let { isLoginPending, isLoginError } = this.props;\r\n\r\n    return (\r\n      <div className=\".container-fluid backgroundClass\">\r\n        <div className=\"header\">\r\n          <img src={ibm} alt=\"ibm\" className=\"ibm-image\"></img>\r\n        </div>\r\n        <div className=\"headingClass\">CPSD Self Service Ticketing Tool</div>\r\n        {isLoginError && <div className=\"invalid\">{isLoginError}</div>}\r\n        <div className=\"loginDiv\">\r\n          <form onSubmit={this.validate.bind(this)}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputEmail1\" className=\"labelClass\" ><strong>Sign in with your w3id</strong></label><br />\r\n              <input type=\"email\" id=\"email\" className=\"text-input form-control\" aria-describedby=\"emailHelp\" onChange={e => this.setState({ email: e.target.value })} value={this.state.email} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputPassword1\" className=\"labelClass\"><strong>Password</strong></label><br />\r\n              <input type=\"password\" className=\"text-input form-control\" id=\"password\" onChange={e => this.setState({ passwords: e.target.value })} value={this.state.passwords} />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary loginButtonClass\" >Sign In</button>\r\n          </form>\r\n        </div>\r\n        {isLoginError === null && isLoginPending && <div className=\"text-center\">\r\n          <div className=\"spinner-border spin\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>}\r\n        <div>\r\n          <Snackbar\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n            open={this.state.err}\r\n            className='snacking'\r\n            message={this.state.error}\r\n          />\r\n        </div>\r\n        {/* modal dispalys when we click on footer */}\r\n        <div className=\"modal login-modal\" id=\"login\">\r\n          <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h4 className=\"modal-title\">Aditya Rao</h4>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Transformation & Automation - CPS F&A Global Lead (Cognitive Process Services)\r\n                Global Business Services<br /><br /><br />\r\n                Email ID  :  adityarao@in.ibm.com<br />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\">OK</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* footer */}\r\n        <div className=\"footer\">\r\n          <button id=\"termsLink\" className=\"ds-display-inline-block ds-mar-b-1 hp-footer-link text-footer but-foot\" rel=\"noopener noreferrer\" onClick={this.handleContact} data-toggle=\"modal\" data-target=\"#login\">Contact</button>\r\n          <Link id=\"termsLink\" to={{ pathname: \"https://w3.ibm.com/w3/info_terms_of_use.html\" }} rel=\"noopener noreferrer\" target=\"_blank\" className=\"ds-display-inline-block ds-mar-b-1 hp-footer-link text-footer\">Terms of Use</Link>\r\n          <Link id=\"privacyLink\" to={{ pathname: \"https://w3.ibm.com/w3-privacy-notice\" }} target=\"_new\" className=\"ds-display-inline-block ds-mar-b-1 hp-footer-link text-footer\">Privacy Policy</Link>\r\n          <Link id=\"accessibilityLink\" rel=\"noopener noreferrer\" to={{ pathname: \"https://w3-connections.ibm.com/wikis/home?lang=en-us#!/wiki/Wf49a0f070e65_41de_bb0a_ff81f7eb3319/page/yourIBM%20Accessibility%20Features\" }} target=\"_blank\" className=\"ds-display-inline-block ds-mar-b-1 hp-footer-link text-footer\">w3 Accessibility</Link>\r\n          <Link id=\"conductLink\" rel=\"noopener noreferrer\" to={{ pathname: \"https://w3.ibm.com/ibm/documents/corpdocweb.nsf/ContentDocsByTitle/Business+Conduct+Guidelines\" }} className=\"ds-display-inline-block ds-mar-b-1 hp-footer-link text-footer\" target=\"_blank\">Business Conduct Guidelines</Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoginPending: state.user.isLoginPending,\r\n  isLoginSuccess: state.user.isLoginSuccess,\r\n  isLoginError: state.user.isLoginError\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators({ login }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport '../styles/CreateIncident.css'\r\nimport { raiseIssue, getAllIssueTypes, mailToUser, mailToSME, getAllUsers, getPopNotification, changeMenu } from '../actions/index';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nclass CreateIncident extends Component {\r\n\r\n  state = {\r\n    name: \"\",\r\n    createdDate: '',\r\n    description: '',\r\n    practitioner: '',\r\n    recordId: \"\",\r\n    flag: false,\r\n    radio: \"\",\r\n    issuetype: '',\r\n    ccomments: \"\",\r\n    spinnerFlag: false,\r\n    category: \"\",\r\n    error: '',\r\n    err: false,\r\n    sections: [],\r\n    section: '',\r\n    types: [],\r\n    createFor: '',\r\n    ticketType: '',\r\n    issueval: '',\r\n    types_of_ticket: [],\r\n    severity: '',\r\n    verifyMessage: '',\r\n    verify: false,\r\n    type: '',\r\n    sharedInfo: \"\",\r\n  }\r\n  UNSAFE_componentWillMount() {\r\n    // this.props.actions.getAllUsers();\r\n    if (this.props.user_details) {\r\n      this.setState({ name: (this.props.user_details.userEmail).toLowerCase() })\r\n    }\r\n    this.props.actions.getAllIssueTypes()\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.issueTypes !== this.props.issueTypes) {\r\n      // if (this.props.user_details.role === \"Super Admin\") {\r\n      if (this.props.issueTypes && this.props.issueTypes.length !== 0) {\r\n        this.setState({ types: this.props.issueTypes })\r\n      }\r\n      // } \r\n      // else if (this.props.user_details.role === \"Super User\") {\r\n      //   if (this.props.issueTypes && this.props.issueTypes.length !== 0) {\r\n      //     let usercategory = this.props.user_details.details[0]['ISSUE_TYPE'];\r\n      //     let finalCategory = this.props.issueTypes.filter(x => usercategory.includes(x.name))\r\n      //     this.setState({ types: finalCategory })\r\n      //   }\r\n      // }\r\n\r\n    }\r\n    if (this.props.verify !== prevProps.verify) {\r\n      if (this.props.verify.length > 0) {\r\n        let sec = this.state.section\r\n        let a = this.props.verify.filter(x => x.ISSUE_CATEGORY === sec)\r\n        if (a.length !== 0 && this.props.verify.length > 0) {\r\n          let msg = a[0]['REASONS'] + \" Alerts!\\n\"\r\n            + a[0]['DESCRIPTION'] + \" from \" + a[0]['START_DATE'] + \" \" + a[0]['START_TIME'] + \" to \" + a[0]['END_DATE'] + \" \" + a[0]['END_TIME']\r\n          this.setState({ verifyMessage: msg, verify: false })\r\n        } else if (a.length === 0 && this.props.verify[0]['ISSUE_CATEGORY'] === \"\") {\r\n          let msg = a[0]['REASONS'] + \" Alerts!\\n\"\r\n            + this.props.verify[0]['DESCRIPTION'] + \" from \" + this.props.verify[0]['START_DATE'] + \" \" + this.props.verify[0]['START_TIME'] + \" to \" + this.props.verify[0]['END_DATE'] + \" \" + this.props.verify[0]['END_TIME']\r\n          this.setState({ verifyMessage: msg, verify: false })\r\n        } else { this.setState({ verifyMessage: '', verify: true }) }\r\n      } else {\r\n        this.setState({ verifyMessage: '', verify: true })\r\n      }\r\n    }\r\n  }\r\n\r\n  handleReset = () => {\r\n    this.setState({\r\n      description: '',\r\n      verifyMessage: '',\r\n      verify: false,\r\n      issuetype: '',\r\n      practitioner: '',\r\n      section: '',\r\n      sections: [],\r\n      severity: '',\r\n      sharedInfo: '',\r\n      spinnerFlag: false,\r\n      err: false,\r\n      error: \"\",\r\n      flag: false,\r\n      type: ''\r\n    })\r\n  }\r\n\r\n  error = () => {\r\n    setTimeout(() => {\r\n      this.setState({ err: false, error: '' })\r\n    }, 3500);\r\n  }\r\n  handleSubmit = () => {\r\n    if (this.state.type === \"\" || this.state.issuetype === \"\" || this.state.issuetype === undefined || this.state.severity === \"\" || this.state.severity === undefined || this.state.practitioner === \"\" || this.state.description === \"\" || this.state.section === undefined || this.state.section === \"\" || this.state.description.length === 0 || this.state.ticketType === '') {\r\n      this.setState({ error: \"All Fields Are Mandatory\", err: true, iconColor: \"text-danger\" });\r\n      this.error()\r\n    }\r\n    else if (this.state.description.length > 1000) {\r\n      this.setState({ error: \"Description should not exceed 1000 characters\", err: true, iconColor: \"text-danger\" });\r\n      this.error()\r\n    }\r\n    else {\r\n      this.handleComment();\r\n    }\r\n  }\r\n  handleComment = () => {\r\n    var min = 100000;\r\n    var max = 999999;\r\n    var random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n    var dt = new Date();\r\n    var date = dt.getDate();\r\n    if (date <= 9) {\r\n      date = '0' + date;\r\n    }\r\n    var month = dt.getMonth() + 1;\r\n    if (month <= 9) {\r\n      month = '0' + month;\r\n    }\r\n    var hour = dt.getHours()\r\n    if (hour <= 9) {\r\n      hour = '0' + hour;\r\n    }\r\n    var mins = dt.getMinutes()\r\n    if (mins <= 9) {\r\n      mins = '0' + mins;\r\n    }\r\n\r\n    var data = this.state;\r\n    delete data.err\r\n    delete data.error\r\n    var incidentObj = {};\r\n    Object.assign(incidentObj, {\r\n      type: this.state.type,\r\n      issuetype: this.state.issuetype,\r\n      name: this.state.name,\r\n      practitioner: this.state.practitioner,\r\n      category: this.state.category,\r\n      description: this.state.description.replace(/[,+()'\"*<>{}]/g, ' '),\r\n      severity: this.state.severity,\r\n      createdDate: date + \"-\" + month + \"-\" + dt.getFullYear() + \" \" + hour + \":\" + mins,\r\n      recordId: random,\r\n      section: this.state.section,\r\n      sharedInfo: this.state.sharedInfo,\r\n      createFor: this.state.createFor,\r\n      ticketType: this.state.ticketType,\r\n      loggedinUser: this.props.user_details.username,\r\n      loggedinEmail: this.props.user_details.userEmail\r\n    })\r\n\r\n    this.setState({ spinnerFlag: true })\r\n    this.props.actions.raiseIssue(incidentObj);\r\n    setTimeout(() => {\r\n      if (this.props.result.length === 1) {\r\n        this.setState({ error: \"Ticket Successfully Submitted\", err: true, iconColor: \"text-success\", spinnerFlag: false, issueval: \"Success\" });\r\n        this.error();\r\n        // this.props.actions.mailToUser(incidentObj)\r\n        // this.props.actions.mailToSME(incidentObj)\r\n        this.props.actions.changeMenu('All Ticket Logs')\r\n        this.Reset();\r\n      }\r\n      else {\r\n        this.setState({ show: false, err: true, error: \"Something Went wrong\", iconColor: \"text-danger\", spinnerFlag: false })\r\n        this.error();\r\n      }\r\n    }, 8000)\r\n  }\r\n  Reset() {\r\n    setTimeout(() => {\r\n      this.handleReset()\r\n    }, 500)\r\n  }\r\n  handleChangeType(e) {\r\n    var section;\r\n    this.state.types && this.state.types.forEach(function (opt) {\r\n      if (opt.name === e.target.value) {\r\n        section = opt.section;\r\n      }\r\n    })\r\n    if (section.length === 0) {\r\n      this.setState({ issuetype: e.target.value, sections: [], types_of_ticket: [], section: '', ticketType: '' })\r\n    } else\r\n      this.setState({ issuetype: e.target.value, sections: section, section: '', ticketType: '', types_of_ticket: [] })\r\n  }\r\n  handleSubcategory = (e) => {\r\n    var ttype;\r\n    var issue = this.state.issuetype\r\n    this.state.types && this.state.types.forEach(function (opt) {\r\n      if (opt.name === issue) {\r\n        opt.ticketType && opt.ticketType.forEach((type) => {\r\n          if (type.section === e) {\r\n            ttype = type.type\r\n          }\r\n        })\r\n      }\r\n    })\r\n    this.setState({ section: e, types_of_ticket: ttype, ticketType: '', verify: false, verifyMessage: \"\" })\r\n    this.props.actions.getPopNotification(this.state.issuetype)\r\n  }\r\n\r\n  // handleVerify = () => {\r\n  //   this.props.actions.getPopNotification(this.state.issuetype)\r\n  // }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        {this.state.types && this.state.types.length !== 0 ?\r\n          <div className=\"card main-card\">\r\n            <div className=\"card-header text-center createheader\">Raise New Ticket</div>\r\n            <div className=\"card-body cardbody\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-6 col-md-6\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-6 col-md-3\">\r\n                      <label className=\"mb-3  pr-5\"><strong>Request For </strong><span className='required-aster'>*</span></label>\r\n                    </div>\r\n                    <div className=\"col-sm-6 col-md-6\">\r\n                      <label className=\"radio-inline pr-3\">\r\n                        <input\r\n                          value=\"Self\"\r\n                          checked={this.state.type === \"Self\"}\r\n                          type=\"radio\" name=\"Self\"\r\n                          onChange={e => this.setState({ type: e.target.value, practitioner: (this.props.user_details.userEmail).toLowerCase(), severity: \"Low (less than 5 Employees)\" })} />&nbsp;&nbsp;Self</label>\r\n                      <label className=\"radio-inline\">\r\n                        <input type=\"radio\" name=\"Others\" value=\"Others\"\r\n                          checked={this.state.type === \"Others\"}\r\n                          onChange={e => this.setState({ type: e.target.value, practitioner: \"\", severity: \"\" })} />&nbsp;&nbsp;For Others</label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-6 col-md-3 pb-2 pt-2\">\r\n                      <label><strong>Issue Raised By</strong></label><span className='required-aster'>*</span></div>\r\n                    <div className=\"col-sm-6 col-md-8\">\r\n                      <input\r\n                        readOnly\r\n                        className=\"form-control\"\r\n                        value={this.state.name}\r\n                        type=\"text\"></input>\r\n                    </div>\r\n                  </div>\r\n                  {this.state.type === \"Others\" &&\r\n                    <div className=\"row\">\r\n                      <div className=\"col-sm-6 col-md-3 pb-2 pt-2\">\r\n                        <label><strong>Issue Raised For</strong></label><span className='required-aster'>*</span></div>\r\n                      <div className=\"col-sm-6 col-md-8\">\r\n                        <input\r\n                          className=\"form-control\"\r\n                          placeholder=\"User email ID\"\r\n                          value={this.state.practitioner}\r\n                          onChange={e => this.setState({ practitioner: e.target.value })}\r\n                          type=\"text\"></input>\r\n                      </div>\r\n                    </div>}\r\n                  <div className=\"row\">\r\n                    {this.state.type === \"Self\" ?\r\n                      <div className=\"col-sm-6 col-md-3 pb-2 pt-2\">\r\n                        <label><strong>Impact Category</strong><span className='required-aster'>*</span></label>\r\n                      </div> :\r\n                      <div className=\"col-sm-6 col-md-3 pb-2 pt-2\">\r\n                        <label><strong>Priority Category</strong><span className='required-aster'>*</span></label>\r\n                      </div>}\r\n                    <div className=\"col-sm-6 col-md-8\">\r\n                      <select\r\n                        className=\"form-control\"\r\n                        value={this.state.severity}\r\n                        disabled={this.state.type === \"Self\"}\r\n                        onChange={e => this.setState({ severity: e.target.value })}>\r\n                        <option value=\"\" disabled>Choose From Dropdown</option>\r\n                        <option key=\"high\">High {\"(greater than 21 Employees)\"} </option>\r\n                        <option key=\"medium\">Medium {\"(greater than 6 - less than 20 Employees)\"}</option>\r\n                        <option key=\"low\">Low {\"(less than 5 Employees)\"}</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-6 col-md-3 pb-2 pt-2\">\r\n                      <label><strong>Share Ticket Info</strong></label>\r\n                    </div>\r\n                    <div className=\"col-sm-6 col-md-8\">\r\n                      <input\r\n                        className=\"form-control\"\r\n                        placeholder=\"Email ID Details (Optional)\"\r\n                        value={this.state.sharedInfo}\r\n                        onChange={e => this.setState({ sharedInfo: e.target.value })}>\r\n                      </input>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-sm-6 col-md-6\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-6 col-md-3\">\r\n                      <label className=\" pt-2 pl-3\"><strong>Category</strong><span className='required-aster'>*</span></label>\r\n                    </div>\r\n                    <div className=\"col-sm-6 col-md-8\">\r\n                      <select className=\"form-control mb-2\" value={this.state.issuetype}\r\n                        onChange={(e) => this.handleChangeType(e)}>\r\n                        <option value=\"\" disabled>Choose from dropdown</option>\r\n                        {this.state.types && this.state.types.map((opt) => {\r\n                          return (\r\n                            <option key={opt.name}>{opt.name}</option>\r\n                          )\r\n                        })}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  {this.state.sections && this.state.sections.length !== 0 &&\r\n                    <div> <div className=\"row\">\r\n                      <div className=\"col-sm-6 col-md-3\">\r\n                        <label className=\"pt-2 pl-3\"><strong>Portals & Dashboard</strong><span className='required-aster'>*</span></label>\r\n                      </div>\r\n                      <div className=\"col-sm-6 col-md-8\">\r\n                        <select className=\"form-control mb-2\" value={this.state.section}\r\n                          onChange={e => this.handleSubcategory(e.target.value)}\r\n                        >\r\n                          <option value=\"\" disabled>Choose from dropdown</option>\r\n                          {this.state.sections && this.state.sections.map((opt) => {\r\n                            return (\r\n                              <option key={opt}>{opt}</option>\r\n                            )\r\n                          })}\r\n                        </select>\r\n                      </div>\r\n                      {/* {this.state.section !== \"\" &&\r\n                        <div>\r\n                          {this.state.verify === false ?\r\n                            <span className='verify' onClick={(e) => this.handleVerify()}><strong>Verify</strong></span>\r\n                            :\r\n                            <span className='verify text-success' disabled><strong>Proceed</strong></span>\r\n                          }\r\n                        </div>\r\n                      } */}\r\n                    </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-sm-6 col-md-3\">\r\n                          {this.state.types_of_ticket.length > 0 && this.state.verify === true && <label className=\"pt-2 pl-3\"><strong>Ticket Type</strong><span className='required-aster'>*</span></label>}\r\n                        </div>\r\n                        {this.state.types_of_ticket.length > 0 && this.state.verify === true &&\r\n                          <div className=\"col-sm-6 col-md-8\">\r\n                            <select className=\"form-control mb-2\" value={this.state.ticketType}\r\n                              onChange={e => this.setState({ ticketType: e.target.value })}>\r\n                              <option value=\"\" disabled>Choose from dropdown</option>\r\n                              {this.state.types_of_ticket && this.state.types_of_ticket.map((opt) => {\r\n                                return (\r\n                                  <option key={opt}>{opt}</option>\r\n                                )\r\n                              })}\r\n                            </select>\r\n                          </div>}\r\n                        {/* } */}\r\n                      </div></div>}\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-2\">\r\n                <div className=\"col-sm-12 col-md-12\">\r\n                  <label><strong>Description Of The Issue</strong><span className='required-aster'>*</span></label>\r\n                  <textarea\r\n                    className=\"form-control\"\r\n                    placeholder=\"Describe your concern here\"\r\n                    value={this.state.description}\r\n                    onChange={e => this.setState({ description: e.target.value })}\r\n                    type=\"text\"\r\n                    rows=\"6\"></textarea>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-footer createfooter\">\r\n              <button component={Link}\r\n                to=\"/all-tickets\"\r\n                className=\"btn btu-submit\"\r\n                onClick={this.handleSubmit}\r\n                disabled={!this.state.verify}>Create</button>\r\n            </div>\r\n            {\r\n              this.state.spinnerFlag === true && <div className=\"spinnerClass text-center\">\r\n                <CircularProgress />\r\n\r\n              </div>\r\n            }\r\n          </div>\r\n          :\r\n          <div className=\"text-center\">\r\n            <div className=\"spinner-border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        }\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n          open={this.state.err}\r\n          className='snacking'\r\n          message={this.state.error}\r\n        />\r\n\r\n        {/* Dialog for displaying notification */}\r\n        <Dialog\r\n          open={this.state.verifyMessage !== \"\" && this.state.verify === false}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={this.handleReset}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">{\"Notification\"}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-slide-description\">\r\n              {this.state.verifyMessage !== \"\" ? this.state.verifyMessage : \"Sorry, Network Error. Please Try Later\"}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => this.setState({ verify: true })} color=\"primary\">\r\n              Create Ticket\r\n          </Button>\r\n            <Button\r\n              onClick={() => {\r\n                this.handleReset();\r\n                this.props.actions.changeMenu('All Ticket Logs')\r\n              }}\r\n              color=\"primary\">\r\n              Close\r\n          </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div >\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  allUsers: state.page.allUsers,\r\n  user_details: state.user.user_details,\r\n  result: state.page.result,\r\n  issueTypes: state.page.issueTypes,\r\n  verify: state.page.verify,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators({ raiseIssue, getAllIssueTypes, mailToUser, mailToSME, getAllUsers, getPopNotification, changeMenu }, dispatch)\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CreateIncident));\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/Color.css';\r\n\r\n\r\nclass Color extends Component {\r\n    static propTypes = {\r\n        value: PropTypes.string.isRequired,\r\n        index: PropTypes.number.isRequired,\r\n        change: PropTypes.func.isRequired\r\n    };\r\n\r\n    render() {\r\n        const { value, index, change } = this.props;\r\n        const colors = {\r\n            \"green\": \"#24a148\",\r\n            \"orange\": \"#ff8533\",\r\n            \"yellow\": \"#f1c21b\",\r\n            \"red\": \"#da1e28\"\r\n        }\r\n        let backgroundColor = colors.white;\r\n        if (value === \"Closed\") {\r\n            backgroundColor = colors.green;\r\n\r\n        } else if (value === \"WIP\") {\r\n            backgroundColor = colors.yellow;\r\n        }\r\n        else if (value === \"New\") {\r\n            backgroundColor = colors.red;\r\n        }\r\n        else if (value === \"Open\") {\r\n            backgroundColor = colors.orange;\r\n        }\r\n        return (\r\n            <p className=\"cellClass\"\r\n                value={value}\r\n                onChange={event => change(event.target.value, index)}\r\n                style={{\r\n                    backgroundColor: backgroundColor, color: 'white',\r\n                    fontWeight: 'bold'\r\n                }}>{value}</p>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Color;","// import React from 'react'\r\n\r\nfunction WorkingDays(startDate, endDate, key) {\r\n    var s, e, adjust;\r\n\r\n    if (startDate < endDate) {\r\n        s = startDate;\r\n        e = endDate;\r\n    } else {\r\n        s = endDate;\r\n        e = startDate;\r\n    }\r\n    var diffDays = Math.floor((e - s) / 86400000);\r\n    var weeksBetween = Math.floor(diffDays / 7);\r\n    // console.log(weeksBetween, \"before\")\r\n    if (weeksBetween === 0 && s.getDate() === e.getDate()) {\r\n        weeksBetween = 0\r\n        // console.log(\"iffffff\", weeksBetween, weeksBetween === 0 && s.getDate() === e.getDate())\r\n    }\r\n    else if (weeksBetween && s.getDate() !== e.getDate() && s.getDay() === e.getDay()) {\r\n        weeksBetween = weeksBetween + 1\r\n        // console.log(\"else first\", weeksBetween)\r\n    }\r\n    // else if (weeksBetween === weeksBetween && s.getDate() !== e.getDate() && s.getDay() === e.getDay() && key === \"firsttat\") {\r\n    //     weeksBetween = weeksBetween + 1\r\n    //     // console.log(\"else first\", weeksBetween)\r\n    // }\r\n    // else if (weeksBetween === weeksBetween && s.getDate() !== e.getDate() && s.getDay() === e.getDay() && key === \"secondDate\") {\r\n    //     weeksBetween = weeksBetween\r\n    //     // console.log(\"else second\", weeksBetween)\r\n    // }\r\n    // else {\r\n    //     weeksBetween = weeksBetween\r\n    // }\r\n    if (s.getDay() === e.getDay() && s.getDate() === e.getDate()) {\r\n        adjust = 0;\r\n    } else if (s.getDay() === 0 && e.getDay() === 6) {\r\n        adjust = 5;\r\n    } else if (s.getDay() === 6 && e.getDay() === 0) {\r\n        adjust = 0;\r\n    } else if (e.getDay() === 6 || e.getDay() === 0) {\r\n        adjust = 5 - s.getDay();\r\n    } else if (s.getDay() === 0 || s.getDay() === 6) {\r\n        adjust = e.getDay();\r\n    } else if (e.getDay() > s.getDay()) {\r\n        adjust = e.getDay() - s.getDay();\r\n    }\r\n    else if (s.getDay() === e.getDay()) {\r\n        adjust = 0;\r\n    } else {\r\n        adjust = 5 + e.getDay() - s.getDay();\r\n    }\r\n    return (weeksBetween * 5) + adjust;\r\n}\r\nexport default WorkingDays;\r\n  // calculateWorkingDays(startDate, endDate) {\r\n    //     if (startDate < endDate) {\r\n    //         var s = startDate;\r\n    //         var e = endDate;\r\n    //     } else {\r\n    //         var s = endDate;\r\n    //         var e = startDate;\r\n    //     }\r\n    //     var diffDays = Math.floor((e - s) / 86400000);\r\n    //     var weeksBetween = Math.floor(diffDays / 7);\r\n    //     if (s.getDay() == e.getDay()) {\r\n    //         var adjust = 0;\r\n    //     } else if (s.getDay() == 0 && e.getDay() == 6) {\r\n    //         var adjust = 5;\r\n    //     } else if (s.getDay() == 6 && e.getDay() == 0) {\r\n    //         var adjust = 0;\r\n    //     } else if (e.getDay() == 6 || e.getDay() == 0) {\r\n    //         var adjust = 5 - s.getDay();\r\n    //     } else if (s.getDay() == 0 || s.getDay() == 6) {\r\n    //         var adjust = e.getDay();\r\n    //     } else if (e.getDay() > s.getDay()) {\r\n    //         var adjust = e.getDay() - s.getDay();\r\n    //     } else {\r\n    //         var adjust = 5 + e.getDay() - s.getDay();\r\n    //     }\r\n    //     return (weeksBetween * 5) + adjust;\r\n    // }\r\n//Jismi \r\n    // calculateWorkingDays(today, date, newtats) {\r\n    //     console.log(today,\"today\")\r\n    //     console.log(date,\"last date\")\r\n    //     var weekendDays = 0, weekDays = 0;\r\n    //     var dayMilliseconds = 1000 * 60 * 60 * 24;\r\n    //     while (today <= date) {\r\n    //         var day = today.getDay();\r\n    //         if (day == 0 || day == 6) {\r\n    //             weekendDays++;\r\n    //         } else {\r\n    //             weekDays++;\r\n    //         }\r\n\r\n    //         today = new Date(+today + dayMilliseconds);\r\n    //     }\r\n    //     console.log(weekDays, \"eeek dayyyyfghjnm\")\r\n    //     if (newtats === \"newtat\") {\r\n    //         this.setState({ newtat: weekDays })\r\n    //     }\r\n    //     else {\r\n    //         this.setState({ tat: weekDays })\r\n    //     }\r\n    // }","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/Color.css';\r\nclass Tat extends Component {\r\n    static propTypes = {\r\n        value: PropTypes.string.isRequired,\r\n        index: PropTypes.number.isRequired,\r\n        change: PropTypes.func.isRequired\r\n    };\r\n    render() {\r\n        const { value, index, change } = this.props;\r\n        const colors = {\r\n            \"red\": \"red\",\r\n            \"black\": \"black\",\r\n            \"white\": \"white\"\r\n        }\r\n        var x = +\"'\" + value + \"'\";\r\n        let backgroundColor = \"\";\r\n        let color = colors.black;\r\n        let text = \"\";\r\n        if (x.includes(\"+\")) {\r\n            backgroundColor = colors.red;\r\n            color = colors.white;\r\n            text = value\r\n        }\r\n        else if (x === undefined) {\r\n            backgroundColor = colors.white;\r\n            text = \"\"\r\n        }\r\n        else {\r\n            backgroundColor = \"\";\r\n            color = colors.black;\r\n            text = value\r\n        }\r\n        return (\r\n            <p className=\"cellColor\"\r\n                value={value}\r\n                onChange={event => change(event.target.value, index)}\r\n                style={{\r\n                    backgroundColor: backgroundColor, color: color,\r\n                    // textAlign: 'center',\r\n                    fontWeight: \"bold\"\r\n                }}>{text}</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tat;","import React, { Component } from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport '../styles/Issue.css';\r\nimport { Modal } from 'react-bootstrap';\r\nimport Color from '../components/Color.js';\r\nimport { getAllIssues, updateIssue, getUpdatedRecord, trasferTicket, getAllUsers, replyMail } from '../actions/index';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport WorkingDays from './WorkingDays';\r\nimport Tat from './Tat';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nconst columns = [\r\n    {\r\n        name: \"CREATED_DATE\",\r\n        label: \"Created Date & Time\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n    {\r\n        name: \"TICKET_NO\",\r\n        label: \"Ticket No.\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n    {\r\n        name: \"NAME\",\r\n        label: \"Issue Raised By\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    }, {\r\n        name: \"ISSUE_TYPE\",\r\n        label: \"Category\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n    {\r\n        name: \"SECTION\",\r\n        label: \"Portals & Dashboard\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n    {\r\n        name: \"TICKET_TYPE\",\r\n        label: \"Ticket Type\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n    // {\r\n    //     name: \"OWNER\",\r\n    //     label: \"SME\",\r\n    //     options: {\r\n    //         filter: true,\r\n    //         sort: true,\r\n    //     }\r\n    // },\r\n    {\r\n        name: \"CLOSE_DATE\",\r\n        label: \"Planned Closure Date\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n    {\r\n        name: \"TAT\",\r\n        label: \"TAT\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n            customBodyRender: (value, tableMeta, updateValue) => {\r\n                return (\r\n                    <Tat\r\n                        value={value}\r\n                        index={tableMeta.rowIndex}\r\n                        change={event => updateValue(event)}\r\n                    />\r\n                )\r\n            }\r\n        }\r\n    },\r\n    {\r\n        name: \"STATUS\",\r\n        label: \"Status\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n            customBodyRender: (value, tableMeta, updateValue) => {\r\n                return (\r\n                    <Color\r\n                        value={value}\r\n                        index={tableMeta.columnIndex}\r\n                        change={event => updateValue(event)}\r\n                    />\r\n                )\r\n            }\r\n        }\r\n    },\r\n]\r\nclass Allincidents extends Component {\r\n    state = {\r\n        buttons: false,\r\n        data: \"\",\r\n        show: false,\r\n        preventionplan: \"\",\r\n        action: \"\",\r\n        date: \"\",\r\n        status: \"\",\r\n        issueimpact: '',\r\n        ownership: '',\r\n        owner: '',\r\n        response: false,\r\n        view_response: false,\r\n        issueList: [],\r\n        name: \"\",\r\n        createdDate: '',\r\n        description: '',\r\n        practitioner: '',\r\n        recordId: \"\",\r\n        radio: \"\",\r\n        issuetype: '',\r\n        ccomments: false,\r\n        category: \"\",\r\n        tat: '',\r\n        spinnerFlag: false,\r\n        flag: false,\r\n        message: '',\r\n        newdate: \"\",\r\n        newtat: \"\",\r\n        responseflag: false,\r\n        btnval: \"\",\r\n        userResponse: \"\",\r\n        close_tat: \"\",\r\n        close_date: '',\r\n        title: \"\",\r\n        ticketStatus: \"\",\r\n        internalComments: \"\",\r\n        transferTo: '',\r\n        justification: \"\",\r\n        userList: '',\r\n        person: false,\r\n        issueTagging: '',\r\n        resDate: '',\r\n        ticketType: \"\",\r\n        wipCount: 0,\r\n        openCount: 0,\r\n        closedCount: 0\r\n    }\r\n    UNSAFE_componentWillMount() {\r\n        this.setState({ ownership: this.props.user_details.userEmail, spinnerFlag: true })\r\n        if (this.props.user_details.role === 'Super Admin') {\r\n            this.props.actions.getAllIssues({ \"email\": this.props.user_details.userEmail, \"role\": this.props.user_details.role, \"data\": \"getall\" });\r\n            this.setState({ title: \"All Ticket Logs\" })\r\n        }\r\n        else if (this.props.user_details.role === 'Super User') {\r\n            this.props.actions.getAllIssues({ \"email\": this.props.user_details.userEmail, \"role\": this.props.user_details.role, \"data\": \"superuserissue\", category: this.props.user_details.details[0]['ISSUE_TYPE'] });\r\n            this.setState({ title: \"All Ticket Logs\" })\r\n        }\r\n        else {\r\n            this.props.actions.getAllIssues({ \"email\": this.props.user_details.userEmail, \"role\": this.props.user_details.role, \"data\": \"allissues\", category: this.props.user_details.section });\r\n            this.setState({ title: \"My Queue\" })\r\n            this.props.actions.getAllUsers()\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.allIssues !== this.props.allIssues) {\r\n            if (this.props.allIssues && this.props.allIssues.length !== 0) {\r\n                // this.props.allIssues.sort(this.sortBy(\"CREATED_DATE\"));\r\n                this.props.allIssues.sort(function (a, b) {\r\n                    var adt = new Date((b.CREATED_DATE).substring(6, 10) + \"-\" + (b.CREATED_DATE).substring(3, 6) + (b.CREATED_DATE).substring(0, 2) + \" \" + (b.CREATED_DATE).substring(11, 17))\r\n                    var bdt = new Date((a.CREATED_DATE).substring(6, 10) + \"-\" + (a.CREATED_DATE).substring(3, 6) + (a.CREATED_DATE).substring(0, 2) + \" \" + (a.CREATED_DATE).substring(11, 17))\r\n                    return adt - bdt;\r\n                });\r\n                var today = new Date()\r\n                var wipCount = 0, closedCount = 0, openCount = 0;\r\n                this.props.allIssues && this.props.allIssues.forEach((opt) => {\r\n                    if (opt.STATUS === \"Closed\") {\r\n                        closedCount = closedCount + 1;\r\n                    }\r\n                    if (opt.TAT) {\r\n                        // var ddt = (opt.CLOSE_DATE).substring(3, 6) + (opt.CLOSE_DATE).substring(0, 3) + (opt.CLOSE_DATE).substring(6)\r\n                        var ddt = (opt.CLOSE_DATE).substring(6, 10) + \"-\" + (opt.CLOSE_DATE).substring(3, 6) + (opt.CLOSE_DATE).substring(0, 2)//year-month-date\r\n                        var cdt = new Date(ddt)\r\n                        if (opt.STATUS === \"Closed\") {\r\n                            // closedCount = closedCount + 1;\r\n                            Object.assign(opt, { \"TAT\": opt.TAT })\r\n                        }\r\n                        else {\r\n                            if (opt.STATUS === \"Open\") {\r\n                                openCount = openCount + 1\r\n                            }\r\n                            else if (opt.STATUS === \"WIP\") {\r\n                                wipCount = wipCount + 1\r\n                            }\r\n                            var tatdate = WorkingDays(today, cdt)\r\n                            if (today > cdt) {\r\n                                tatdate = \"+\" + tatdate\r\n                            }\r\n                            else {\r\n                                return tatdate\r\n                            }\r\n                            Object.assign(opt, { \"TAT\": tatdate })\r\n                        }\r\n                    }\r\n                })\r\n                this.setState({ issueList: this.props.allIssues, responseflag: true, spinnerFlag: false, wipCount: wipCount, openCount: openCount, closedCount: closedCount })\r\n            }\r\n            else {\r\n                this.setState({ issueList: [], responseflag: true, spinnerFlag: false })\r\n            }\r\n        }\r\n        if (prevProps.updateRecord !== this.props.updateRecord) {\r\n            if (this.props.updateRecord && this.props.updateRecord.length !== 0) {\r\n                for (var i = 0; i < this.props.updateRecord.length; i++) {\r\n                    this.setState({ close_date: this.props.updateRecord[0].CLOSE_DATE, close_tat: this.props.updateRecord[0].TAT, ticketStatus: this.props.updateRecord[0].STATUS, resDate: this.props.updateRecord[this.props.updateRecord.length - 1].RESPONSE_DATE })\r\n                }\r\n                this.setState({ flag: true })\r\n            }\r\n            else if (this.props.updateRecord && this.props.updateRecord.length === 0) {\r\n                this.setState({ flag: true, message: \"No Response\" })\r\n            }\r\n        }\r\n        if (prevProps.allUsers !== this.props.allUsers) {\r\n            var arr = [];\r\n            this.props.allUsers && this.props.allUsers.forEach((opt) => {\r\n                if (opt.ROLE === \"SME\") {\r\n                    arr.push(opt)\r\n                }\r\n            })\r\n            this.setState({ userList: arr })\r\n        }\r\n    }\r\n    sortBy(prop) {\r\n        return function (a, b) {\r\n            if (a[prop] < b[prop]) {\r\n                return 1;\r\n            } else if (a[prop] > b[prop]) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }\r\n    }\r\n    handleClose = () => {\r\n        this.setState({ show: false, response: false, buttons: false, flag: false })\r\n        this.handleReset()\r\n    }\r\n    handleReset() {\r\n        this.setState({\r\n            buttons: false,\r\n            data: \"\",\r\n            show: false,\r\n            preventionplan: \"\",\r\n            action: \"\",\r\n            date: \"\",\r\n            status: \"\",\r\n            issueimpact: '',\r\n            ownership: '',\r\n            owner: '',\r\n            response: false,\r\n            view_response: false,\r\n            name: \"\",\r\n            createdDate: '',\r\n            description: '',\r\n            practitioner: '',\r\n            recordId: \"\",\r\n            radio: \"\",\r\n            issuetype: '',\r\n            ccomments: false,\r\n            category: \"\",\r\n            tat: '',\r\n            flag: false,\r\n            message: '',\r\n            newdate: \"\",\r\n            newtat: \"\",\r\n            btnval: \"\",\r\n            userResponse: \"\",\r\n            ticketStatus: \"\",\r\n            internalComments: \"\",\r\n            issueTagging: '',\r\n            transferTo: '',\r\n            justification: \"\",\r\n            spinnerFlag: false,\r\n            userList: '',\r\n            person: false,\r\n            ticketType: '',\r\n\r\n        })\r\n    }\r\n    error = () => {\r\n        setTimeout(() => {\r\n            this.setState({ err: false, error: '' })\r\n        }, 3500);\r\n    }\r\n    handleSend = (status, btnval) => {\r\n        if (btnval === \"reply\") {\r\n            this.setState({ btnval: \"reply\" })\r\n            if (this.state.ticketStatus === \"\") {\r\n                if (this.state.userResponse === '' || this.state.date === \"\") {\r\n                    this.setState({ error: \"Please Fill All Fields\", err: true, iconColor: \"text-danger\" });\r\n                    this.error()\r\n                }\r\n                else {\r\n                    this.handleSubmit(status, btnval)\r\n                }\r\n            }\r\n            else {\r\n                if (this.state.userResponse === '') {\r\n                    this.setState({ error: \"Please Fill All Fields\", err: true, iconColor: \"text-danger\" });\r\n                    this.error()\r\n                }\r\n                else {\r\n                    this.handleSubmit(status, btnval)\r\n                }\r\n            }\r\n            // }\r\n        }\r\n        else if (btnval === \"reply&close\") {\r\n            if (this.state.ticketStatus === \"\") {\r\n                if (this.state.date === \"\" || this.state.newdate === \"\" || this.state.userResponse === '' || this.state.internalComments === \"\" || this.state.issueTagging === \"\") {\r\n                    this.setState({ error: \"Please Fill All Fields\", err: true, iconColor: \"text-danger\" });\r\n                    this.error()\r\n                }\r\n                else {\r\n                    this.handleSubmit(status, btnval)\r\n                }\r\n            }\r\n            else {\r\n                if (this.state.newdate === \"\" || this.state.userResponse === '' || this.state.internalComments === \"\" || this.state.issueTagging === \"\") {\r\n                    this.setState({ error: \"Please Fill All Fields\", err: true, iconColor: \"text-danger\" });\r\n                    this.error()\r\n                }\r\n                else {\r\n                    this.handleSubmit(status, btnval)\r\n                }\r\n            }\r\n            // }\r\n        }\r\n    }\r\n    handleSubmit = (status, btnval) => {\r\n        var finaldate;\r\n        if (btnval === \"reply&close\") {\r\n            if (this.state.ticketStatus === \"\") {\r\n                var dts = new Date()\r\n                var dat = dts.getDate();\r\n                if (dat <= 9) {\r\n                    dat = '0' + dat;\r\n                }\r\n                var months = dts.getMonth() + 1;\r\n                if (months <= 9) {\r\n                    months = '0' + months;\r\n                }\r\n                finaldate = dat + \"-\" + months + \"-\" + dts.getFullYear() + \" \" + dts.getHours() + \":\" + dts.getMinutes()\r\n            }\r\n            else {\r\n                finaldate = this.state.close_date\r\n            }\r\n            if (this.state.newdate !== \"\") {\r\n                var dt = new Date(this.state.newdate)\r\n                var date = dt.getDate();\r\n                if (date <= 9) {\r\n                    date = '0' + date;\r\n                }\r\n                var month = dt.getMonth() + 1;\r\n                if (month <= 9) {\r\n                    month = '0' + month;\r\n                }\r\n                var actualdt = date + \"-\" + month + \"-\" + dt.getFullYear() + \" \" + dt.getHours() + \":\" + dt.getMinutes()\r\n            }\r\n        }\r\n        else if (this.state.ticketStatus === \"Open\" || this.state.ticketStatus === \"WIP\") {\r\n            finaldate = this.state.close_date\r\n        }\r\n        else {\r\n            finaldate = this.state.date\r\n        }\r\n        var today = new Date();\r\n        var obj = {};\r\n        Object.assign(obj, {\r\n            recordId: this.state.recordId,\r\n            date: finaldate,\r\n            btnval: this.state.btnval,\r\n            //date: this.state.date,\r\n            preventionplan: this.state.preventionplan,\r\n            status: status,\r\n            ownership: this.props.user_details.userEmail,\r\n            issueimpact: this.state.issueimpact,\r\n            action: this.state.action,\r\n            current_date: today,\r\n            tat: this.state.tat,\r\n            newtat: this.state.newtat,\r\n            newdate: actualdt,\r\n            userResponse: this.state.userResponse.replace(/[,+()'\"*<>{}]/g, ' '),\r\n            ticketStatus: this.state.ticketStatus,\r\n            internalComments: this.state.internalComments.replace(/[,+()'\"*<>{}]/g, ' '),\r\n            issueTagging: this.state.issueTagging,\r\n            \"email\": this.props.user_details.userEmail, role: this.props.user_details.role, \"data\": \"allissues\",\r\n            update: \"sme\",\r\n            category: this.props.user_details.section,\r\n            stagename: this.props.user_details.stagename,\r\n            owner: this.state.name,\r\n            createdDate: this.state.createdDate,\r\n            sharedInfo: this.state.sharedInfo,\r\n            name: this.state.name,\r\n            issuetype: this.state.issuetype,\r\n            severity: this.state.severity,\r\n            section: this.state.section,\r\n            practitioner: this.state.practitioner,\r\n            loggedinUser: this.props.user_details.username,\r\n            loggedinEmail: this.props.user_details.userEmail,\r\n        })\r\n        this.setState({ spinnerFlag: true })\r\n        this.props.actions.updateIssue(obj);\r\n        setTimeout(() => {\r\n            if (this.props.updateResult && this.props.updateResult.status === 200 && this.props.updateResult.data.message === \"Update response\") {\r\n                this.setState({ error: \"You have responded to the incident successfully\", err: true, iconColor: \"text-success\", spinnerFlag: false });\r\n                this.error();\r\n                this.props.actions.replyMail(obj)\r\n                this.Reset();\r\n            }\r\n            else {\r\n                this.setState({ show: true, err: true, error: \"Something Went wrong\", iconColor: \"text-danger\", spinnerFlag: false })\r\n                this.error();\r\n            }\r\n        }, 7000)\r\n    }\r\n    Reset = () => {\r\n        setTimeout(() => {\r\n            this.handleReset()\r\n        }, 1000)\r\n    }\r\n    handleDateChangeDate = (e) => {\r\n        var today = new Date()\r\n        var tat = WorkingDays(today, new Date(e))\r\n        this.setState({ date: e, tat: tat })\r\n    }\r\n    handleChangeTATDate = (e, btnval, createDt, status) => {\r\n        var ddt;\r\n        var cdt;\r\n        if (status !== \"\") {\r\n            ddt = createDt.substring(6, 10) + \"-\" + createDt.substring(3, 6) + createDt.substring(0, 2)\r\n            cdt = new Date(ddt)\r\n        }\r\n        else {\r\n            cdt = createDt\r\n        }\r\n        var tat = WorkingDays(cdt, new Date(e))\r\n        this.setState({ newdate: e, newtat: tat })\r\n    }\r\n    handleTransfer = (btnval) => {\r\n        if (this.state.transferTo === \"\" || this.state.justification === \"\") {\r\n            this.setState({ error: \"Please Fill All Fields\", err: true, iconColor: \"text-danger\" });\r\n            this.error()\r\n        }\r\n        else if (!this.state.transferTo.includes(\"@\")) {\r\n            this.setState({ error: \"Please Enter Valid Email\", err: true, iconColor: \"text-danger\" });\r\n            this.error()\r\n        }\r\n        else if (!this.state.transferTo.includes(\".ibm.com\")) {\r\n            this.setState({ error: \"Email contain .ibm.com\", err: true, iconColor: \"text-danger\" });\r\n            this.error()\r\n        }\r\n        else {\r\n            var obj = {};\r\n            Object.assign(obj, {\r\n                recordId: this.state.recordId,\r\n                transferTo: this.state.transferTo,\r\n                justification: this.state.justification,\r\n                btnval: btnval,\r\n                \"email\": this.props.user_details.userEmail,\r\n                role: this.props.user_details.role,\r\n                \"data\": \"allissues\",\r\n                category: this.props.user_details.section,\r\n                loggedinUser: this.props.user_details.username\r\n            })\r\n            this.setState({ spinnerFlag: true })\r\n            this.props.actions.trasferTicket(obj)\r\n            setTimeout(() => {\r\n                if (this.props.transferTicket.status === 200) {\r\n                    this.setState({ error: \"You have transfered ticket successfully\", err: true, iconColor: \"text-success\", spinnerFlag: false });\r\n                    this.error();\r\n                    this.Reset();\r\n                }\r\n                else {\r\n                    this.setState({ show: false, err: true, error: \"Something Went wrong\", iconColor: \"text-danger\", spinnerFlag: false })\r\n                    this.error();\r\n                }\r\n            }, 7000)\r\n        }\r\n    }\r\n    handlePerson = (e) => {\r\n        this.setState({ transferTo: e.target.value })\r\n        var val = e.target.value\r\n        if (val === \"Others\") {\r\n            this.setState({ person: true })\r\n        }\r\n    }\r\n    render() {\r\n        // console.log(this.props, \"hello\")\r\n        // console.log(this.state)\r\n        const options = {\r\n            responsive: \"scrollMaxHeight\",\r\n            selectableRows: false,\r\n            onRowClick: (_, { dataIndex }) => {\r\n                var selected_data = this.state.issueList[dataIndex]\r\n                this.props.actions.getUpdatedRecord({ \"ticket\": selected_data.TICKET_NO })\r\n                this.props.actions.getAllUsers();\r\n                this.setState({\r\n                    show: true,\r\n                    name: selected_data.NAME,\r\n                    practitioner: selected_data.PRACTIONER,\r\n                    createdDate: selected_data.CREATED_DATE,\r\n                    description: selected_data.DESCRIPTION,\r\n                    recordId: selected_data.TICKET_NO,\r\n                    severity: selected_data.SEVERITY,\r\n                    issuetype: selected_data.ISSUE_TYPE,\r\n                    category: selected_data.CATEGORY,\r\n                    section: selected_data.SECTION,\r\n                    tat: selected_data.TAT,\r\n                    sharedInfo: selected_data.SHARED_TICKET,\r\n                    ticketType: selected_data.TICKET_TYPE,\r\n                    owner: selected_data.OWNER\r\n                })\r\n            },\r\n            textLabels: {\r\n                body: {\r\n                    noMatch: \"Sorry, no matching records found\",\r\n                    toolTip: \"Sort\",\r\n                    columnHeaderTooltip: column => `Sort for ${column.label}`\r\n                },\r\n                pagination: {\r\n                    next: \"Next Page\",\r\n                    previous: \"Previous Page\",\r\n                    rowsPerPage: \"Rows per page:\",\r\n                    displayRows: \"of\",\r\n                },\r\n                toolbar: {\r\n                    search: \"Search\",\r\n                    downloadCsv: \"Download CSV\",\r\n                    print: \"Print\",\r\n                    viewColumns: \"View Columns\",\r\n                    filterTable: \"Filter Table\",\r\n                },\r\n                filter: {\r\n                    all: \"All\",\r\n                    title: \"FILTERS\",\r\n                    reset: \"RESET\",\r\n                },\r\n                viewColumns: {\r\n                    title: \"Show Columns\",\r\n                    titleAria: \"Show/Hide Table Columns\",\r\n                },\r\n                selectedRows: {\r\n                    text: \"row(s) selected\",\r\n                    delete: \"Delete\",\r\n                    deleteAria: \"Delete Selected Rows\",\r\n                },\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"container-fluid Table\">\r\n                {/* {this.state.issueList && this.state.issueList.length !== 0 && */}\r\n                <div className=\"row rowClass\">\r\n                    <div className=\"col-sm-2 col-md-2 colText\">Total Records : {this.state.issueList && this.state.issueList.length > 0 ? this.state.issueList.length : 0}</div>\r\n                    <div className=\" col-sm-2 col-md-2 text-new colText\" >New : {this.state.issueList && this.state.issueList.length > 0 ? parseInt(this.state.issueList.length) - (parseInt(this.state.openCount) + parseInt(this.state.wipCount) + parseInt(this.state.closedCount)) : 0}\r\n                    </div>\r\n                    <div className=\" col-sm-2 col-md-2 text-open colText\">Open : {this.state.issueList && this.state.issueList.length > 0 ? this.state.openCount : 0}\r\n                    </div>\r\n                    <div className=\" col-sm-2 col-md-2 text-wip colText\">WIP : {this.state.issueList && this.state.issueList.length > 0 ? this.state.wipCount : 0}\r\n                    </div>\r\n                    <div className=\" col-sm-2 col-md-2 text-closed colText \">Closed : {this.state.issueList && this.state.issueList.length > 0 ? this.state.closedCount : 0}\r\n                    </div>\r\n                </div>\r\n                {/* } */}\r\n                { this.state.spinnerFlag === false && this.state.responseflag === true ?\r\n                    <MUIDataTable\r\n                        title={this.state.title}\r\n                        data={this.state.issueList}\r\n                        columns={columns}\r\n                        options={options}\r\n                    />\r\n                    :\r\n                    <div className=\"text-center\">\r\n                        <div className=\"spinner-border\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </div>}\r\n                <Modal show={this.state.show} onHide={e => this.handleClose()} dialogClassName=\"modal-record\" size=\"lg\">\r\n                    <Modal.Header style={{ borderBottom: '5px #0c5bac solid', color: '#0c5bac' }} closeButton>\r\n                        <Modal.Title className=\"modal-title\"><span>Created Date & Time: {this.state.createdDate}</span><span className=\"modal-secondtit\">Ticket No : {this.state.recordId}</span></Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body className='modal_body'>\r\n                        <div className=\"card-body cardbody\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-6 col-md-6\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6 col-md-3 pb-2 pt-2\">\r\n                                            <label><strong>Issue Raised By</strong></label></div>\r\n                                        <div className=\"col-sm-6 col-md-8\">\r\n                                            <input\r\n                                                readOnly\r\n                                                className=\"form-control\"\r\n                                                value={this.state.name}\r\n                                                type=\"text\"></input>\r\n                                        </div>\r\n                                    </div>\r\n                                    {(this.state.name !== this.state.practitioner) &&\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 col-md-3 pb-2 pt-2\">\r\n                                                <label><strong>Issue Raised For</strong></label></div>\r\n                                            <div className=\"col-sm-6 col-md-8\">\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    value={this.state.practitioner}\r\n                                                    readOnly\r\n                                                    type=\"text\"></input>\r\n                                            </div>\r\n                                        </div>}\r\n                                    {this.state.sharedInfo !== \"\" &&\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 col-md-3 pb-2 pt-2\">\r\n                                                <label><strong>Share Ticket Info</strong></label>\r\n                                            </div>\r\n                                            <div className=\"col-sm-6 col-md-8\">\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    readOnly\r\n                                                    value={this.state.sharedInfo}>\r\n                                                </input>\r\n                                            </div>\r\n                                        </div>}\r\n                                    <div className=\"row\">\r\n                                        {this.state.name !== this.state.practitioner ?\r\n                                            <div className=\"col-sm-6 col-md-3 pb-2 pt-2\">\r\n                                                <label><strong>Priority Category</strong></label>\r\n                                            </div> :\r\n                                            <div className=\"col-sm-6 col-md-3 pb-2 pt-2\">\r\n                                                <label><strong>Impact Category</strong></label>\r\n                                            </div>\r\n                                        }\r\n                                        <div className=\"col-sm-6 col-md-8\">\r\n                                            <input\r\n                                                className=\"form-control\"\r\n                                                value={this.state.severity} readOnly>\r\n                                            </input>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-6 col-md-6\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6 col-md-3\">\r\n                                            <label className=\"pt-2 pl-3\"><strong>Category</strong></label>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6 col-md-8\">\r\n                                            <input className=\"form-control mb-2\" value={this.state.issuetype} readOnly>\r\n                                            </input>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6 col-md-3\">\r\n                                            <label className=\"pt-2 pl-3\"><strong>Portals & Dashboard</strong></label>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6 col-md-8\">\r\n                                            <input className=\"form-control mb-2\" value={this.state.section} readOnly>\r\n                                            </input>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6 col-md-3\">\r\n                                            <label className=\"pt-2 pl-3\"><strong>Ticket Type</strong></label>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6 col-md-8\">\r\n                                            <input className=\"form-control mb-2\" value={this.state.ticketType} readOnly>\r\n                                            </input>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mt-2\">\r\n                                <div className=\"col-sm-12 col-md-12\">\r\n                                    <label><strong>Description Of The Issue</strong></label>\r\n                                    <textarea\r\n                                        className=\"form-control\"\r\n                                        value={this.state.description}\r\n                                        readOnly\r\n                                        type=\"text\"\r\n                                        rows=\"6\"></textarea>\r\n                                </div></div>\r\n                        </div>\r\n                        <h6 className=\"text-center m-3\">TICKET TRAIL</h6>\r\n                        {/* Displaying accordions when issue is open */}\r\n                        {(this.props.updateRecord && this.props.updateRecord.length !== 0 && this.state.flag === true) &&\r\n                            <div>\r\n                                <div className=\"row rowheader\">\r\n                                    <div className=\"col-sm col-md tableheader text-center\">Responded Date & Time</div>\r\n                                    <div className=\"col-sm col-md tableheader text-center\">Stage Name</div>\r\n                                    <div className=\"col-sm col-md tableheader text-center\">Status</div>\r\n                                </div>\r\n                                <div id=\"accordion\">\r\n                                    {this.props.updateRecord.length !== 0 && this.props.updateRecord.map((opt, index) => {\r\n                                        var collapasehref = \"#collapse-\" + index;\r\n                                        var collapaseid = \"collapse-\" + index;\r\n                                        return (\r\n                                            <div className=\"card issue-accordion\" key={opt.RESPONSE_DATE}>\r\n                                                <div className=\"card-header\" id=\"heading-1\" data-toggle=\"collapse\" data-target={collapasehref} aria-expanded=\"true\" aria-controls={collapaseid}>\r\n                                                    <div className=\"row cardhead\">\r\n                                                        <div className=\"col-sm col-md text-center\">{opt.RESPONSE_DATE}</div>\r\n                                                        <div className=\"col-sm col-md text-center\">{opt.STAGE_NAME} </div>\r\n                                                        <div className=\"col-sm col-md text-center\"><span style={{ color: (opt.STATUS === \"Open\") ? \"#FF8533\" : (opt.STATUS === \"Closed\") ? \"green\" : (opt.STATUS === \"New\") ? \"#D74D4D\" : (opt.STATUS === \"WIP\") ? \"#004D99\" : 'white' }}>{opt.STATUS}</span> </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div id={collapaseid} className=\"collapse\" data-parent=\"#accordion\" aria-labelledby=\"heading-1\">\r\n                                                    <div id=\"accordion-1\">\r\n                                                        <div className=\"card-body  table-responsive\" id=\"heading-1-1\">\r\n                                                            <div className=\"row mt-4\">\r\n                                                                {opt.STAGE_NAME !== \"User\" ? <div className=\"col-sm-5 col-md-6\">\r\n                                                                    <div className=\"col-sm-5 col-md-12\">\r\n                                                                        <label><strong>Response </strong></label>\r\n                                                                        <textarea className=\"form-control\"\r\n                                                                            value={opt.RESPONSE}\r\n                                                                            readOnly\r\n                                                                            type=\"text\"\r\n                                                                            rows=\"6\"></textarea>\r\n                                                                    </div>\r\n                                                                </div> :\r\n                                                                    <div className=\"col-sm-5 col-md-6\">\r\n                                                                        <label><strong>Response </strong></label>\r\n                                                                        <textarea className=\"form-control\"\r\n                                                                            value={opt.RESPONSE}\r\n                                                                            readOnly\r\n                                                                            type=\"text\"\r\n                                                                            rows=\"6\"></textarea>\r\n                                                                    </div>}\r\n\r\n                                                                <div className=\"col-sm-5 col-md-5\">\r\n                                                                    <div className=\"row mb-2\">\r\n                                                                        <div className=\"col-sm-6 col-md-5 mt-2\">\r\n                                                                            <label><strong>Planned Closure Date</strong></label>\r\n                                                                        </div>\r\n                                                                        <div className=\"col-sm-6 col-md-7\">\r\n                                                                            <input className=\"form-control mb-2\" value={opt.CLOSE_DATE.split(\" \", 1)}\r\n                                                                                readOnly\r\n                                                                                type=\"text\"></input>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className=\"row mb-2\">\r\n                                                                        <div className=\"col-sm-6 col-md-5 mt-2\">\r\n                                                                            <label><strong>Planned TAT</strong></label>\r\n                                                                        </div>\r\n                                                                        <div className=\"col-sm-6 col-md-7\">\r\n                                                                            <input className=\"form-control mb-2\" value={opt.TAT}\r\n                                                                                readOnly\r\n                                                                                type=\"text\"></input>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    {(opt.ACTUAL_CLOSE_DATE !== \"undefined\" && opt.ACTUAL_CLOSE_DATE !== null) &&\r\n                                                                        <div>\r\n                                                                            <div className=\"row mb-2\">\r\n                                                                                <div className=\"col-sm-6 col-md-5 mt-2\">\r\n                                                                                    <label><strong>Actual Closure Date</strong></label>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-sm-6 col-md-7\">\r\n                                                                                    <input className=\"form-control mb-2\" value={opt.ACTUAL_CLOSE_DATE}\r\n                                                                                        readOnly\r\n                                                                                        type=\"text\"></input>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row mb-2\">\r\n                                                                                <div className=\"col-sm-6 col-md-5 mt-2\">\r\n                                                                                    <label><strong>Actual TAT</strong></label>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-sm-6 col-md-7\">\r\n                                                                                    <input className=\"form-control mb-2\" value={opt.ACTUAL_TAT}\r\n                                                                                        readOnly\r\n                                                                                        type=\"text\"></input>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        {this.state.flag === false &&\r\n                            <div className=\"text-center\">\r\n                                <div className=\"spinner-border\" role=\"status\">\r\n                                    <span className=\"sr-only\">Loading...</span>\r\n                                </div>\r\n                            </div>}\r\n                        {(this.props.updateRecord && this.props.updateRecord.length === 0 && this.state.flag === true && this.state.response === false) &&\r\n                            <h6 className=\"text-center\">{this.state.message}</h6>}\r\n                        {this.state.buttons === false && this.props.user_details && this.props.user_details.role === \"SME\" &&\r\n                            <div className=\"buttons-submit\">\r\n                                {this.state.ticketStatus !== \"Closed\" && this.props.updateRecord &&\r\n\r\n                                    <button className=\"btn m-3 issue-btu\" onClick={e => this.setState({ buttons: true })}>Action\r\n                                    </button>\r\n                                }\r\n                            </div>\r\n                        }\r\n\r\n                        {(this.state.buttons === true && this.state.response === false) &&\r\n                            <div className=\"buttons-submit\">\r\n                                <button className=\"btn m-3 issue-btu\" onClick={e => this.setState({ response: true, btnval: \"transfer\" })}>Transfer</button>\r\n                                <button className=\"btn m-3 issue-btu\" onClick={e => this.setState({ response: true, btnval: \"reply\" })}>Reply</button>\r\n                                <button className=\"btn m-3 issue-btu\" onClick={e => this.setState({ response: true, btnval: \"reply&close\" })}>Reply & Close</button><br />\r\n                            </div>\r\n                        }\r\n                        {/* For tech-user response to issue */}\r\n                        {(this.props.user_details && this.props.user_details.role === \"SME\" && this.state.response === true && this.state.btnval !== \"transfer\") &&\r\n                            <div >\r\n                                <div className=\"row mt-4\">\r\n                                    <div className=\"col-sm-5 col-md-6\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-12\">\r\n                                                <label><strong>Response </strong></label>\r\n                                                <textarea className=\"form-control mb-2\"\r\n                                                    value={this.state.userResponse}\r\n                                                    onChange={e => this.setState({ userResponse: e.target.value })}\r\n                                                    type=\"text\"\r\n                                                    rows=\"6\"></textarea>\r\n                                            </div>\r\n                                        </div>\r\n                                        {this.state.btnval === \"reply&close\" &&\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-5 col-md-12\">\r\n                                                    <label><strong>Internal Comments</strong></label>\r\n                                                    <textarea className=\"form-control mb-2\"\r\n                                                        value={this.state.internalComments}\r\n                                                        onChange={e => this.setState({ internalComments: e.target.value })}\r\n                                                        type=\"text\"\r\n                                                        rows=\"6\"></textarea>\r\n                                                </div>\r\n                                            </div>}\r\n                                    </div>\r\n                                    <div className=\"col-sm-5 col-md-5\">\r\n                                        {(this.state.btnval === \"reply\" && (this.state.ticketStatus === \"Open\" || this.state.ticketStatus === \"WIP\")) ?\r\n                                            <div>\r\n                                                <div className=\"row mb-2\">\r\n                                                    <div className=\"col-sm-6 col-md-5\">\r\n                                                        <label className=\"pt-2\"><strong>Planned Closure Date</strong></label>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6 col-md-7\">\r\n                                                        <input\r\n                                                            value={this.state.close_date.split(\" \", 1)}\r\n                                                            className=\"form-control\"\r\n                                                            readOnly></input>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row mb-2\">\r\n                                                    <div className=\"col-sm-6 col-md-5\">\r\n                                                        <label className=\"pt-2\"><strong>Planned TAT</strong></label>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6 col-md-7\">\r\n                                                        <input\r\n                                                            value={this.state.close_tat}\r\n                                                            readOnly\r\n                                                            className=\"form-control\"></input>\r\n                                                    </div> </div>\r\n                                            </div>\r\n                                            : <div>\r\n                                                {this.state.btnval === \"reply\" &&\r\n                                                    <div>\r\n                                                        <div className=\"row mb-2\">\r\n                                                            <div className=\"col-sm-6 col-md-5\">\r\n                                                                <label className=\"pt-2\"><strong>Planned Closure Date</strong></label>\r\n                                                            </div>\r\n                                                            <div className=\"col-sm-6 col-md-7\">\r\n                                                                <TextField\r\n                                                                    id=\"date\"\r\n                                                                    type=\"date\"\r\n                                                                    className=\"form-control date-field\"\r\n                                                                    value={this.state.date}\r\n                                                                    onChange={e => this.handleDateChangeDate(e.target.value)}\r\n                                                                    inputProps={{ min: new Date().toISOString().slice(0, 10) }}\r\n                                                                    InputLabelProps={{\r\n                                                                        shrink: true,\r\n                                                                    }}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"row mb-2\">\r\n                                                            <div className=\"col-sm-6 col-md-5\">\r\n                                                                <label className=\"pt-2\"><strong>Planned TAT</strong></label>\r\n                                                            </div>\r\n                                                            <div className=\"col-sm-6 col-md-7\">\r\n                                                                <input\r\n                                                                    value={this.state.tat}\r\n                                                                    readOnly\r\n                                                                    className=\"form-control\"></input>\r\n                                                            </div> </div>\r\n                                                    </div>}\r\n                                            </div>}\r\n                                        {this.state.btnval === \"reply&close\" && this.state.ticketStatus !== \"\" &&\r\n                                            <div>\r\n                                                <div className=\"row mb-2\">\r\n                                                    <div className=\"col-sm-6 col-md-5\">\r\n                                                        <label className=\"pt-3\"><strong>Planned Closure Date</strong></label>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6 col-md-7\">\r\n                                                        <input\r\n                                                            value={this.state.close_date.split(\" \", 1)}\r\n                                                            className=\"form-control\"\r\n                                                            readOnly></input>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row mb-2\">\r\n                                                    <div className=\"col-sm-6 col-md-5\">\r\n                                                        <label className=\"pt-3\"><strong>Planned TAT</strong></label>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6 col-md-7\">\r\n                                                        <input\r\n                                                            value={this.state.close_tat}\r\n                                                            readOnly\r\n                                                            className=\"form-control\"></input>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row mb-2\">\r\n                                                    <div className=\"col-sm-6 col-md-5\">\r\n                                                        <label className=\"pt-3\"><strong>Actual Closure Date</strong></label>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6 col-md-7\">\r\n                                                        <TextField\r\n                                                            id=\"date-actual-close\"\r\n                                                            type=\"date\"\r\n                                                            className=\"form-control date-field\"\r\n                                                            value={this.state.newdate}\r\n                                                            onChange={e => this.handleChangeTATDate(e.target.value, this.state.btnval, this.state.resDate, this.state.ticketStatus)}\r\n                                                            inputProps={{ min: new Date().toISOString().slice(0, 10) }}\r\n                                                            InputLabelProps={{\r\n                                                                shrink: true,\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row mb-2\">\r\n                                                    <div className=\"col-sm-6 col-md-5\">\r\n                                                        <label className=\"pt-3\"><strong>Actual TAT</strong></label>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6 col-md-7\">\r\n                                                        <input\r\n                                                            value={this.state.newtat}\r\n                                                            readOnly\r\n                                                            className=\"form-control\"></input>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row mb-2\">\r\n                                                    <div className=\"col-sm-6 col-md-5\">\r\n                                                        <label className=\"pt-3\"><strong>Issue Tagging</strong></label>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6 col-md-7\">\r\n                                                        <select\r\n                                                            value={this.state.issueTagging}\r\n                                                            onChange={e => this.setState({ issueTagging: e.target.value })}\r\n                                                            className=\"form-control\">\r\n                                                            <option value=\"\" disabled>Choose From Dropdown</option>\r\n                                                            <option>Actual Issue</option>\r\n                                                            <option>Non Proper Usage</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>}\r\n                                        {this.state.btnval === \"reply&close\" && this.state.ticketStatus === \"\" &&\r\n                                            <div>\r\n                                                <div className=\"row mb-2\">\r\n                                                    <div className=\"col-sm-6 col-md-5\">\r\n                                                        <label className=\"pt-3\"><strong>Planned Closure Date</strong></label>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6 col-md-7\">\r\n                                                        <TextField\r\n                                                            id=\"date-close\"\r\n                                                            type=\"date\"\r\n                                                            className=\"form-control date-field\"\r\n                                                            value={this.state.date}\r\n                                                            onChange={e => this.handleDateChangeDate(e.target.value)}\r\n                                                            inputProps={{ min: new Date().toISOString().slice(0, 10) }}\r\n                                                            InputLabelProps={{\r\n                                                                shrink: true,\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row mb-2\">\r\n                                                    <div className=\"col-sm-6 col-md-5\">\r\n                                                        <label className=\"pt-3\"><strong>Planned TAT</strong></label>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6 col-md-7\">\r\n                                                        <input\r\n                                                            value={this.state.tat}\r\n                                                            readOnly\r\n                                                            className=\"form-control\"></input>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row mb-2\">\r\n                                                    <div className=\"col-sm-6 col-md-5\">\r\n                                                        <label className=\"pt-3\"><strong>Actual Closure Date</strong></label>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6 col-md-7\">\r\n                                                        <TextField\r\n                                                            id=\"date-actual-close\"\r\n                                                            type=\"date\"\r\n                                                            className=\"form-control date-field\"\r\n                                                            value={this.state.newdate}\r\n                                                            onChange={e => this.handleChangeTATDate(e.target.value, this.state.btnval, new Date(), this.state.ticketStatus)}\r\n                                                            inputProps={{ min: new Date().toISOString().slice(0, 10) }}\r\n                                                            InputLabelProps={{\r\n                                                                shrink: true,\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row mb-2\">\r\n                                                    <div className=\"col-sm-6 col-md-5\">\r\n                                                        <label className=\"pt-3\"><strong>Actual TAT</strong></label>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6 col-md-7\">\r\n                                                        <input\r\n                                                            value={this.state.newtat}\r\n                                                            readOnly\r\n                                                            className=\"form-control\"></input>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row mb-2\">\r\n                                                    <div className=\"col-sm-6 col-md-5\">\r\n                                                        <label className=\"pt-3\"><strong>Issue Tagging</strong></label>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6 col-md-7\">\r\n                                                        <select\r\n                                                            value={this.state.issueTagging}\r\n                                                            onChange={e => this.setState({ issueTagging: e.target.value })}\r\n                                                            className=\"form-control\">\r\n                                                            <option value=\"\" disabled>Choose From Dropdown</option>\r\n                                                            <option>Actual Issue</option>\r\n                                                            <option>Non Proper Usage</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>}\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n                        {/* For transfer the ticket */}\r\n                        {this.state.btnval === \"transfer\" && this.state.response === true &&\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-12 col-md-6 mt-2\">\r\n                                    <label><strong>Transfer to</strong></label>\r\n                                    <select\r\n                                        type=\"email\"\r\n                                        className=\"form-control\"\r\n                                        value={this.state.transferTo}\r\n                                        onChange={e => this.handlePerson(e)}>\r\n                                        <option value=\"\" disabled>Choose From Dropdown</option>\r\n                                        {this.state.userList && this.state.userList.map((opt) => {\r\n                                            return (\r\n                                                <option>{opt.EMP_EMAIL}</option>\r\n                                            )\r\n                                        })}\r\n                                        <option>Others</option>\r\n                                    </select>\r\n                                </div>\r\n                                {this.state.person === true &&\r\n                                    <div className=\"col-sm-12 col-md-6 mt-2\">\r\n                                        <label><strong>Transfer to</strong></label>\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            className=\"form-control\"\r\n                                            value={this.state.otherPerson}\r\n                                            onChange={e => this.setState({ otherPerson: e.target.value })}></input>\r\n                                    </div>}\r\n                                <div className=\"col-sm-12 col-md-12 mt-2\">\r\n                                    <label><strong>Justification</strong></label>\r\n                                    <textarea\r\n                                        className=\"form-control\"\r\n                                        rows=\"4\"\r\n                                        value={this.state.justification}\r\n                                        onChange={e => this.setState({ justification: e.target.value })}></textarea>\r\n                                </div>\r\n                            </div>}\r\n                    </Modal.Body>\r\n                    {(this.state.response === true && this.state.btnval === \"reply\") &&\r\n                        <Modal.Footer>\r\n                            <button type=\"button\" className=\"btn \" style={{ backgroundColor: '#0c5bac', color: '#fff' }} onClick={e => this.handleSend(\"WIP\", \"reply\")}>Reply</button>\r\n                            <button className=\"btn m-3 issue-btu\" onClick={e => this.setState({ response: false, buttons: false, userResponse: '', date: \"\", tat: '' })}>Exit</button>\r\n                            {this.state.spinnerFlag === true && <div className=\"spinnerClass text-center\">\r\n                                <CircularProgress />\r\n                            </div>}\r\n                        </Modal.Footer>}\r\n                    {(this.state.response === true && this.state.btnval === \"reply&close\") &&\r\n                        <Modal.Footer>\r\n                            <button type=\"button\" className=\"btn \" style={{ backgroundColor: '#0c5bac', color: '#fff' }} onClick={e => this.handleSend(\"Closed\", \"reply&close\")}>Reply & Close</button>\r\n                            <button className=\"btn m-3 issue-btu\" onClick={e => this.setState({ response: false, buttons: false, internalComments: '', issueTagging: '', preventionplan: \"\", newdate: '', newtat: \"\", userResponse: '' })}>Exit</button>\r\n                            {this.state.spinnerFlag === true && <div className=\"spinnerClass text-center\">\r\n                                <CircularProgress />\r\n                            </div>}\r\n                        </Modal.Footer>}\r\n                    {(this.state.response === true && this.state.btnval === \"transfer\") &&\r\n                        <Modal.Footer>\r\n                            <button type=\"button\" className=\"btn \" style={{ backgroundColor: '#0c5bac', color: '#fff' }} onClick={e => this.handleTransfer(\"transfer\")}>Transfer</button>\r\n                            <button className=\"btn m-3 issue-btu\" onClick={e => this.setState({ response: false, buttons: false, transferTo: '', otherPerson: \"\", justification: \"\" })}>Exit</button>\r\n                            {this.state.spinnerFlag === true && <div className=\"spinnerClass text-center\">\r\n                                <CircularProgress />\r\n                            </div>}\r\n                        </Modal.Footer>}\r\n                </Modal>\r\n                <Snackbar\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.err}\r\n                    className='snacking'\r\n                    message={this.state.error}\r\n                />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    allIssues: state.page.allIssues,\r\n    updateResult: state.page.updateResult,\r\n    user_details: state.user.user_details,\r\n    updateRecord: state.page.updateRecord,\r\n    transferTicket: state.page.transferTicket,\r\n    allUsers: state.page.allUsers,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    actions: bindActionCreators({ getAllIssues, updateIssue, getUpdatedRecord, trasferTicket, getAllUsers, replyMail }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Allincidents);","import React, { Component } from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport '../styles/Issue.css';\r\nimport { Modal } from 'react-bootstrap';\r\nimport Color from '../components/Color.js';\r\nimport { getAllIssues, updateIssue, getUpdatedRecord, getAllIssueTypes, editTicket, withdrawTicket, replyMail, mailToUser, mailToSME, getAllUsers, withdrawTicketMail } from '../actions/index';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { CircularProgress, Snackbar } from '@material-ui/core';\r\nimport WorkingDays from './WorkingDays';\r\nimport Tat from './Tat';\r\nconst columns = [\r\n    {\r\n        name: \"CREATED_DATE\",\r\n        label: \"Created Date & Time\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n    {\r\n        name: \"TICKET_NO\",\r\n        label: \"Ticket No.\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n    {\r\n        name: \"NAME\",\r\n        label: \"Issue Raised By\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    }, {\r\n        name: \"ISSUE_TYPE\",\r\n        label: \"Category\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n    {\r\n        name: \"SECTION\",\r\n        label: \"Portals & Dashboard\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n    {\r\n        name: \"TICKET_TYPE\",\r\n        label: \"Ticket Type\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n    {\r\n        name: \"CLOSE_DATE\",\r\n        label: \"Planned Closure Date\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n    {\r\n        name: \"TAT\",\r\n        label: \"TAT\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n            customBodyRender: (value, tableMeta, updateValue) => {\r\n                return (\r\n                    <Tat\r\n                        value={value}\r\n                        index={tableMeta.rowIndex}\r\n                        change={event => updateValue(event)}\r\n                    />\r\n                )\r\n            }\r\n        }\r\n    },\r\n    {\r\n        name: \"STATUS\",\r\n        label: \"Status\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n            customBodyRender: (value, tableMeta, updateValue) => {\r\n                return (\r\n                    <Color\r\n                        value={value}\r\n                        index={tableMeta.columnIndex}\r\n                        change={event => updateValue(event)}\r\n                    />\r\n                )\r\n            }\r\n        }\r\n    },\r\n]\r\nclass Issue extends Component {\r\n    state = {\r\n        buttons: false,\r\n        data: \"\",\r\n        show: false,\r\n        preventionplan: \"\",\r\n        action: \"\",\r\n        date: \"\",\r\n        status: \"\",\r\n        issueimpact: '',\r\n        ownership: '',\r\n        owner: '',\r\n        reply: false,\r\n        view_response: false,\r\n        issueList: [],\r\n        name: \"\",\r\n        createdDate: '',\r\n        clientComments: '',\r\n        description: '',\r\n        practitioner: '',\r\n        impact: '',\r\n        recordId: \"\",\r\n        radio: \"\",\r\n        issuetype: '',\r\n        ccomments: false,\r\n        homeloc: '',\r\n        Pin: '',\r\n        ibmComments: '',\r\n        location: \"\",\r\n        building: '',\r\n        floor: \"\",\r\n        desk: '',\r\n        starttime: '',\r\n        endtime: \"\",\r\n        accountreporting: '',\r\n        category: \"\",\r\n        worktype: '',\r\n        tat: '',\r\n        impacts: ['Financial', 'Non Financial'],\r\n        spinnerFlag: false,\r\n        mainspinnerFlag: false,\r\n        flag: false,\r\n        message: '',\r\n        openIssues: [],\r\n        responseflag: true,\r\n        planned_close_date: \"\",\r\n        userResponse: '',\r\n        ticketStatus: '',\r\n        ticketType: '',\r\n        btnval: \"\",\r\n        types: [],\r\n        sections: [],\r\n        section: '',\r\n        types_of_ticket: '',\r\n        title: \"My Tickets Log\"\r\n    }\r\n    UNSAFE_componentWillMount() {\r\n        this.props.actions.getAllIssues({ \"email\": this.props.user_details.userEmail, \"role\": this.props.user_details.role, data: \"mylog\" });\r\n        this.setState({ mainspinnerFlag: true })\r\n        this.props.actions.getAllIssueTypes()\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.allIssues !== this.props.allIssues) {\r\n            if (this.props.allIssues) {\r\n                // this.props.allIssues.sort(this.sortBy(\"CREATED_DATE\"));\r\n                var today = new Date()\r\n                var wipCount = 0, closedCount = 0, openCount = 0;\r\n                this.props.allIssues.sort(function (a, b) {\r\n                    var adt = new Date((b.CREATED_DATE).substring(6, 10) + \"-\" + (b.CREATED_DATE).substring(3, 6) + (b.CREATED_DATE).substring(0, 2) + \" \" + (b.CREATED_DATE).substring(11, 17))\r\n                    var bdt = new Date((a.CREATED_DATE).substring(6, 10) + \"-\" + (a.CREATED_DATE).substring(3, 6) + (a.CREATED_DATE).substring(0, 2) + \" \" + (a.CREATED_DATE).substring(11, 17))\r\n                    return adt - bdt;\r\n                });\r\n                this.props.allIssues && this.props.allIssues.forEach((opt) => {\r\n                    if (opt.TAT) {\r\n                        // var ddt = (opt.CLOSE_DATE).substring(3, 6) + (opt.CLOSE_DATE).substring(0, 3) + (opt.CLOSE_DATE).substring(6)\r\n                        var ddt = (opt.CLOSE_DATE).substring(6, 10) + \"-\" + (opt.CLOSE_DATE).substring(3, 6) + (opt.CLOSE_DATE).substring(0, 2)\r\n                        var cdt = new Date(ddt)\r\n                        if (opt.STATUS === \"Closed\") {\r\n                            closedCount = closedCount + 1;\r\n                            Object.assign(opt, { \"TAT\": opt.TAT })\r\n                        }\r\n                        else {\r\n                            if (opt.STATUS === \"Open\") {\r\n                                openCount = openCount + 1\r\n                            }\r\n                            else if (opt.STATUS === \"WIP\") {\r\n                                wipCount = wipCount + 1\r\n                            }\r\n                            var tatdate = WorkingDays(today, cdt)\r\n                            if (today > cdt) {\r\n                                tatdate = \"+\" + tatdate\r\n                            }\r\n                            else {\r\n                                return tatdate\r\n                                //tatdate = tatdate\r\n                            }\r\n                            Object.assign(opt, { \"TAT\": tatdate })\r\n                        }\r\n                    }\r\n                })\r\n                this.setState({ issueList: this.props.allIssues, responseflag: true, mainspinnerFlag: false, wipCount: wipCount, openCount: openCount, closedCount: closedCount })\r\n            }\r\n            else {\r\n                this.setState({ issueList: [], responseflag: true, mainspinnerFlag: false })\r\n            }\r\n        }\r\n        if (prevProps.updateRecord !== this.props.updateRecord) {\r\n            if (this.props.updateRecord.length !== 0) {\r\n                for (var i = 0; i < this.props.updateRecord.length; i++) {\r\n                    this.setState({ ticketStatus: this.props.updateRecord[0].STATUS })\r\n                }\r\n                this.setState({ flag: true, openIssues: this.props.updateRecord })\r\n            }\r\n            else if (this.props.updateRecord.length === 0) {\r\n                this.setState({ flag: true, message: \"No Response\" })\r\n            }\r\n        }\r\n        if (prevProps.issueTypes !== this.props.issueTypes) {\r\n            // if (this.props.user_details.role === \"Super Admin\") {\r\n            if (this.props.issueTypes && this.props.issueTypes.length !== 0) {\r\n                this.setState({ types: this.props.issueTypes })\r\n            }\r\n            // } \r\n            // else if (this.props.user_details.role === \"Super User\") {\r\n            //     if (this.props.issueTypes && this.props.issueTypes.length !== 0) {\r\n            //         let usercategory = this.props.user_details.details[0]['ISSUE_TYPE'];\r\n            //         let finalCategory = this.props.issueTypes.filter(x => usercategory.includes(x.name))\r\n            //         this.setState({ types: finalCategory })\r\n            //     }\r\n            // }\r\n        }\r\n\r\n    }\r\n    // sortBy(prop) {\r\n    //     return function (a, b) {\r\n    //         console.log(a[prop], b[prop], \"datesss\")\r\n    //         if (a[prop] < b[prop]) {\r\n    //             return 1;\r\n    //         } else if (a[prop] > b[prop]) {\r\n    //             return -1;\r\n    //         }\r\n    //         return 0;\r\n    //     }\r\n    // }\r\n    handleClose = () => {\r\n        this.setState({ show: false, reply: false, buttons: false, openIssues: [], userResponse: \"\" })\r\n        this.handleReset()\r\n    }\r\n    handleReply = () => {\r\n        var today = new Date();\r\n        if (this.state.userResponse === \"\") {\r\n            this.setState({ error: \"Please Reply\", err: true, iconColor: \"text-danger\" });\r\n        }\r\n        else {\r\n            var obj = {};\r\n            Object.assign(obj, {\r\n                current_date: today,\r\n                ownership: this.props.user_details.userEmail,\r\n                recordId: this.state.recordId,\r\n                status: \"Open\",\r\n                userResponse: this.state.userResponse.replace(/[,+()'\"*<>{}]/g, ' '),\r\n                \"email\": this.props.user_details.userEmail, role: this.props.user_details.role,\r\n                planned_close_date: this.state.planned_close_date,\r\n                tat: this.state.planned_tat,\r\n                update: \"user\",\r\n                stagename: this.props.user_details.details[0]['STAGE_NAME'] !== null ? this.props.user_details.details[0]['STAGE_NAME'] : \"\",\r\n                owner: this.state.owner,\r\n                createdDate: this.state.createdDate,\r\n                sharedInfo: this.state.sharedInfo,\r\n                name: this.state.name,\r\n                issuetype: this.state.issuetype,\r\n                worktype: this.state.worktype,\r\n                severity: this.state.severity,\r\n                section: this.state.section,\r\n                practitioner: this.state.practitioner,\r\n                data: \"mylog\",\r\n                loggedinUser: this.props.user_details.username,\r\n                loggedinEmail: this.props.user_details.userEmail,\r\n            })\r\n            this.setState({ spinnerFlag: true })\r\n            this.props.actions.updateIssue(obj);\r\n            setTimeout(() => {\r\n                if (this.props.updateResult && this.props.updateResult.status === 200 && this.props.updateResult.data.message === \"Update response\") {\r\n                    this.setState({ error: \"You have responded to the incident successfully\", err: true, iconColor: \"text-success\", spinnerFlag: false });\r\n                    this.error();\r\n                    this.props.actions.replyMail(obj)\r\n                    this.Reset();\r\n                }\r\n                else {\r\n                    this.setState({ show: true, err: true, error: \"Something Went wrong\", iconColor: \"text-danger\", spinnerFlag: false })\r\n                    this.error();\r\n                }\r\n            }, 5000)\r\n        }\r\n    }\r\n    error = () => {\r\n        setTimeout(() => {\r\n            this.setState({ err: false, error: '' })\r\n        }, 3500);\r\n    }\r\n    Reset = () => {\r\n        setTimeout(() => {\r\n            this.handleReset()\r\n        }, 1000)\r\n    }\r\n    handleReset = () => {\r\n        this.setState({\r\n            buttons: false,\r\n            data: \"\",\r\n            show: false,\r\n            preventionplan: \"\",\r\n            action: \"\",\r\n            date: \"\",\r\n            status: \"\",\r\n            issueimpact: '',\r\n            ownership: '',\r\n            owner: '',\r\n            reply: false,\r\n            view_response: false,\r\n            //issueList: [],\r\n            name: \"\",\r\n            createdDate: '',\r\n            clientComments: '',\r\n            description: '',\r\n            practitioner: '',\r\n            impact: '',\r\n            recordId: \"\",\r\n            radio: \"\",\r\n            issuetype: '',\r\n            ccomments: false,\r\n            homeloc: '',\r\n            Pin: '',\r\n            ibmComments: '',\r\n            location: \"\",\r\n            building: '',\r\n            floor: \"\",\r\n            desk: '',\r\n            starttime: '',\r\n            endtime: \"\",\r\n            accountreporting: '',\r\n            category: \"\",\r\n            worktype: '',\r\n            tat: '',\r\n            impacts: ['Financial', 'Non Financial'],\r\n            spinnerFlag: false,\r\n            mainspinnerFlag: false,\r\n            flag: false,\r\n            message: '',\r\n            openIssues: [],\r\n            responseflag: true,\r\n            planned_close_date: \"\",\r\n            userResponse: '',\r\n            ticketStatus: '',\r\n            ticketType: \"\",\r\n            btnval: \"\",\r\n            // types: '',\r\n            sections: [],\r\n            types_of_ticket: '',\r\n            section: '',\r\n        })\r\n    }\r\n    handleChangeType = (e) => {\r\n        var section;\r\n        this.state.types && this.state.types.forEach(function (opt) {\r\n            if (opt.name === e.target.value) {\r\n                section = opt.section;\r\n            }\r\n        })\r\n        this.setState({ issuetype: e.target.value, sections: section, accountreporting: \"\", section: '', ticketType: '' })\r\n\r\n    }\r\n    handleEdit = () => {\r\n        var issueTyp = this.state.issuetype\r\n        var ss = this.state.section\r\n        var ttype;\r\n        var section;\r\n        this.state.types && this.state.types.forEach(function (opt) {\r\n            if (opt.name === issueTyp) {\r\n                section = opt.section;\r\n                opt.ticketType && opt.ticketType.forEach((type) => {\r\n                    if (type.section === ss) {\r\n                        ttype = type.type\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        this.setState({ btnval: \"Edit\", issuetype: issueTyp, sections: section, types_of_ticket: ttype })\r\n    }\r\n    handleSubmit = () => {\r\n        this.setState({ spinnerFlag: true })\r\n        this.props.actions.editTicket(this.incidentObj());\r\n        setTimeout(() => {\r\n            if (this.props.editResponse && this.props.editResponse.status === 200 && this.props.editResponse.data.message === \"Edited\") {\r\n                this.setState({ error: \"Ticket Updated\", err: true, iconColor: \"text-success\", spinnerFlag: false, issueval: \"Success\" });\r\n                this.error();\r\n                this.props.actions.mailToUser(this.incidentObj())\r\n                this.props.actions.mailToSME(this.incidentObj())\r\n                this.Reset();\r\n            }\r\n            else {\r\n                this.setState({ show: false, err: true, error: \"Something Went wrong\", iconColor: \"text-danger\", spinnerFlag: false })\r\n                this.error();\r\n            }\r\n        }, 5000)\r\n    }\r\n    incidentObj = () => {\r\n        var dt = new Date();\r\n        var date = dt.getDate();\r\n        if (date <= 9) {\r\n            date = '0' + date;\r\n        }\r\n        var month = dt.getMonth() + 1;\r\n        if (month <= 9) {\r\n            month = '0' + month;\r\n        }\r\n        var hour = dt.getHours()\r\n        if (hour <= 9) {\r\n            hour = '0' + hour;\r\n        }\r\n        var min = dt.getMinutes()\r\n        if (min <= 9) {\r\n            min = '0' + min;\r\n        }\r\n        var type;\r\n        if (this.state.name !== this.state.practitioner) {\r\n            type = \"Others\"\r\n        }\r\n        else {\r\n            type = \"Self\"\r\n        }\r\n        var data = this.state;\r\n        delete data.err\r\n        delete data.error\r\n        var incidentObj = {};\r\n        return Object.assign(incidentObj, {\r\n            type: type,\r\n            issuetype: this.state.issuetype,\r\n            name: this.state.name,\r\n            practitioner: this.state.practitioner,\r\n            category: this.state.category,\r\n            description: this.state.description.replace(/[,+()'\"*<>{}]/g, ' '),\r\n            severity: this.state.severity,\r\n            createdDate: date + \"-\" + month + \"-\" + dt.getFullYear() + \" \" + hour + \":\" + min,\r\n            // editDate: date + \"-\" + month + \"-\" + dt.getFullYear() + \" \" + hour + \":\" + min + \":\" + sec,\r\n            recordId: this.state.recordId,\r\n            section: this.state.section,\r\n            sharedInfo: this.state.sharedInfo,\r\n            createFor: this.state.createFor,\r\n            ticketType: this.state.ticketType,\r\n            \"email\": this.props.user_details.userEmail,\r\n            role: this.props.user_details.role,\r\n            key: \"Update\",\r\n            loggedinUser: this.props.user_details.username,\r\n            loggedinEmail: this.props.user_details.userEmail,\r\n        })\r\n    }\r\n    handleWithdraw = (recordId) => {\r\n        this.props.actions.withdrawTicket({ \"recordId\": recordId, \"email\": this.props.user_details.userEmail, role: this.props.user_details.role, loggedinUser: this.props.user_details.username })\r\n        this.setState({ spinnerFlag: true })\r\n        setTimeout(() => {\r\n            if (this.props.withdrawResponse && this.props.withdrawResponse.status === 200 && this.props.withdrawResponse.data.message === \"Withdraw\") {\r\n                this.setState({ error: \"Ticket Withdrawn Successfully\", err: true, iconColor: \"text-success\", spinnerFlag: false, });\r\n                this.error();\r\n                this.Reset();\r\n                this.props.actions.withdrawTicketMail(this.incidentObj())\r\n            }\r\n            else {\r\n                this.setState({ show: false, err: true, error: \"Something Went wrong\", iconColor: \"text-danger\", spinnerFlag: false })\r\n                this.error();\r\n            }\r\n        }, 5000)\r\n    }\r\n    handleSubcategory = (e) => {\r\n        var ttype;\r\n        var issue = this.state.issuetype\r\n        this.state.types && this.state.types.forEach(function (opt) {\r\n            if (opt.name === issue) {\r\n                opt.ticketType && opt.ticketType.forEach((type) => {\r\n                    if (type.section === e) {\r\n                        ttype = type.type\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        this.setState({ section: e, types_of_ticket: ttype, ticketType: \"\" })\r\n    }\r\n    render() {\r\n        // console.log(this.state)\r\n        // console.log(this.props)\r\n        const options = {\r\n            responsive: 'scrollMaxHeight',\r\n            selectableRows: false,\r\n            onRowClick: (_, { dataIndex }) => {\r\n                var selected_data = this.state.issueList[dataIndex]\r\n                this.props.actions.getUpdatedRecord({ \"ticket\": selected_data.TICKET_NO })\r\n                this.setState({\r\n                    show: true,\r\n                    flag: false,\r\n                    name: selected_data.NAME,\r\n                    practitioner: selected_data.PRACTIONER,\r\n                    issuetype: selected_data.ISSUE_TYPE,\r\n                    createdDate: selected_data.CREATED_DATE,\r\n                    description: selected_data.DESCRIPTION,\r\n                    recordId: selected_data.TICKET_NO,\r\n                    severity: selected_data.SEVERITY,\r\n                    category: selected_data.CATEGORY,\r\n                    section: selected_data.SECTION,\r\n                    planned_close_date: selected_data.CLOSE_DATE,\r\n                    planned_tat: selected_data.TAT,\r\n                    sharedInfo: selected_data.SHARED_TICKET,\r\n                    ticketType: selected_data.TICKET_TYPE,\r\n                    owner: selected_data.OWNER,\r\n                    createFor: selected_data.CREATED_FOR,\r\n                })\r\n            },\r\n            textLabels: {\r\n                body: {\r\n                    noMatch: \"Sorry, no matching records found\",\r\n                    toolTip: \"Sort\",\r\n                    columnHeaderTooltip: column => `Sort for ${column.label}`\r\n                },\r\n                pagination: {\r\n                    next: \"Next Page\",\r\n                    previous: \"Previous Page\",\r\n                    rowsPerPage: \"Rows per page:\",\r\n                    displayRows: \"of\",\r\n                },\r\n                toolbar: {\r\n                    search: \"Search\",\r\n                    downloadCsv: \"Download CSV\",\r\n                    print: \"Print\",\r\n                    viewColumns: \"View Columns\",\r\n                    filterTable: \"Filter Table\",\r\n                },\r\n                filter: {\r\n                    all: \"All\",\r\n                    title: \"FILTERS\",\r\n                    reset: \"RESET\",\r\n                },\r\n                viewColumns: {\r\n                    title: \"Show Columns\",\r\n                    titleAria: \"Show/Hide Table Columns\",\r\n                },\r\n                selectedRows: {\r\n                    text: \"row(s) selected\",\r\n                    delete: \"Delete\",\r\n                    deleteAria: \"Delete Selected Rows\",\r\n                },\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"container-fluid Table\">\r\n                <div className=\"row rowClass\">\r\n                    <div className=\"col-sm-2 col-md-2 colText\">Total Records : {this.state.issueList && this.state.issueList.length > 0 ? this.state.issueList.length : 0}</div>\r\n                    <div className=\" col-sm-2 col-md-2 text-new colText\">New :\r\n                    {this.state.issueList && this.state.issueList.length > 0 ? parseInt(this.state.issueList.length) - (parseInt(this.state.openCount) + parseInt(this.state.wipCount) + parseInt(this.state.closedCount)) : 0}\r\n                    </div>\r\n                    <div className=\" col-sm-2 col-md-2 text-open colText\">Open : {this.state.issueList && this.state.issueList.length > 0 ? this.state.openCount : 0}\r\n                    </div>\r\n                    <div className=\" col-sm-2 col-md-2 text-wip colText\">WIP : {this.state.issueList && this.state.issueList.length > 0 ? this.state.wipCount : 0}\r\n                    </div>\r\n                    <div className=\" col-sm-2 col-md-2 text-closed colText\">Closed : {this.state.issueList && this.state.issueList.length > 0 ? this.state.closedCount : 0}\r\n                    </div>\r\n                </div>\r\n\r\n                { this.state.mainspinnerFlag === false && this.state.responseflag === true ?\r\n                    <MUIDataTable\r\n                        title={this.state.title}\r\n                        data={this.state.issueList}\r\n                        columns={columns}\r\n                        options={options}\r\n                    />\r\n                    :\r\n                    <div className=\"text-center\">\r\n                        <div className=\"spinner-border\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </div>}\r\n\r\n                <Modal show={this.state.show} onHide={e => this.handleClose()} dialogClassName=\"modal-record\" size=\"lg\">\r\n                    <Modal.Header style={{ borderBottom: '5px #0c5bac solid', color: '#0c5bac' }} closeButton>\r\n                        <Modal.Title className=\"modal-title\"><span>Created Date & Time : {this.state.createdDate}</span><span className=\"modal-secondtit\">Ticket No : {this.state.recordId}</span></Modal.Title>\r\n\r\n                    </Modal.Header>\r\n                    <Modal.Body className='modal_body'>\r\n                        {this.state.btnval !== \"Edit\" ?\r\n                            <div className=\"card-body cardbody\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-6 col-md-6\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 col-md-3 pb-2 pt-2\">\r\n                                                <label><strong>Issue Raised By</strong></label></div>\r\n                                            <div className=\"col-sm-6 col-md-8\">\r\n                                                <input\r\n                                                    readOnly\r\n                                                    className=\"form-control\"\r\n                                                    value={this.state.name}\r\n                                                    type=\"text\"></input>\r\n                                            </div>\r\n                                        </div>\r\n                                        {(this.state.name !== this.state.practitioner) &&\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3 pb-2 pt-2\">\r\n                                                    <label><strong>Issue Raised For</strong></label></div>\r\n                                                <div className=\"col-sm-6 col-md-8\">\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        value={this.state.practitioner}\r\n                                                        readOnly\r\n                                                        type=\"text\"></input>\r\n                                                </div>\r\n                                            </div>}\r\n                                        {this.state.sharedInfo !== undefined &&\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3 pb-2 pt-2\">\r\n                                                    <label><strong>Share Ticket Info</strong></label>\r\n                                                </div>\r\n                                                <div className=\"col-sm-6 col-md-8\">\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        readOnly\r\n                                                        value={this.state.sharedInfo}>\r\n                                                    </input>\r\n                                                </div>\r\n                                            </div>}\r\n                                        <div className=\"row\">\r\n                                            {this.state.name !== this.state.practitioner ?\r\n                                                <div className=\"col-sm-6 col-md-3 pb-2 pt-2\">\r\n                                                    <label><strong>Priority Category</strong></label>\r\n                                                </div>\r\n                                                :\r\n                                                <div className=\"col-sm-6 col-md-3 pb-2 pt-2\">\r\n                                                    <label><strong>Impact Category</strong></label>\r\n                                                </div>}\r\n                                            <div className=\"col-sm-6 col-md-8\">\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    value={this.state.severity} readOnly>\r\n                                                </input>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-sm-6 col-md-6\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 col-md-3\">\r\n                                                <label className=\"pt-2 pl-3\"><strong>Category</strong></label>\r\n                                            </div>\r\n                                            <div className=\"col-sm-6 col-md-8\">\r\n                                                <input className=\"form-control mb-2\" value={this.state.issuetype} readOnly>\r\n                                                </input>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 col-md-3\">\r\n                                                <label className=\"pt-2 pl-3\"><strong>Portals & Dashboard</strong></label>\r\n                                            </div>\r\n                                            <div className=\"col-sm-6 col-md-8\">\r\n                                                <input className=\"form-control mb-2\" value={this.state.section} readOnly>\r\n                                                </input>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 col-md-3\">\r\n                                                <label className=\"pt-2 pl-3\"><strong>Ticket Type</strong></label>\r\n                                            </div>\r\n                                            <div className=\"col-sm-6 col-md-8\">\r\n                                                <input className=\"form-control mb-2\" value={this.state.ticketType} readOnly>\r\n                                                </input>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row mt-2\">\r\n                                    <div className=\"col-sm-12 col-md-12\">\r\n                                        <label><strong>Description Of The Issue</strong></label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            value={this.state.description}\r\n                                            readOnly\r\n                                            type=\"text\"\r\n                                            rows=\"6\"></textarea>\r\n                                    </div></div>\r\n                            </div>\r\n                            :\r\n                            <div className=\"card-body cardbody\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-6 col-md-6\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 col-md-3 pb-2 pt-2\">\r\n                                                <label><strong>Issue Raised By</strong></label></div>\r\n                                            <div className=\"col-sm-6 col-md-8\">\r\n                                                <input\r\n                                                    readOnly\r\n                                                    className=\"form-control\"\r\n                                                    value={this.state.name}\r\n                                                    onChange={e => this.setState({ name: e.target.value })}\r\n                                                    type=\"text\"></input>\r\n                                            </div>\r\n                                        </div>\r\n                                        {(this.state.name !== this.state.practitioner) &&\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3 pb-2 pt-2\">\r\n                                                    <label><strong>Issue Raised For</strong></label></div>\r\n                                                <div className=\"col-sm-6 col-md-8\">\r\n                                                    <input\r\n                                                        readOnly\r\n                                                        className=\"form-control\"\r\n                                                        value={this.state.practitioner}\r\n                                                        onChange={e => this.setState({ practitioner: e.target.value })}\r\n                                                        type=\"text\"></input>\r\n                                                </div>\r\n                                            </div>}\r\n                                        {this.state.sharedInfo !== undefined &&\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3 pb-2 pt-2\">\r\n                                                    <label><strong>Share Ticket Info</strong></label>\r\n                                                </div>\r\n                                                <div className=\"col-sm-6 col-md-8\">\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        value={this.state.sharedInfo}\r\n                                                        onChange={e => this.setState({ sharedInfo: e.target.value })}\r\n                                                    >\r\n                                                    </input>\r\n                                                </div>\r\n                                            </div>}\r\n                                        <div className=\"row\">\r\n                                            {this.state.name !== this.state.practitioner ?\r\n                                                <div className=\"col-sm-6 col-md-3 pb-2 pt-2\">\r\n                                                    <label><strong>Priority Category</strong></label>\r\n                                                </div>\r\n                                                :\r\n                                                <div className=\"col-sm-6 col-md-3 pb-2 pt-2\">\r\n                                                    <label><strong>Impact Category</strong></label>\r\n                                                </div>}\r\n                                            <div className=\"col-sm-6 col-md-8\">\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    value={this.state.severity}\r\n                                                    onChange={e => this.setState({ severity: e.target.value })}>\r\n                                                    <option></option>\r\n                                                    <option>High {\"(greater than 21 Employees)\"} </option>\r\n                                                    <option>Medium {\"(greater than 6 - less than 20 Employees)\"}</option>\r\n                                                    <option>Low {\"(less than 5 Employees)\"}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-sm-6 col-md-6\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 col-md-3\">\r\n                                                <label className=\"pt-2 pl-3\"><strong>Category</strong></label>\r\n                                            </div>\r\n                                            <div className=\"col-sm-6 col-md-8\">\r\n                                                <select className=\"form-control mb-2\" value={this.state.issuetype}\r\n                                                    onChange={e => this.handleChangeType(e)}>\r\n                                                    <option value=\"\" disabled>Choose from dropdown</option>\r\n                                                    {this.state.types && this.state.types.map((opt) => {\r\n                                                        return (\r\n                                                            <option key={opt.name}>{opt.name}</option>\r\n                                                        )\r\n                                                    })}\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        {this.state.sections && this.state.sections.length !== 0 &&\r\n                                            <div>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-sm-6 col-md-3\">\r\n                                                        <label className=\"pt-2 pl-3\"><strong>Portals & Dashboard</strong></label>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6 col-md-8\">\r\n                                                        <select className=\"form-control mb-2\" value={this.state.section}\r\n                                                            onChange={e => this.handleSubcategory(e.target.value)}\r\n                                                        >\r\n                                                            <option value=\"\" disabled>Choose from dropdown</option>\r\n                                                            {this.state.sections && this.state.sections.map((opt, index) => {\r\n                                                                return (\r\n                                                                    <option key={index}>{opt}</option>\r\n                                                                )\r\n                                                            })}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-sm-6 col-md-3\">\r\n                                                        <label className=\"pt-2 pl-3\"><strong>Ticket Type</strong></label>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6 col-md-8\">\r\n                                                        <select className=\"form-control mb-2\" value={this.state.ticketType}\r\n                                                            onChange={e => this.setState({ ticketType: e.target.value })}>\r\n                                                            <option value=\"\" disabled>Choose from dropdown</option>\r\n                                                            {this.state.types_of_ticket && this.state.types_of_ticket.map((opt, index) => {\r\n                                                                return (\r\n                                                                    <option key={index}>{opt}</option>\r\n                                                                )\r\n                                                            })}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row mt-2\">\r\n                                    <div className=\"col-sm-12 col-md-12\">\r\n                                        <label><strong>Description</strong></label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            value={this.state.description}\r\n                                            onChange={e => this.setState({ description: e.target.value })}\r\n                                            type=\"text\"\r\n                                            rows=\"6\"></textarea>\r\n                                    </div></div>\r\n                            </div>}\r\n                        {(this.props.updateRecord.length === 0 && this.state.flag === true && this.state.btnval === \"\") &&\r\n                            <div className=\"buttons-submit\">\r\n                                <button type=\"button\" className=\"btn m-3 issue-btu\" style={{ backgroundColor: '#0c5bac', color: '#fff' }}\r\n                                    onClick={e => this.handleEdit()}\r\n                                >Edit</button>\r\n                                <button type=\"button\" className=\"btn m-3 issue-btu\" style={{ backgroundColor: '#0c5bac', color: '#fff' }}\r\n                                    onClick={e => this.handleWithdraw(this.state.recordId)}\r\n                                >Delete</button>\r\n                                {this.state.spinnerFlag === true &&\r\n                                    <div className=\"spinner-border\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>}\r\n                            </div>\r\n                        }\r\n\r\n                        {(this.state.btnval !== \"Edit\") && <h6 className=\"text-center m-3\">TICKET TRAIL</h6>}\r\n                        {/* Displaying accordions when issue is open */}\r\n                        {(this.state.openIssues && this.state.openIssues.length !== 0 && this.state.flag === true) &&\r\n                            <div>\r\n                                <div className=\"row rowheader\">\r\n                                    <div className=\"col-sm col-md tableheader text-center\">Responded Date & Time</div>\r\n                                    <div className=\"col-sm col-md tableheader text-center\">Stage Name</div>\r\n                                    <div className=\"col-sm col-md tableheader text-center\">Status</div>\r\n                                </div>\r\n                                <div id=\"accordion\">\r\n                                    {this.state.openIssues.length !== 0 && this.state.openIssues.map((opt, index) => {\r\n                                        var collapasehref = \"#collapse-\" + index;\r\n                                        var collapaseid = \"collapse-\" + index;\r\n                                        return (\r\n                                            <div className=\"card issue-accordion\">\r\n                                                <div className=\"card-header\" id=\"heading-1\" data-toggle=\"collapse\" data-target={collapasehref} aria-expanded=\"true\" aria-controls={collapaseid}>\r\n                                                    <div className=\"row cardhead\">\r\n                                                        <div className=\"col-sm col-md text-center\">{opt.RESPONSE_DATE}</div>\r\n                                                        <div className=\"col-sm col-md text-center\">{opt.STAGE_NAME} </div>\r\n                                                        <div className=\"col-sm col-md text-center\"><span style={{ color: (opt.STATUS === \"Open\") ? \"#FF8533\" : (opt.STATUS === \"Closed\") ? \"green\" : (opt.STATUS === \"New\") ? \"#D74D4D\" : (opt.STATUS === \"WIP\") ? \"#004D99\" : 'white' }}>{opt.STATUS}</span> </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div id={collapaseid} className=\"collapse\" data-parent=\"#accordion\" aria-labelledby=\"heading-1\">\r\n                                                    <div id=\"accordion-1\">\r\n                                                        <div className=\"card-body  table-responsive\" id=\"heading-1-1\">\r\n                                                            <div className=\"row mt-4\">\r\n                                                                {opt.STAGE_NAME !== \"User\" ? <div className=\"col-sm-5 col-md-6\">\r\n                                                                    {this.state.accountreporting === \"Incident\" ?\r\n                                                                        <div className=\"col-sm-5 col-md-12\">\r\n                                                                            <div className=\"row mb-2\">\r\n                                                                                <div className=\"col-sm-6 col-md-5\">\r\n                                                                                    <label><strong> IBM Comments/Action </strong></label>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-sm-6 col-md-7\">\r\n                                                                                    <textarea className=\"form-control mb-2\"\r\n                                                                                        value={opt.ACTION}\r\n                                                                                        readOnly\r\n                                                                                        type=\"text\"\r\n                                                                                        rows=\"4\"></textarea>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row mb-2\">\r\n                                                                                <div className=\"col-sm-6 col-md-5\">\r\n                                                                                    <label><strong>IBM Comments/PreventionPlan</strong></label>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-sm-4 col-md-7\">\r\n                                                                                    <textarea className=\"form-control mb-2\" value={opt.PLAN}\r\n                                                                                        type=\"text\"\r\n                                                                                        readOnly\r\n                                                                                        rows=\"4\"></textarea>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        :\r\n                                                                        <div className=\"col-sm-5 col-md-12\">\r\n                                                                            <label><strong>Response </strong></label>\r\n                                                                            <textarea className=\"form-control\"\r\n                                                                                value={opt.RESPONSE}\r\n                                                                                readOnly\r\n                                                                                type=\"text\"\r\n                                                                                rows=\"6\"></textarea>\r\n                                                                        </div>}</div> :\r\n                                                                    <div className=\"col-sm-5 col-md-6\">\r\n                                                                        <label><strong>Response </strong></label>\r\n                                                                        <textarea className=\"form-control\"\r\n                                                                            value={opt.RESPONSE}\r\n                                                                            readOnly\r\n                                                                            type=\"text\"\r\n                                                                            rows=\"6\"></textarea>\r\n                                                                    </div>}\r\n\r\n                                                                <div className=\"col-sm-5 col-md-5\">\r\n                                                                    <div className=\"row mb-2\">\r\n                                                                        <div className=\"col-sm-6 col-md-5 mt-2\">\r\n                                                                            <label ><strong>Planned Closure Date</strong></label>\r\n                                                                        </div>\r\n                                                                        <div className=\"col-sm-6 col-md-7\">\r\n                                                                            <input className=\"form-control mb-2\" value={opt.CLOSE_DATE.split(\" \", 1)}\r\n                                                                                readOnly\r\n                                                                                type=\"text\"></input>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    {(opt.ACTUAL_CLOSE_DATE !== \"undefined\" && opt.ACTUAL_CLOSE_DATE !== null) &&\r\n                                                                        <div className=\"row mb-2\">\r\n                                                                            <div className=\"col-sm-6 col-md-5 mt-2\">\r\n                                                                                <label><strong>Actual Closure Date</strong></label>\r\n                                                                            </div>\r\n                                                                            <div className=\"col-sm-6 col-md-7\">\r\n                                                                                <input className=\"form-control mb-2\" value={opt.ACTUAL_CLOSE_DATE}\r\n                                                                                    readOnly\r\n                                                                                    type=\"text\"></input>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    }\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                                {this.state.reply === false && this.state.ticketStatus !== \"Closed\" &&\r\n                                    <div className=\"buttons-submit\">\r\n                                        <button className=\"btn issue-btu m-3\" onClick={e => this.setState({ reply: true })}>Reply</button>\r\n                                        <button className=\"btn issue-btu m-3\" onClick={e => this.handleWithdraw(this.state.recordId)}>Withdraw&nbsp;\r\n                                        {this.state.spinnerFlag === true &&\r\n                                                <div className=\"spinner-border\" role=\"status\">\r\n                                                    <span className=\"sr-only\">Loading...</span>\r\n                                                </div>}\r\n                                        </button>\r\n                                    </div>}\r\n                                {this.state.reply === true &&\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12 col-md-12 mt-2\">\r\n                                            <label><strong>Reply</strong></label>\r\n                                            <textarea\r\n                                                className=\"form-control\"\r\n                                                value={this.state.userResponse}\r\n                                                rows=\"4\"\r\n                                                onChange={e => this.setState({ userResponse: e.target.value })}></textarea>\r\n                                        </div></div>}\r\n                            </div>\r\n                        }\r\n                        {this.state.flag === false &&\r\n                            <div className=\"text-center\">\r\n                                <div className=\"spinner-border\" role=\"status\">\r\n                                    <span className=\"sr-only\">Loading...</span>\r\n                                </div>\r\n                            </div>}\r\n                        {(this.props.updateRecord.length === 0 && this.state.flag === true && this.state.btnval !== \"Edit\") &&\r\n                            <h6 className=\"text-center\">{this.state.message}</h6>}\r\n                    </Modal.Body>\r\n                    {\r\n                        this.state.reply === true &&\r\n                        <Modal.Footer>\r\n                            <button type=\"button\" className=\"btn\" style={{ backgroundColor: '#0c5bac', color: '#fff' }} onClick={e => this.handleReply()}>Reply</button>\r\n                            {this.state.spinnerFlag === true && <div className=\"spinnerClass text-center\">\r\n                                <CircularProgress />\r\n                            </div>}\r\n                        </Modal.Footer>\r\n                    }\r\n                    {this.state.btnval === \"Edit\" &&\r\n                        <Modal.Footer>\r\n                            {/* <div className=\"buttons-submit\"> */}\r\n                            <button type=\"button\" className=\"btn m-3 issue-btu\" style={{ backgroundColor: '#0c5bac', color: '#fff' }} onClick={e => this.handleSubmit()}>Submit\r\n                                {this.state.spinnerFlag === true &&\r\n                                    <div className=\"spinner-border\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>}\r\n                            </button>\r\n                            <button type=\"button\" className=\"btn m-3 issue-btu\" style={{ backgroundColor: '#0c5bac', color: '#fff' }} onClick={e => this.setState({ btnval: \"\" })}>Back</button>\r\n                            {/* </div> */}\r\n                        </Modal.Footer>\r\n                    }\r\n                </Modal>\r\n                <Snackbar\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.err}\r\n                    className='snacking'\r\n                    message={this.state.error}\r\n                />\r\n            </div >\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    allIssues: state.page.allIssues,\r\n    updateResult: state.page.updateResult,\r\n    user_details: state.user.user_details,\r\n    updateRecord: state.page.updateRecord,\r\n    issueTypes: state.page.issueTypes,\r\n    editResponse: state.page.editResponse,\r\n    withdrawResponse: state.page.withdrawResponse,\r\n    allUsers: state.page.allUsers,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    actions: bindActionCreators({ getAllIssues, updateIssue, getUpdatedRecord, getAllIssueTypes, editTicket, withdrawTicket, replyMail, mailToUser, mailToSME, getAllUsers, withdrawTicketMail }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Issue);","import React, { Component } from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport '../styles/Issue.css';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { Modal } from 'react-bootstrap';\r\nimport { getAllUsers, addUser, deleteUser, getAllIssueTypes, updateUser } from '../actions/index';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { MenuItem, Select, Checkbox, ListItemText, Input, Snackbar } from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\n// const serverUrl = 'http://localhost:8181'\r\nconst serverUrl = ''\r\nconst roles = [\"Super Admin\", \"Admin\", \"Backend Support\", \"SME\", \"User\", \"Super User\"]\r\nconst geo = [\"America\", \"China\", \"Europe\", \"India\", \"Philippines\", \"All\"]\r\nconst columns = [\r\n    // {\r\n    //     name: \"EMP_ID\",\r\n    //     label: \"Employee ID\",\r\n    //     options: {\r\n    //         filter: true,\r\n    //         sort: true,\r\n    //     }\r\n    // },\r\n    {\r\n        name: \"EMP_NAME\",\r\n        label: \"Name\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n    {\r\n        name: \"STAGE_NAME\",\r\n        label: \"Stage Name\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n    {\r\n        name: \"EMP_EMAIL\",\r\n        label: \"Email-Id\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n    {\r\n        name: \"ROLE\",\r\n        label: \"Role\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n    {\r\n        name: \"ISSUE_TYPE\",\r\n        label: \"Category\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n    {\r\n        name: \"ISSUE_CATEGORY\",\r\n        label: \"Portals & Dashboard\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n    // {\r\n    //     name: \"GEOGRAPHY\",\r\n    //     label: \"Geography\",\r\n    //     options: {\r\n    //         filter: true,\r\n    //         sort: true,\r\n    //     }\r\n    // }\r\n]\r\nclass Access extends Component {\r\n    state = {\r\n        show: false,\r\n        username: '',\r\n        userEmail: '',\r\n        UID: '',\r\n        role: '',\r\n        empId: \"\",\r\n        error: '',\r\n        err: false,\r\n        spinnerFlag: false,\r\n        stagename: '',\r\n        categoryType: [],\r\n        issueType: [],\r\n        sections: [],\r\n        flag: false,\r\n        array: [],\r\n        update: \"\",\r\n        types: [],\r\n        geography: \"\",\r\n        issueTypes: []\r\n    }\r\n    UNSAFE_componentWillMount() {\r\n        this.props.actions.getAllUsers()\r\n        this.props.actions.getAllIssueTypes()\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.issueTypes !== this.props.issueTypes) {\r\n            var type = []\r\n            if (this.props.user_details.role === \"Super Admin\" && this.props.issueTypes && this.props.issueTypes.length !== 0) {\r\n\r\n                this.props.issueTypes.forEach((opt) => {\r\n                    type.push(opt.name)\r\n                })\r\n                this.setState({ types: type })\r\n\r\n            } else if (this.props.user_details.role === \"Super User\" && this.props.issueTypes && this.props.issueTypes.length !== 0) {\r\n\r\n                type = this.props.issueTypes.filter(x => this.props.user_details.details[0]['ISSUE_TYPE'].includes(x.name)).map(y => y.name)\r\n                this.setState({ types: type })\r\n\r\n            }\r\n        }\r\n    }\r\n    handleAdduser = () => {\r\n        this.setState({ show: true })\r\n    }\r\n    error = () => {\r\n        setTimeout(() => {\r\n            this.setState({ err: false, error: '' })\r\n        }, 3500);\r\n    }\r\n    handleAdd = () => {\r\n        if (this.state.userEmail === \"\" || this.state.role === \"\") {\r\n            this.setState({ error: \"All Fields Are Mandatory\", err: true, iconColor: \"text-danger\" });\r\n            this.error()\r\n        }\r\n        else if (!this.state.userEmail.includes(\"@\")) {\r\n            this.setState({ error: \"Mail Should Include @\", err: true, iconColor: \"text-danger\" });\r\n            this.error()\r\n        } else if (!this.state.userEmail.includes(\".ibm.com\")) {\r\n            this.setState({ error: \"Mail Should Include .ibm.com\", err: true, iconColor: \"text-danger\" });\r\n            this.error()\r\n        }\r\n        else if (this.state.role === \"SME\") {\r\n            if (this.state.stagename === \"\") {\r\n                this.setState({ error: \"Stage name sholud not be empty\", err: true, iconColor: \"text-danger\" });\r\n                this.error()\r\n            }\r\n            else if (this.state.issueType.length === 0) {\r\n                this.setState({ error: \"Please Choose Category\", err: true, iconColor: \"text-danger\" });\r\n                this.error()\r\n            }\r\n            else if (this.state.categoryType.length === 0) {\r\n                this.setState({ error: \"Please Choose Sub-Category\", err: true, iconColor: \"text-danger\" });\r\n                this.error()\r\n            }\r\n            else {\r\n                this.check()\r\n            }\r\n        }\r\n        else if (this.state.role === \"Super User\") {\r\n            if (this.state.stagename === \"\") {\r\n                this.setState({ error: \"Stage name sholud not be empty\", err: true, iconColor: \"text-danger\" });\r\n                this.error()\r\n            }\r\n            else if (this.state.issueType.length === 0) {\r\n                this.setState({ error: \"Please Choose Category\", err: true, iconColor: \"text-danger\" });\r\n                this.error()\r\n            }\r\n            else {\r\n                this.check()\r\n            }\r\n        }\r\n        else {\r\n            this.check()\r\n        }\r\n    }\r\n    handleClose = () => {\r\n        this.setState({ show: false })\r\n        this.handleReset()\r\n    }\r\n    getUserName = (email) => {\r\n        axios.post(serverUrl + '/api/v1/getUserName', { email })\r\n            .then((response) => {\r\n                // console.log(response)\r\n                if (response.status === 200 && response.data.status === true) {\r\n                    this.setState({ username: response.data.name })\r\n                }\r\n                else {\r\n                    this.setState({ username: '' })\r\n                }\r\n            }).catch(err => {\r\n                this.setState({ username: '' })\r\n            })\r\n    }\r\n    check() {\r\n        var array = [];\r\n        this.setState({ spinnerFlag: true })\r\n        var details = {\r\n            UID: Math.floor(Math.random() * 10000) + 1000,\r\n            EMP_ID: this.state.empId,\r\n            EMP_NAME: this.state.username,\r\n            ROLE: this.state.role,\r\n            EMP_EMAIL: this.state.userEmail.toLowerCase(),\r\n            STAGE_NAME: this.state.stagename,\r\n            ISSUE_TYPE: this.state.issueType.join(','),\r\n            ISSUE_CATEGORY: this.state.categoryType.join(','),\r\n            loggedinUser: this.props.user_details.username,\r\n            loggedinEmail: this.props.user_details.userEmail,\r\n        }\r\n        for (var i = 0; i < this.props.allUsers.length; i++) {\r\n            if (this.props.allUsers[i].EMP_EMAIL === this.state.userEmail) {\r\n                this.setState({ err: true, error: \"User already exists\", iconColor: \"text-danger\", spinnerFlag: false })\r\n                this.error();\r\n            }\r\n            else {\r\n                array.push(i);\r\n                if (this.props.allUsers.length === array.length) {\r\n                    this.props.actions.addUser(details)\r\n                    setTimeout(() => {\r\n                        if (this.props.userRes.status === 200) {\r\n                            this.setState({\r\n                                show: false, spinnerFlag: false, err: true, error: \"Record Submitted\", username: '', userEmail: '', empId: \"\", role: \"\",\r\n                                categoryType: [], issueType: [], iconColor: \"text-success\"\r\n                            })\r\n                            this.error();\r\n                        }\r\n                        else {\r\n                            this.setState({ show: false, spinnerFlag: false, err: true, error: \"Please Try Again, or Contact System Adminstrator!\", iconColor: \"text-danger\" })\r\n                            this.error();\r\n                        }\r\n                    }, 5000)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    checkForUpdate() {\r\n        this.setState({ spinnerFlag: true })\r\n        //var array = [];\r\n        var final = (this.state.sections).filter(value => (this.state.categoryType).includes(value))\r\n        var details = {};\r\n        Object.assign(details, {\r\n            UID: this.state.UID,\r\n            EMP_ID: this.state.empId,\r\n            EMP_NAME: this.state.username,\r\n            ROLE: this.state.role,\r\n            EMP_EMAIL: this.state.userEmail.toLowerCase(),\r\n            STAGE_NAME: this.state.stagename,\r\n            ISSUE_TYPE: this.state.issueType.join(','),\r\n            ISSUE_CATEGORY: final.join(','),\r\n            // ISSUE_CATEGORY: this.state.categoryType\r\n            loggedinUser: this.props.user_details.username,\r\n            loggedinEmail: this.props.user_details.userEmail,\r\n        })\r\n        this.props.actions.updateUser(details)\r\n        setTimeout(() => {\r\n            if (this.props.updateuserRes.status === 200) {\r\n                this.setState({\r\n                    show: false, spinnerFlag: false, err: true, error: \"User Record Updated\", username: '', userEmail: '', empId: \"\", role: \"\",\r\n                    categoryType: [], issueType: [], iconColor: \"text-success\"\r\n                })\r\n                this.error();\r\n                this.Reset()\r\n            }\r\n            else {\r\n                this.setState({ spinnerFlag: false, show: false, err: true, error: \"Please Try Again, or Contact System Adminstrator!\", iconColor: \"text-danger\" })\r\n                this.error();\r\n            }\r\n        }, 5000)\r\n    }\r\n    handleReset = () => {\r\n        this.setState({\r\n            show: false,\r\n            username: '',\r\n            userEmail: '',\r\n            UID: '',\r\n            role: '',\r\n            empId: \"\",\r\n            error: '', err: false,\r\n            spinnerFlag: false,\r\n            stagename: '',\r\n            categoryType: [],\r\n            issueType: [],\r\n            sections: [],\r\n            flag: false,\r\n            update: \"\"\r\n        })\r\n    }\r\n    handleChangeType(e) {\r\n        var section = [];\r\n        var issue = e.target.value\r\n        if (this.state.role !== \"Super User\") {\r\n            this.props.issueTypes && this.props.issueTypes.forEach(function (opt) {\r\n                for (var n = 0; n < issue.length; n++) {\r\n                    if (opt.name === issue[n]) {\r\n                        var sec = opt.section\r\n                        sec && sec.forEach((sect) => {\r\n                            section.push(sect)\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n        this.setState({ issueType: e.target.value, sections: section })\r\n    }\r\n    handleRole = (e) => {\r\n        this.setState({ role: e.target.value })\r\n        if (e.target.value !== \"SME\") {\r\n            this.setState({ stagename: '', issueType: [], categoryType: [] })\r\n        }\r\n        else {\r\n            var stagename = this.state.userEmail.split('@', 1);\r\n            this.setState({ stagename: stagename })\r\n        }\r\n    }\r\n    handleUpdate = () => {\r\n        if (this.state.username === \"\" || this.state.userEmail === \"\" || this.state.role === \"\") {\r\n            this.setState({ error: \"All Fields Are Mandatory\", err: true, iconColor: \"text-danger\" });\r\n            this.error()\r\n        }\r\n        else if (!this.state.userEmail.includes(\"@\")) {\r\n            this.setState({ error: \"Mail Should Include @\", err: true, iconColor: \"text-danger\" });\r\n            this.error()\r\n        } else if (!this.state.userEmail.includes(\".ibm.com\")) {\r\n            this.setState({ error: \"Mail Should Include .ibm.com\", err: true, iconColor: \"text-danger\" });\r\n            this.error()\r\n        }\r\n        else if (this.state.role === \"SME\") {\r\n            if (this.state.issueType.length === 0 || this.state.stagename === \"\") {\r\n                this.setState({ error: \"All Fields Are Mandatory\", err: true, iconColor: \"text-danger\" });\r\n                this.error()\r\n            }\r\n            else if (this.state.categoryType.length === 0) {\r\n                this.setState({ error: \"Please Choose Sub-Category\", err: true, iconColor: \"text-danger\" });\r\n                this.error()\r\n            }\r\n            else {\r\n                this.checkForUpdate()\r\n            }\r\n        }\r\n        else {\r\n            this.checkForUpdate()\r\n        }\r\n    }\r\n    Reset = () => {\r\n        setTimeout(() => {\r\n            this.handleReset()\r\n        }, 1000)\r\n    }\r\n    render() {\r\n        // console.log(this.props)\r\n        // console.log(this.state)\r\n        const options = {\r\n            responsive: \"scroll\",\r\n            selectableRows: 'Single',\r\n            customToolbar: () => {\r\n                return (<Tooltip title={\"Add User\"}>\r\n                    <IconButton className='addicon' onClick={e => this.handleAdduser()}>\r\n                        <AddIcon /></IconButton></Tooltip>)\r\n            },\r\n            onRowClick: (_, { dataIndex }) => {\r\n                var selected_data = this.props.allUsers[dataIndex]\r\n                this.setState({\r\n                    show: true,\r\n                    flag: true,\r\n                    UID: selected_data.UID,\r\n                    username: selected_data.EMP_NAME,\r\n                    userEmail: selected_data.EMP_EMAIL,\r\n                    role: selected_data.ROLE,\r\n                    empId: selected_data.EMP_ID,\r\n                    stagename: selected_data.STAGE_NAME,\r\n                    update: \"update\"\r\n                })\r\n                console.log(selected_data)\r\n                var issueTyp = selected_data.ISSUE_TYPE !== null && selected_data.ISSUE_TYPE.length > 0 ? (selected_data.ISSUE_TYPE).split(',') : []\r\n\r\n                var section = [];\r\n                var subCat;\r\n                this.props.issueTypes && this.props.issueTypes.forEach(function (opt) {\r\n                    for (var n = 0; n < issueTyp.length; n++) {\r\n                        if (opt.name === issueTyp[n]) {\r\n                            var sec = opt.section\r\n                            sec && sec.forEach((sect) => {\r\n                                section.push(sect)\r\n                            })\r\n                            subCat = selected_data.ISSUE_CATEGORY !== null ? (selected_data.ISSUE_CATEGORY).split(',') : []\r\n                        }\r\n                    }\r\n                    if (subCat === undefined) {\r\n                        subCat = []\r\n                    }\r\n                })\r\n                this.setState({ issueType: issueTyp, sections: section, categoryType: subCat })\r\n            },\r\n            onRowsDelete: (rowsDeleted) => {\r\n                var data = this.props.allUsers[rowsDeleted.data[0].dataIndex].UID\r\n                this.props.actions.deleteUser({\r\n                    \"mail\": data,\r\n                    loggedinUser: this.props.user_details.username,\r\n                    loggedinEmail: this.props.user_details.userEmail,\r\n                    id: this.props.allUsers[rowsDeleted.data[0].dataIndex].EMP_EMAIL\r\n                })\r\n                setTimeout(() => {\r\n                    if (this.props.deleteRes.status === 200) {\r\n                        this.setState({ show: false, spinnerFlag: false, err: true, error: \"Record Deleted\", iconColor: \"text-success\" })\r\n                        this.error();\r\n                    }\r\n                    else {\r\n                        this.setState({ show: false, err: true, error: \"Please Try Again, or Contact System Adminstrator!\", iconColor: \"text-danger\" })\r\n                        this.error();\r\n                    }\r\n                }, 4000)\r\n            },\r\n            textLabels: {\r\n                body: {\r\n                    noMatch: \"Sorry, no matching records found\",\r\n                    toolTip: \"Sort\",\r\n                    columnHeaderTooltip: column => `Sort for ${column.label}`\r\n                },\r\n                pagination: {\r\n                    next: \"Next Page\",\r\n                    previous: \"Previous Page\",\r\n                    rowsPerPage: \"Rows per page:\",\r\n                    displayRows: \"of\",\r\n                },\r\n                toolbar: {\r\n                    search: \"Search\",\r\n                    downloadCsv: \"Download CSV\",\r\n                    print: \"Print\",\r\n                    viewColumns: \"View Columns\",\r\n                    filterTable: \"Filter Table\",\r\n                },\r\n                filter: {\r\n                    all: \"All\",\r\n                    title: \"FILTERS\",\r\n                    reset: \"RESET\",\r\n                },\r\n                viewColumns: {\r\n                    title: \"Show Columns\",\r\n                    titleAria: \"Show/Hide Table Columns\",\r\n                },\r\n                selectedRows: {\r\n                    text: \"row(s) selected\",\r\n                    delete: \"Delete\",\r\n                    deleteAria: \"Delete Selected Rows\",\r\n                },\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"container-fluid Table\">\r\n                {(this.props.allUsers && this.props.allUsers.lenght !== 0) ?\r\n                    <MUIDataTable\r\n                        title={\"Users List\"}\r\n                        data={this.props.allUsers}\r\n                        columns={columns}\r\n                        options={options}\r\n                    /> :\r\n                    <div className=\"text-center\">\r\n                        <div className=\"spinner-border\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </div>}\r\n                <Modal show={this.state.show} onHide={e => this.handleClose()} dialogClassName=\"modal-user\" size=\"lg\">\r\n                    <Modal.Header style={{ borderBottom: '5px #0c5bac solid', color: '#0c5bac' }} closeButton>\r\n                        <Modal.Title >{this.state.flag === false ? \"Add User\" : \"Update User\"}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-1 col-md-1\"></div>\r\n                            <div className=\"col-sm-11 col-md-10 text-center\">\r\n                                <div className=\"row m-2\">\r\n                                    <div className=\"col-sm-12 col-md-4 pt-2\">\r\n                                        <label><strong>Employee Mail ID:</strong></label>\r\n                                    </div>\r\n                                    {this.state.update === \"update\" ?\r\n                                        <div className=\"col-sm-12 col-md-7\">\r\n                                            <input\r\n                                                type=\"email\"\r\n                                                className=\"form-control\"\r\n                                                aria-describedby=\"emailHelp\"\r\n                                                value={this.state.userEmail}\r\n                                                readOnly\r\n                                            ></input>\r\n                                        </div> :\r\n                                        <div className=\"col-sm-12 col-md-7\">\r\n                                            <input\r\n                                                type=\"email\"\r\n                                                className=\"form-control\"\r\n                                                aria-describedby=\"emailHelp\"\r\n                                                value={this.state.userEmail}\r\n                                                onChange={e => {\r\n                                                    this.setState({ userEmail: e.target.value });\r\n                                                    setTimeout(() => { this.getUserName(this.state.userEmail) }, 3000)\r\n                                                }}\r\n                                            ></input>\r\n                                        </div>}\r\n                                </div>\r\n                                {this.state.username !== \"\" && <div className=\"row m-2\">\r\n                                    <div className=\"col-sm-12 col-md-4 pt-2\">\r\n                                        <label><strong>Employee Name:</strong></label>\r\n                                    </div>\r\n                                    <div className=\"col-sm-12 col-md-7\">\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            value={this.state.username}\r\n                                            disabled\r\n                                        ></input>\r\n                                    </div>\r\n                                </div>}\r\n                                <div className=\"row m-2\">\r\n                                    <div className=\"col-sm-12 col-md-4 pt-2\">\r\n                                        <label><strong>Role:</strong></label>\r\n                                    </div>\r\n                                    <div className=\"col-sm-12 col-md-7\">\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            value={this.state.role}\r\n                                            onChange={e => this.handleRole(e)}>\r\n                                            <option></option>\r\n                                            {roles && roles.map((opt) => {\r\n                                                return (\r\n                                                    <option key={opt}>{opt}</option>\r\n                                                )\r\n                                            })}</select>\r\n                                    </div>\r\n                                </div>\r\n                                {/* Geography */}\r\n                                <div className=\"row m-2\">\r\n                                    <div className=\"col-sm-12 col-md-4 pt-2\">\r\n                                        <label><strong>Geography:</strong></label>\r\n                                    </div>\r\n                                    <div className=\"col-sm-12 col-md-7\">\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            value={this.state.geography}\r\n                                            onChange={e => this.setState({ geography: e.target.value })}>\r\n                                            <option></option>\r\n                                            {geo && geo.sort().map((opt) => {\r\n                                                return (\r\n                                                    <option key={opt}>{opt}</option>\r\n                                                )\r\n                                            })}</select>\r\n                                    </div>\r\n                                </div>\r\n                                {(this.state.role === \"SME\" || this.state.role === \"Super User\") &&\r\n                                    <div className=\"row m-2\">\r\n                                        <div className=\"col-sm-12 col-md-4 pt-2\">\r\n                                            <label><strong>Stage Name:</strong></label>\r\n                                        </div>\r\n                                        <div className=\"col-sm-12 col-md-7\">\r\n                                            <input\r\n                                                className=\"form-control\"\r\n                                                value={this.state.stagename}\r\n                                                onChange={e => this.setState({ stagename: e.target.value })}></input>\r\n                                        </div>\r\n                                    </div>}\r\n                                {this.state.role === \"SME\" && this.state.types && this.state.types.length !== 0 &&\r\n                                    <div>\r\n                                        <div className=\"row m-2\">\r\n                                            <div className=\"col-sm-12 col-md-4 pt-2\">\r\n                                                <label><strong>Category:</strong></label>\r\n                                            </div>\r\n                                            <div className=\"col-sm-12 col-md-7\">\r\n                                                <Select\r\n                                                    multiple\r\n                                                    className=\"form-control\"\r\n                                                    name=\"acc_name\"\r\n                                                    value={this.state.issueType}\r\n                                                    onChange={e => this.handleChangeType(e)}\r\n                                                    input={<Input disableUnderline />}\r\n                                                    renderValue={selected => selected.join(', ')}\r\n\r\n                                                >\r\n                                                    {(this.state.types) && this.state.types.map(name => (\r\n                                                        <MenuItem key={name} value={name}>\r\n                                                            <Checkbox checked={this.state.issueType.indexOf(name) > -1} />\r\n                                                            <ListItemText primary={name} />\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </Select>\r\n                                            </div>\r\n                                        </div>\r\n                                        {this.state.sections && this.state.sections.length !== 0 &&\r\n                                            <div className=\"row m-2\">\r\n                                                <div className=\"col-sm-12 col-md-4 pt-2\">\r\n                                                    <label><strong>Portals & Dashboard:</strong></label>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-7\">\r\n                                                    <Select\r\n                                                        multiple\r\n                                                        className=\"form-control\"\r\n                                                        name=\"acc_name\"\r\n                                                        value={this.state.categoryType}\r\n                                                        onChange={e => this.setState({ categoryType: e.target.value })}\r\n                                                        input={<Input disableUnderline />}\r\n                                                        renderValue={selected => selected.join(', ')}\r\n\r\n                                                    >\r\n                                                        {(this.state.sections) && this.state.sections.map(name => (\r\n                                                            <MenuItem key={name} value={name}>\r\n                                                                <Checkbox checked={this.state.categoryType.indexOf(name) > -1} />\r\n                                                                <ListItemText primary={name} />\r\n                                                            </MenuItem>\r\n                                                        ))}\r\n                                                    </Select>\r\n                                                </div>\r\n                                            </div>}\r\n                                    </div>}\r\n                                {this.state.role === \"Super User\" && this.state.types && this.state.types.length !== 0 &&\r\n                                    <div>\r\n                                        <div className=\"row m-2\">\r\n                                            <div className=\"col-sm-12 col-md-4 pt-2\">\r\n                                                <label><strong>Category:</strong></label>\r\n                                            </div>\r\n                                            <div className=\"col-sm-12 col-md-7\">\r\n                                                <Select\r\n                                                    multiple\r\n                                                    className=\"form-control\"\r\n                                                    name=\"acc_name\"\r\n                                                    value={this.state.issueType}\r\n                                                    onChange={e => this.handleChangeType(e)}\r\n                                                    input={<Input disableUnderline />}\r\n                                                    renderValue={selected => selected.join(', ')}\r\n\r\n                                                >\r\n                                                    {(this.state.types) && this.state.types.map(name => (\r\n                                                        <MenuItem key={name} value={name}>\r\n                                                            <Checkbox checked={this.state.issueType.indexOf(name) > -1} />\r\n                                                            <ListItemText primary={name} />\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </Select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>}\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    {this.state.flag === false ?\r\n                        <Modal.Footer>\r\n                            <button type=\"button\" className=\"btn \" style={{ backgroundColor: '#0c5bac', color: '#fff' }} onClick={e => this.handleAdd()}>Add</button>\r\n                            {this.state.spinnerFlag === true && <div className=\"text-center\">\r\n                                <div className=\"spinner-border\" role=\"status\">\r\n                                    <span className=\"sr-only\">Loading...</span>\r\n                                </div>\r\n                            </div>}\r\n                        </Modal.Footer>\r\n                        :\r\n                        <Modal.Footer>\r\n                            <button type=\"button\" className=\"btn \" style={{ backgroundColor: '#0c5bac', color: '#fff' }} onClick={e => this.handleUpdate()}>Update</button>\r\n                            {this.state.spinnerFlag === true && <div className=\"text-center\">\r\n                                <div className=\"spinner-border\" role=\"status\">\r\n                                    <span className=\"sr-only\">Loading...</span>\r\n                                </div>\r\n                            </div>}\r\n                        </Modal.Footer>}\r\n                </Modal>\r\n                <Snackbar\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.err}\r\n                    className='snacking'\r\n                    message={this.state.error}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    allUsers: state.page.allUsers,\r\n    userRes: state.page.userRes,\r\n    deleteRes: state.page.deleteRes,\r\n    user_details: state.user.user_details,\r\n    issueTypes: state.page.issueTypes,\r\n    updateuserRes: state.page.updateuserRes,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    actions: bindActionCreators({ getAllUsers, addUser, deleteUser, getAllIssueTypes, updateUser }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Access);","export default __webpack_public_path__ + \"static/media/ibm.e94aa12b.png\";","import React from \"react\";\r\nimport '../styles/Footer.css';\r\nimport ibm from '../images/ibm.png';\r\n\r\nconst FooterPage = () => {\r\n  return (\r\n    <div className='footer'>\r\n      <img src={ibm} alt=\"ibm-logo\" className=\"ibm-footer-image\"></img>\r\n      <footer className=\"footer-text\">\r\n        <span className=\"\">&copy; {new Date().getFullYear()} Pioneered By CPSD</span>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FooterPage;","import React, { Component } from 'react';\r\nimport { getAllIssueTypes, addIssue, deleteIssue } from '../actions/index';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nclass Addissue extends Component {\r\n    state = {\r\n        issueType: \"\",\r\n        newCategory: '',\r\n        newIssue: '',\r\n        prevIssue: '',\r\n        prevaddCategory: '',\r\n        prevCategory: '',\r\n        existCategory: '',\r\n        allprevIssue: '',\r\n        err: false,\r\n        error: '',\r\n        updateCategory: '',\r\n        ticketType: '',\r\n        existsubCategory: '',\r\n        newsubCategory: '',\r\n        newticketType: '',\r\n        existticketType: '',\r\n        ticket_type: [],\r\n    }\r\n    UNSAFE_componentWillMount() {\r\n        this.props.actions.getAllIssueTypes()\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.issueTypes !== this.props.issueTypes) {\r\n            if (this.props.issueTypes && this.props.issueTypes.length !== 0) {\r\n                this.setState({ allprevIssue: this.props.issueTypes })\r\n            }\r\n        }\r\n        if (prevState.issueType !== this.state.issueType) {\r\n            this.setState({\r\n                newCategory: '',\r\n                newIssue: '',\r\n                prevIssue: '',\r\n                prevaddCategory: '',\r\n                prevCategory: '',\r\n                existCategory: '',\r\n                updateCategory: '',\r\n                ticketType: '',\r\n                existsubCategory: '',\r\n                newsubCategory: '',\r\n                newticketType: '',\r\n                existticketType: '',\r\n                ticket_type: [],\r\n            })\r\n        }\r\n    }\r\n    error = () => {\r\n        setTimeout(() => {\r\n            this.setState({ err: false, error: '' })\r\n        }, 3500);\r\n    }\r\n    handleChangeType(e) {\r\n        var section;\r\n        this.state.allprevIssue && this.state.allprevIssue.forEach(function (opt) {\r\n            if (opt.name === e.target.value) {\r\n                section = opt.section;\r\n            }\r\n        })\r\n        this.setState({ prevIssue: e.target.value, prevCategory: section, existsubCategory: '', newsubCategory: '', existticketType: '', newticketType: '' })\r\n    }\r\n    handleSubCategory = (e) => {\r\n        var ticket_type;\r\n        this.state.allprevIssue && this.state.allprevIssue.forEach(function (opt) {\r\n            for (var s = 0; s < opt.ticketType.length; s++) {\r\n                if (opt.ticketType[s].section === e) {\r\n                    ticket_type = opt.ticketType[s].type;\r\n                }\r\n            }\r\n        })\r\n        this.setState({ existsubCategory: e, ticket_type: ticket_type, existticketType: '', newticketType: '' })\r\n    }\r\n    handleAdd = (val) => {\r\n        if (val === \"Add\") {\r\n            if (this.state.newIssue === \"\" || this.state.newCategory === \"\" || this.state.ticketType === \"\") {\r\n                this.setState({ error: \"All fileds are mandatory\", err: true, iconColor: \"text-danger\" });\r\n                this.error();\r\n            }\r\n            else {\r\n                this.curdOperations(this.state.newIssue, this.state.newCategory, this.state.ticketType, \"Add\")\r\n            }\r\n        }\r\n        else if (val === \"Add Sub-Category\") {\r\n            if (this.state.prevIssue === \"\" || this.state.prevaddCategory === \"\" || this.state.ticketType === \"\") {\r\n                this.setState({ error: \"All fileds are mandatory\", err: true, iconColor: \"text-danger\" });\r\n                this.error();\r\n            }\r\n            else {\r\n                this.curdOperations(this.state.prevIssue, this.state.prevaddCategory, this.state.ticketType, \"Add Sub-Category\")\r\n            }\r\n        }\r\n        else if (val === \"Update Category\") {\r\n            if (this.state.prevIssue === \"\" || this.state.updateCategory === \"\") {\r\n                this.setState({ error: \"All fileds are mandatory\", err: true, iconColor: \"text-danger\" });\r\n                this.error();\r\n\r\n            }\r\n            else {\r\n                this.curdOperations(this.state.prevIssue, this.state.updateCategory, \"\", \"Update Category\")\r\n            }\r\n        }\r\n        else if (val === \"Update Sub-Category\") {\r\n            if (this.state.prevIssue === \"\" || this.state.existsubCategory === \"\" || this.state.newsubCategory === \"\") {\r\n                this.setState({ error: \"All fileds are mandatory\", err: true, iconColor: \"text-danger\" });\r\n                this.error();\r\n\r\n            }\r\n            else {\r\n                this.setState({ spinnerFlag: true })\r\n                var obj = {}\r\n                Object.assign(obj, {\r\n                    cat: this.state.prevIssue,\r\n                    sub_cat: this.state.existsubCategory,\r\n                    new_sub_cat: this.state.newsubCategory,\r\n                    val: \"Update Sub-Category\",\r\n                    loggedinUser: this.props.user_details.username,\r\n                    \"email\": this.props.user_details.userEmail,\r\n                })\r\n                this.updateIssues(obj)\r\n            }\r\n        }\r\n        else if (val === \"Update Ticket Type\") {\r\n            if (this.state.prevIssue === \"\" || this.state.existsubCategory === \"\" || this.state.existticketType === \"\" || this.state.newticketType === \"\") {\r\n                this.setState({ error: \"All fileds are mandatory\", err: true, iconColor: \"text-danger\" });\r\n                this.error();\r\n            }\r\n            else {\r\n                this.setState({ spinnerFlag: true })\r\n                var updateObj = {}\r\n                Object.assign(updateObj, {\r\n                    cat: this.state.prevIssue,\r\n                    sub_cat: this.state.existsubCategory,\r\n                    ticket_type: this.state.existticketType,\r\n                    new_ticket_type: this.state.newticketType,\r\n                    val: \"Update Ticket Type\",\r\n                    loggedinUser: this.props.user_details.username,\r\n                    \"email\": this.props.user_details.userEmail,\r\n                })\r\n                this.updateIssues(updateObj)\r\n            }\r\n        }\r\n        else if (val === \"Add Ticket Type\") {\r\n            if (this.state.prevIssue === \"\" || this.state.existCategory === \"\" || this.state.ticketType === \"\") {\r\n                this.setState({ error: \"All fileds are mandatory\", err: true, iconColor: \"text-danger\" });\r\n                this.error();\r\n            }\r\n            else {\r\n                this.curdOperations(this.state.prevIssue, this.state.existCategory, this.state.ticketType, \"Add Ticket Type\")\r\n            }\r\n        }\r\n    }\r\n    updateIssues = (obj) => {\r\n        this.props.actions.addIssue(obj)\r\n        setTimeout(() => {\r\n            if (this.props.addIssueData.status === 200) {\r\n                this.setState({ error: this.props.addIssueData.data.message, err: true, iconColor: \"text-success\", spinnerFlag: false });\r\n                this.error();\r\n                this.Reset();\r\n            }\r\n            else {\r\n                this.setState({ show: false, err: true, error: \"Something Went wrong\", iconColor: \"text-danger\", spinnerFlag: false })\r\n                this.error();\r\n            }\r\n        }, 8000)\r\n    }\r\n    curdOperations = (category, subCategory, ticketType, key) => {\r\n        this.setState({ spinnerFlag: true })\r\n        var obj = {}\r\n        Object.assign(obj, {\r\n            issue: category,\r\n            category: subCategory,\r\n            ticketType: ticketType,\r\n            val: key,\r\n            \"email\": this.props.user_details.userEmail,\r\n            loggedinUser: this.props.user_details.username\r\n        })\r\n        this.props.actions.addIssue(obj)\r\n        setTimeout(() => {\r\n            if (this.props.addIssueData.status === 200) {\r\n                this.setState({ error: this.props.addIssueData.data.message, err: true, iconColor: \"text-success\", spinnerFlag: false });\r\n                this.error();\r\n                this.Reset();\r\n            }\r\n            else {\r\n                this.setState({ show: false, err: true, error: \"Something Went wrong\", iconColor: \"text-danger\", spinnerFlag: false })\r\n                this.error();\r\n            }\r\n        }, 8000)\r\n    }\r\n    Reset = () => {\r\n        setTimeout(() => {\r\n            this.handleReset()\r\n        }, 1000)\r\n    }\r\n    handleReset = () => {\r\n        this.setState({\r\n            issueType: \"\",\r\n            newCategory: '',\r\n            newIssue: '',\r\n            prevIssue: '',\r\n            prevaddCategory: '',\r\n            prevCategory: '',\r\n            existCategory: '',\r\n            updateCategory: '',\r\n            ticketType: '',\r\n            existsubCategory: '',\r\n            newsubCategory: '',\r\n            newticketType: '',\r\n            existticketType: '',\r\n            ticket_type: [],\r\n        })\r\n    }\r\n    handleDelete = (val) => {\r\n        if (val === \"Delete Category\") {\r\n            if (this.state.prevIssue === \"\") {\r\n                this.setState({ error: \"Please selete Category\", err: true, iconColor: \"text-danger\" });\r\n                this.error();\r\n            }\r\n            else {\r\n                this.Delete(this.state.prevIssue, \"\", 'issue')\r\n            }\r\n        }\r\n        else if (val === \"Delete Sub-Category\") {\r\n            if (this.state.prevIssue === \"\" || this.state.existCategory === \"\") {\r\n                this.setState({ error: \"All fileds are mandatory\", err: true, iconColor: \"text-danger\" });\r\n                this.error();\r\n            }\r\n            else {\r\n                this.Delete(this.state.prevIssue, this.state.existCategory, '')\r\n            }\r\n        }\r\n\r\n    }\r\n    Delete = (issue, category, key) => {\r\n        var obj = {};\r\n        Object.assign(obj, {\r\n            issue: issue,\r\n            category: category,\r\n            type: key,\r\n            \"email\": this.props.user_details.userEmail,\r\n            loggedinUser: this.props.user_details.username\r\n        })\r\n        this.props.actions.deleteIssue(obj)\r\n        this.setState({ spinnerFlag: true })\r\n        setTimeout(() => {\r\n            if (this.props.deleteIssue.status === 200) {\r\n                this.setState({ error: \"Issue Deleted\", err: true, iconColor: \"text-success\", spinnerFlag: false });\r\n                this.error();\r\n                this.Reset();\r\n            }\r\n            else {\r\n                this.setState({ show: false, err: true, error: \"Something Went wrong\", iconColor: \"text-danger\", spinnerFlag: false })\r\n                this.error();\r\n            }\r\n        }, 8000)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"card main-card\">\r\n                    <div className=\"card-header text-center createheader\">Adding Issue</div>\r\n                    <div className=\"card-body cardbody\">\r\n                        <div className=\"row\">\r\n                            {/* <div className=\"col-md-2\"></div> */}\r\n                            <div className=\"col-sm-12 col-md-12\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-6 col-md-1\">\r\n                                        <label className=\"\"><strong>Issue</strong></label>\r\n                                    </div>\r\n                                    <div className=\"col-sm-6  col-md-11\">\r\n                                        <label className=\"radio pr-4\">\r\n                                            <input\r\n                                                value=\"Add\"\r\n                                                checked={this.state.issueType === \"Add\"}\r\n                                                type=\"radio\"\r\n                                                onChange={e => this.setState({ issueType: e.target.value })} />&nbsp;&nbsp;Add Category</label>\r\n                                        <label className=\"radio  pr-4 issueType\">\r\n                                            <input type=\"radio\" value=\"Add Sub-Category\"\r\n                                                checked={this.state.issueType === \"Add Sub-Category\"}\r\n                                                onChange={e => this.setState({ issueType: e.target.value })} />&nbsp;&nbsp;Add Portals & Dashboard</label>\r\n                                        <label className=\"radio  pr-4 issueType\">\r\n                                            <input type=\"radio\" value=\"Add Ticket Type\"\r\n                                                checked={this.state.issueType === \"Add Ticket Type\"}\r\n                                                onChange={e => this.setState({ issueType: e.target.value })} />&nbsp;&nbsp;Add Ticket Type</label>\r\n                                        <label className=\"radio  pr-4 issueType\">\r\n                                            <input type=\"radio\" value=\"Update Category\"\r\n                                                checked={this.state.issueType === \"Update Category\"}\r\n                                                onChange={e => this.setState({ issueType: e.target.value })} />&nbsp;&nbsp;Update Category</label>\r\n                                        <label className=\"radio  pr-4 issueType\">\r\n                                            <input type=\"radio\" value=\"Update Sub-Category\"\r\n                                                checked={this.state.issueType === \"Update Sub-Category\"}\r\n                                                onChange={e => this.setState({ issueType: e.target.value })} />&nbsp;&nbsp;Update Portals & Dashboard</label>\r\n                                        <label className=\"radio  pr-4 issueType\">\r\n                                            <input type=\"radio\" value=\"Update Ticket Type\"\r\n                                                checked={this.state.issueType === \"Update Ticket Type\"}\r\n                                                onChange={e => this.setState({ issueType: e.target.value })} />&nbsp;&nbsp;Update Ticket Type</label>\r\n                                        <label className=\"radio pr-4 issueType\">\r\n                                            <input\r\n                                                value=\"Delete Category\"\r\n                                                checked={this.state.issueType === \"Delete Category\"}\r\n                                                type=\"radio\"\r\n                                                onChange={e => this.setState({ issueType: e.target.value })} />&nbsp;&nbsp;Delete Category</label>\r\n                                        <label className=\"radio\">\r\n                                            <input\r\n                                                value=\"Delete Sub-Category\"\r\n                                                checked={this.state.issueType === \"Delete Sub-Category\"}\r\n                                                type=\"radio\"\r\n                                                onChange={e => this.setState({ issueType: e.target.value })} />&nbsp;&nbsp;Delete Portals & Dashboard</label><br />\r\n                                    </div>\r\n                                </div>\r\n                                {this.state.issueType === \"Add\" && <div>\r\n                                    <div className=\"row pb-2\">\r\n                                        <div className=\"col-sm-6 col-md-1\">\r\n                                            <label className=\"pt-2\"><strong>Category</strong></label>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6 col-md-5\">\r\n                                            <input\r\n                                                value={this.state.newIssue}\r\n                                                className=\"form-control\"\r\n                                                onChange={e => this.setState({ newIssue: e.target.value })}></input>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row pb-2\">\r\n                                        <div className=\"col-sm-6 col-md-1\">\r\n                                            <label className=\"pt-2\"><strong>Portals & Dashboard</strong></label>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6   col-md-5\">\r\n                                            <input\r\n                                                value={this.state.newCategory}\r\n                                                className=\"form-control\"\r\n                                                onChange={e => this.setState({ newCategory: e.target.value })}></input>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row pb-2\">\r\n                                        <div className=\"col-sm-6 col-md-1\">\r\n                                            <label className=\"pt-2\"><strong>Ticket Type</strong></label>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6 col-md-5\">\r\n                                            <input\r\n                                                value={this.state.ticketType}\r\n                                                className=\"form-control\"\r\n                                                onChange={e => this.setState({ ticketType: e.target.value })}>\r\n                                            </input>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>}\r\n                                {this.state.issueType === \"Add Sub-Category\" && this.state.allprevIssue && this.state.allprevIssue.lenght !== 0 &&\r\n                                    <div>\r\n                                        <div className=\"row pb-2\">\r\n                                            <div className=\"col-sm-6 col-md-1\">\r\n                                                <label className=\"pt-2\"><strong>Category</strong></label>\r\n                                            </div>\r\n                                            <div className=\"col-sm-6 col-md-5\">\r\n                                                <select\r\n                                                    value={this.state.prevIssue}\r\n                                                    className=\"form-control\"\r\n                                                    onChange={e => this.handleChangeType(e)}>\r\n                                                    <option value=\"\" disabled>Choose From Dropdown</option>\r\n                                                    {this.state.allprevIssue && this.state.allprevIssue.map((opt) => {\r\n                                                        return (\r\n                                                            <option key={opt.name}>{opt.name}</option>\r\n                                                        )\r\n                                                    })}</select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row pb-2\">\r\n                                            <div className=\"col-sm-6 col-md-1\">\r\n                                                <label className=\"pt-2\"><strong>Portals & Dashboard</strong></label>\r\n                                            </div>\r\n                                            <div className=\"col-sm-6   col-md-5\">\r\n                                                <input\r\n                                                    value={this.state.prevaddCategory}\r\n                                                    className=\"form-control\"\r\n                                                    onChange={e => this.setState({ prevaddCategory: e.target.value })}></input>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row pb-2\">\r\n                                            <div className=\"col-sm-6 col-md-1\">\r\n                                                <label className=\"pt-2\"><strong>Ticket Type</strong></label>\r\n                                            </div>\r\n                                            <div className=\"col-sm-6 col-md-5\">\r\n                                                <input\r\n                                                    value={this.state.ticketType}\r\n                                                    className=\"form-control\"\r\n                                                    onChange={e => this.setState({ ticketType: e.target.value })}>\r\n                                                </input>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                {this.state.issueType === \"Add Ticket Type\" && this.state.allprevIssue && this.state.allprevIssue.lenght !== 0 &&\r\n                                    <div>\r\n                                        <div className=\"row pb-2\">\r\n                                            <div className=\"col-sm-6 col-md-1\">\r\n                                                <label className=\"pt-2\"><strong>Category</strong></label>\r\n                                            </div>\r\n                                            <div className=\"col-sm-6 col-md-5\">\r\n                                                <select\r\n                                                    value={this.state.prevIssue}\r\n                                                    className=\"form-control\"\r\n                                                    onChange={e => this.handleChangeType(e)}>\r\n                                                    <option value=\"\" disabled>Choose From Dropdown</option>\r\n                                                    {this.state.allprevIssue && this.state.allprevIssue.map((opt) => {\r\n                                                        return (\r\n                                                            <option key={opt.name}>{opt.name}</option>\r\n                                                        )\r\n                                                    })}</select>\r\n                                            </div>\r\n                                        </div>\r\n                                        {this.state.prevCategory && this.state.prevCategory.length !== 0 &&\r\n                                            <div className=\"row pb-2\">\r\n                                                <div className=\"col-sm-6 col-md-1\">\r\n                                                    <label className=\"pt-2\"><strong>Portals & Dashboard</strong></label>\r\n                                                </div>\r\n                                                <div className=\"col-sm-6   col-md-5\">\r\n                                                    <select\r\n                                                        value={this.state.existCategory}\r\n                                                        className=\"form-control\"\r\n                                                        onChange={e => this.setState({ existCategory: e.target.value })}>\r\n                                                        <option value=\"\" disabled>Choose From Dropdown</option>\r\n                                                        {this.state.prevCategory && this.state.prevCategory.map((opt) => {\r\n                                                            return (\r\n                                                                <option key={opt}>{opt}</option>\r\n                                                            )\r\n                                                        })}</select>\r\n                                                </div>\r\n                                            </div>}\r\n                                        {this.state.existCategory && this.state.existCategory !== '' &&\r\n                                            <div className=\"row pb-2\">\r\n                                                <div className=\"col-sm-6 col-md-1\">\r\n                                                    <label className=\"pt-2\"><strong>Ticket Type</strong></label>\r\n                                                </div>\r\n                                                <div className=\"col-sm-6 col-md-5\">\r\n                                                    <input\r\n                                                        value={this.state.ticketType}\r\n                                                        className=\"form-control\"\r\n                                                        onChange={e => this.setState({ ticketType: e.target.value })}>\r\n                                                    </input>\r\n                                                </div>\r\n                                            </div>}\r\n                                    </div>\r\n                                }\r\n                                {this.state.issueType === \"Update Category\" && this.state.allprevIssue && this.state.allprevIssue.lenght !== 0 &&\r\n                                    <div>\r\n                                        <div className=\"row pb-2\">\r\n                                            <div className=\"col-sm-6 col-md-2\">\r\n                                                <label className=\"pt-2\"><strong>Existing Category</strong></label>\r\n                                            </div>\r\n                                            <div className=\"col-sm-6 col-md-5\">\r\n                                                <select\r\n                                                    value={this.state.prevIssue}\r\n                                                    className=\"form-control\"\r\n                                                    onChange={e => this.handleChangeType(e)}>\r\n                                                    <option value=\"\" disabled>Choose From Dropdown</option>\r\n                                                    {this.state.allprevIssue && this.state.allprevIssue.map((opt) => {\r\n                                                        return (\r\n                                                            <option key={opt.name}>{opt.name}</option>\r\n                                                        )\r\n                                                    })}</select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row pb-2\">\r\n                                            <div className=\"col-sm-6 col-md-2\">\r\n                                                <label className=\"pt-2\"><strong>Category</strong></label>\r\n                                            </div>\r\n                                            <div className=\"col-sm-6   col-md-5\">\r\n                                                <input\r\n                                                    value={this.state.updateCategory}\r\n                                                    className=\"form-control\"\r\n                                                    onChange={e => this.setState({ updateCategory: e.target.value })}></input>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                {this.state.issueType === \"Update Sub-Category\" && this.state.allprevIssue && this.state.allprevIssue.lenght !== 0 &&\r\n                                    <div>\r\n                                        <div className=\"row pb-2\">\r\n                                            <div className=\"col-sm-6 col-md-2\">\r\n                                                <label className=\"pt-2\"><strong>Category</strong></label>\r\n                                            </div>\r\n                                            <div className=\"col-sm-6 col-md-5\">\r\n                                                <select\r\n                                                    value={this.state.prevIssue}\r\n                                                    className=\"form-control\"\r\n                                                    onChange={e => this.handleChangeType(e)}>\r\n                                                    <option value=\"\" disabled>Choose From Dropdown</option>\r\n                                                    {this.state.allprevIssue && this.state.allprevIssue.map((opt) => {\r\n                                                        return (\r\n                                                            <option key={opt.name}>{opt.name}</option>\r\n                                                        )\r\n                                                    })}</select>\r\n                                            </div>\r\n                                        </div>\r\n                                        {this.state.prevCategory && this.state.prevCategory.length !== 0 &&\r\n                                            <div className=\"row pb-2\">\r\n                                                <div className=\"col-sm-6 col-md-2\">\r\n                                                    <label className=\"pt-2\"><strong>Portals & Dashboard</strong></label>\r\n                                                </div>\r\n                                                <div className=\"col-sm-6   col-md-5\">\r\n                                                    <select\r\n                                                        value={this.state.existsubCategory}\r\n                                                        className=\"form-control\"\r\n                                                        onChange={e => this.setState({ existsubCategory: e.target.value })}>\r\n                                                        <option value=\"\" disabled>Choose From Dropdown</option>\r\n                                                        {this.state.prevCategory && this.state.prevCategory.map((opt) => {\r\n                                                            return (\r\n                                                                <option key={opt}>{opt}</option>\r\n                                                            )\r\n                                                        })}</select>\r\n                                                </div>\r\n                                            </div>\r\n                                        }\r\n                                        <div className=\"row pb-2\">\r\n                                            <div className=\"col-sm-6 col-md-2\">\r\n                                                <label className=\"pt-2\"><strong>New Portals & Dashboard</strong></label>\r\n                                            </div>\r\n                                            <div className=\"col-sm-6  col-md-5\">\r\n                                                <input\r\n                                                    value={this.state.newsubCategory}\r\n                                                    className=\"form-control\"\r\n                                                    onChange={e => this.setState({ newsubCategory: e.target.value })}></input>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                {this.state.issueType === \"Update Ticket Type\" && this.state.allprevIssue && this.state.allprevIssue.lenght !== 0 &&\r\n                                    <div>\r\n                                        <div className=\"row pb-2\">\r\n                                            <div className=\"col-sm-6 col-md-2\">\r\n                                                <label className=\"pt-2\"><strong>Category</strong></label>\r\n                                            </div>\r\n                                            <div className=\"col-sm-6 col-md-5\">\r\n                                                <select\r\n                                                    value={this.state.prevIssue}\r\n                                                    className=\"form-control\"\r\n                                                    onChange={e => this.handleChangeType(e)}>\r\n                                                    <option value=\"\" disabled>Choose From Dropdown</option>\r\n                                                    {this.state.allprevIssue && this.state.allprevIssue.map((opt) => {\r\n                                                        return (\r\n                                                            <option key={opt.name}>{opt.name}</option>\r\n                                                        )\r\n                                                    })}</select>\r\n                                            </div>\r\n                                        </div>\r\n                                        {this.state.prevCategory && this.state.prevCategory.length !== 0 &&\r\n                                            <div className=\"row pb-2\">\r\n                                                <div className=\"col-sm-6 col-md-2\">\r\n                                                    <label className=\"pt-2\"><strong>Portals & Dashboard</strong></label>\r\n                                                </div>\r\n                                                <div className=\"col-sm-6   col-md-5\">\r\n                                                    <select\r\n                                                        value={this.state.existsubCategory}\r\n                                                        className=\"form-control\"\r\n                                                        //onChange={e => this.setState({ existsubCategory: e.target.value })}\r\n                                                        onChange={e => this.handleSubCategory(e.target.value)}\r\n                                                    >\r\n                                                        <option value=\"\" disabled>Choose From Dropdown</option>\r\n                                                        {this.state.prevCategory && this.state.prevCategory.map((opt) => {\r\n                                                            return (\r\n                                                                <option key={opt}>{opt}</option>\r\n                                                            )\r\n                                                        })}</select>\r\n                                                </div>\r\n                                            </div>\r\n                                        }\r\n                                        {this.state.ticket_type && this.state.ticket_type.lenght !== 0 &&\r\n                                            <div className=\"row pb-2\">\r\n                                                <div className=\"col-sm-6 col-md-2\">\r\n                                                    <label className=\"pt-2\"><strong>Existing Ticket Type</strong></label>\r\n                                                </div>\r\n                                                <div className=\"col-sm-6  col-md-5\">\r\n                                                    <select\r\n                                                        value={this.state.existticketType}\r\n                                                        className=\"form-control\"\r\n                                                        onChange={e => this.setState({ existticketType: e.target.value })}>\r\n                                                        <option value=\"\" disabled>Choose From Dropdown</option>\r\n                                                        {this.state.ticket_type && this.state.ticket_type.map((opt) => {\r\n                                                            return (\r\n                                                                <option key={opt}>{opt}</option>\r\n                                                            )\r\n                                                        })}\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        }\r\n                                        <div className=\"row pb-2\">\r\n                                            <div className=\"col-sm-6 col-md-2\">\r\n                                                <label className=\"pt-2\"><strong>New Ticket Type</strong></label>\r\n                                            </div>\r\n                                            <div className=\"col-sm-6  col-md-5\">\r\n                                                <input\r\n                                                    value={this.state.newticketType}\r\n                                                    className=\"form-control\"\r\n                                                    onChange={e => this.setState({ newticketType: e.target.value })}></input>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                {this.state.issueType === \"Delete Category\" && this.state.allprevIssue && this.state.allprevIssue.lenght !== 0 &&\r\n                                    <div>\r\n                                        <div className=\"row pb-2\">\r\n                                            <div className=\"col-sm-6 col-md-1\">\r\n                                                <label className=\"pt-2\"><strong>Category</strong></label>\r\n                                            </div>\r\n                                            <div className=\"col-sm-6 col-md-5\">\r\n                                                <select\r\n                                                    value={this.state.prevIssue}\r\n                                                    className=\"form-control\"\r\n                                                    onChange={e => this.handleChangeType(e)}>\r\n                                                    <option value=\"\" disabled>Choose From Dropdown</option>\r\n                                                    {this.state.allprevIssue && this.state.allprevIssue.map((opt) => {\r\n                                                        return (\r\n                                                            <option key={opt.name}>{opt.name}</option>\r\n                                                        )\r\n                                                    })}</select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                {this.state.issueType === \"Delete Sub-Category\" && this.state.allprevIssue && this.state.allprevIssue.lenght !== 0 &&\r\n                                    <div>\r\n                                        <div className=\"row pb-2\">\r\n                                            <div className=\"col-sm-6 col-md-1\">\r\n                                                <label className=\"pt-2\"><strong>Category</strong></label>\r\n                                            </div>\r\n                                            <div className=\"col-sm-6 col-md-5\">\r\n                                                <select\r\n                                                    value={this.state.prevIssue}\r\n                                                    className=\"form-control\"\r\n                                                    onChange={e => this.handleChangeType(e)}>\r\n                                                    <option value=\"\" disabled>Choose From Dropdown</option>\r\n                                                    {this.state.allprevIssue && this.state.allprevIssue.map((opt) => {\r\n                                                        return (\r\n                                                            <option key={opt.name}>{opt.name}</option>\r\n                                                        )\r\n                                                    })}</select>\r\n                                            </div>\r\n                                        </div>\r\n                                        {this.state.prevCategory && this.state.prevCategory.length !== 0 &&\r\n                                            <div className=\"row pb-2\">\r\n                                                <div className=\"col-sm-6 col-md-1\">\r\n                                                    <label className=\"pt-2\"><strong>Portals & Dashboard</strong></label>\r\n                                                </div>\r\n                                                <div className=\"col-sm-6   col-md-5\">\r\n                                                    <select\r\n                                                        value={this.state.existCategory}\r\n                                                        className=\"form-control\"\r\n                                                        onChange={e => this.setState({ existCategory: e.target.value })}>\r\n                                                        <option value=\"\" disabled>Choose From Dropdown</option>\r\n                                                        {this.state.prevCategory && this.state.prevCategory.map((opt) => {\r\n                                                            return (\r\n                                                                <option key={opt}>{opt}</option>\r\n                                                            )\r\n                                                        })}</select>\r\n                                                </div>\r\n                                            </div>}\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {this.state.issueType === \"Add\" &&\r\n                        <div className=\"card-footer createfooter\">\r\n                            <button className=\"btn btu-submit\" onClick={e => this.handleAdd(\"Add\")} >Add\r\n                            {this.state.spinnerFlag === true &&\r\n                                    <div className=\"spinner-border\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                }\r\n                            </button>\r\n                        </div>}\r\n                    {this.state.issueType === \"Update Category\" &&\r\n                        <div className=\"card-footer createfooter\">\r\n                            <button className=\"btn btu-submit\" onClick={e => this.handleAdd(\"Update Category\")} >Update\r\n                            {this.state.spinnerFlag === true &&\r\n                                    <div className=\"spinner-border\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                }\r\n                            </button>\r\n                        </div>}\r\n                    {this.state.issueType === \"Update Sub-Category\" &&\r\n                        <div className=\"card-footer createfooter\">\r\n                            <button className=\"btn btu-submit\" onClick={e => this.handleAdd(\"Update Sub-Category\")} >Update\r\n                            {this.state.spinnerFlag === true &&\r\n                                    <div className=\"spinner-border\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                }\r\n                            </button>\r\n                        </div>}\r\n                    {this.state.issueType === \"Update Ticket Type\" &&\r\n                        <div className=\"card-footer createfooter\">\r\n                            <button className=\"btn btu-submit\" onClick={e => this.handleAdd(\"Update Ticket Type\")} >Update\r\n                            {this.state.spinnerFlag === true &&\r\n                                    <div className=\"spinner-border\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                }\r\n                            </button>\r\n                        </div>}\r\n                    {this.state.issueType === \"Add Sub-Category\" &&\r\n                        <div className=\"card-footer createfooter\">\r\n                            <button className=\"btn btu-submit\" onClick={e => this.handleAdd(\"Add Sub-Category\")} >Add\r\n                            {this.state.spinnerFlag === true &&\r\n                                    <div className=\"spinner-border\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                }\r\n                            </button>\r\n                        </div>}\r\n                    {this.state.issueType === \"Add Ticket Type\" &&\r\n                        <div className=\"card-footer createfooter\">\r\n                            <button className=\"btn btu-submit\" onClick={e => this.handleAdd(\"Add Ticket Type\")} >Add\r\n                            {this.state.spinnerFlag === true &&\r\n                                    <div className=\"spinner-border\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                }\r\n                            </button>\r\n                        </div>}\r\n                    {this.state.issueType === \"Delete Category\" &&\r\n                        <div className=\"card-footer createfooter\">\r\n                            <button className=\"btn btu-submit\" onClick={e => this.handleDelete(\"Delete Category\")} >Delete\r\n                            {this.state.spinnerFlag === true &&\r\n                                    <div className=\"spinner-border\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>}\r\n                            </button>\r\n                        </div>}\r\n                    {this.state.issueType === \"Delete Sub-Category\" &&\r\n                        <div className=\"card-footer createfooter\">\r\n                            <button className=\"btn btu-submit\" onClick={e => this.handleDelete(\"Delete Sub-Category\")} >Delete\r\n                            {this.state.spinnerFlag === true &&\r\n                                    <div className=\"spinner-border\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>}\r\n                            </button>\r\n                        </div>}\r\n                </div>\r\n                {\r\n                    <Snackbar\r\n                        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                        open={this.state.err}\r\n                        className='snacking'\r\n                        message={this.state.error}\r\n                    />\r\n                }\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    issueTypes: state.page.issueTypes,\r\n    addIssueData: state.page.addIssueData,\r\n    deleteIssue: state.page.deleteIssue,\r\n    user_details: state.user.user_details,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    actions: bindActionCreators({ getAllIssueTypes, addIssue, deleteIssue }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Addissue);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport '../styles/upload.css'\r\nimport * as AllActions from '../actions/index';\r\nimport * as XLSX from 'xlsx';\r\n\r\nclass Upload extends Component {\r\n    state = {\r\n        selectedFile: '',\r\n        response: '',\r\n        show: '',\r\n        spinnerFlag: '',\r\n        selectedeSyncFile: '',\r\n        err: false,\r\n        error: \"\"\r\n    }\r\n    onChangeHandler = event => {\r\n        this.setState({\r\n            selectedFile: event.target.files[0],\r\n            loaded: 0,\r\n        })\r\n    }\r\n\r\n    // onChangeeSync = event => {\r\n    //     this.setState({\r\n    //         selectedeSyncFile: event.target.files[0],\r\n    //         loaded: 0,\r\n    //     })\r\n    // }\r\n    handleReset = () => {\r\n        console.log(\"reset\")\r\n        this.setState({\r\n            response: '',\r\n            show: '',\r\n            spinnerFlag: '',\r\n            selectedeSyncFile: '',\r\n            err: false,\r\n            error: \"\"\r\n        })\r\n    }\r\n    // handleUploadeSync = () => {\r\n    //     this.setState({ spinnerFlag: true });\r\n    //     var dataParsed;\r\n    //     // var files = e.target.files, f = files[0];\r\n    //     var fs = this.state.selectedeSyncFile\r\n    //     var readers = new FileReader();\r\n    //     readers.onload = function (e) {\r\n    //         var result = e.target.result;\r\n    //         let resultData = XLSX.read(result, { type: 'binary' });\r\n    //         const sheetname = resultData.SheetNames[0];\r\n    //         const sheet = resultData.Sheets[sheetname];\r\n    //         /* Convert array to json*/\r\n    //         dataParsed = XLSX.utils.sheet_to_row_object_array(sheet, { defval: \"\" });\r\n    //         // setFileUploaded(dataParse);\r\n    //     };\r\n    //     setTimeout(() => {\r\n    //         if (dataParsed && dataParsed.length !== 0) {\r\n    //             //  console.log(dataParsed, \"insideeee\")\r\n    //             // this.props.actions.uploadeSyncExcel(dataParsed)\r\n    //         }\r\n    //     }, 2000)\r\n    //     setTimeout(() => {\r\n    //         console.log(this.props.eSyncData, \"backend dataaa\")\r\n    //         if (this.props.eSyncData && this.props.eSyncData.status === 200) {\r\n    //             this.setState({ response: this.props.eSyncData, show: false, spinnerFlag: false, errmessage: this.props.eSyncData.data.message, iconColor: \"text-success\" })\r\n    //             setTimeout(() => {\r\n    //                 this.handleReset()\r\n    //             }, 1500)\r\n    //         }\r\n    //         // window.location.reload()\r\n    //     }, 25000);\r\n    //     readers.readAsBinaryString(fs)\r\n    // }\r\n\r\n    //file upload for sst\r\n    onClickHandler = async () => {\r\n        this.setState({ show: true });\r\n        var dataParse;\r\n        // var files = e.target.files, f = files[0];\r\n        var f = this.state.selectedFile\r\n        var reader = new FileReader();\r\n        reader.onload = await function (e) {\r\n            var data = e.target.result;\r\n            let readedData = XLSX.read(data, { type: 'binary' });\r\n            const wsname = readedData.SheetNames[0];\r\n            const ws = readedData.Sheets[wsname];\r\n            /* Convert array to json*/\r\n            dataParse = XLSX.utils.sheet_to_row_object_array(ws, { defval: \"\" });\r\n        };\r\n        setTimeout(() => {\r\n            if (dataParse && dataParse.length !== 0) {\r\n                // console.log(dataParse, \"insideeee\")\r\n                this.props.actions.uploadExcel(dataParse, { \"loggedinUser\": this.props.user_details.username, \"email\": this.props.user_details.userEmail, })\r\n            }\r\n        }, 2000)\r\n        setTimeout(() => {\r\n            // console.log(this.props.excelData, \"backend dataaa\")\r\n            if (this.props.excelData && this.props.excelData.status === 200) {\r\n                this.setState({ response: this.props.excelData, show: false, error: this.props.excelData.data.message, err: true, iconColor: \"text-success\" })\r\n                setTimeout(() => {\r\n                    this.handleReset()\r\n                }, 2500)\r\n            }\r\n            // window.location.reload()\r\n        }, 8000);\r\n        reader.readAsBinaryString(f)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"card main-card\">\r\n                            <div className=\"card-header text-center createheader\">Upload User list</div>\r\n                            <div className=\"card-body cardbody text-center\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col\">\r\n                                                <span>\r\n                                                    <input type=\"file\" name=\"file\" className=\"btn upload\" accept=\".xlsx, .xls\" onChange={this.onChangeHandler} />\r\n                                                    <button className=\"btn uploadBtn\" onClick={this.onClickHandler}>Upload</button>\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {this.state.show === true && <div className=\"text-center\">\r\n                                    <div className=\"spinner-border\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                </div>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className=\"col\">\r\n                        <div className=\"card main-card\">\r\n                            <div className=\"card-header text-center createheader\">Upload eSync Data</div>\r\n                            <div className=\"card-body cardbody text-center\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col\">\r\n                                                <input type=\"file\" name=\"file\" className=\"btn upload\" accept=\".xlsx, .xls\" onChange={this.onChangeeSync} />\r\n                                                <button className=\"btn uploadBtn\" onClick={this.handleUploadeSync}>Upload</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"text-center\">\r\n                                    <div className=\"spinner-border\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n                </div>\r\n                <Snackbar\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.err}\r\n                    className='snacking'\r\n                    message={this.state.error}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// export default Upload;\r\nconst mapStateToProps = state => ({\r\n    excelData: state.page.excelData,\r\n    eSyncData: state.page.eSyncData,\r\n    user_details: state.user.user_details,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    actions: bindActionCreators(AllActions, dispatch)\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Upload);","import React from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../styles/CreateIncident.css'\r\nexport const IdleTimeOutModal = ({ showModal, handleClose, handleLogout, remainingTime }) => {\r\n\r\n    return (\r\n        <Modal show={showModal} onHide={handleClose} className='modal-idle'>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>You Have Been Idle!</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>You Will Get Timed Out. You want to stay?</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"danger\" onClick={handleLogout}>\r\n                    Logout\r\n            </Button>\r\n                <Button className=\"btn btu-submit\" onClick={handleClose}>\r\n                    Stay\r\n            </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport * as AllActions from '../actions/index';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport '../styles/notification.css';\r\nimport { Snackbar } from '@material-ui/core';\r\nconst Reason = [\"Bug Fix\", \"Maintenance\", \"DB Downtime\", \"Application Downtime\"]\r\nconst geo = [\"America\", \"China\", \"Europe\", \"India\", \"Philippines\", \"All\"]\r\n\r\nconst audience = [\"SME\", \"Country Lead\", \"DPE\", \"Domain Lead\", \"Geo Lead\", \"Geo Practice Lead\", \"Global Delivery Lead\", \"Global Practice Lead\", \"PE\", \"Squad Lead\", \"Squad Member\", \"Super Admin\", \"Super User\", \"Tribe Lead\"]\r\nclass Notification extends Component {\r\n    state = {\r\n        types: [],\r\n        sections: [],\r\n        category: '',\r\n        subCategory: '',\r\n        reason: '',\r\n        description: '',\r\n        err: false,\r\n        errorMsg: '',\r\n        iconColor: '',\r\n        spinnerFlag: false,\r\n        propsSec: [],\r\n        audience: '',\r\n        audienceArr: [],\r\n        emailids: '',\r\n        geography: \"\",\r\n        sendAs: \"email_slack\",\r\n        selectedFile: [],\r\n        fileLoading: false\r\n    }\r\n    UNSAFE_componentWillMount() {\r\n        this.inputRef = React.createRef();\r\n        this.props.actions.getAllIssueTypes();\r\n        // this.props.actions.getAllUsers();\r\n        // var type;\r\n        // var sec;\r\n        // if (this.props.user_details.details && this.props.user_details.details.length !== 0) {\r\n        //     if (this.props.user_details.role === \"SME\") {\r\n        //         this.props.user_details.details && this.props.user_details.details.forEach((opt) => {\r\n        //             type = (opt.ISSUE_TYPE).split(',');\r\n        //             sec = (opt.ISSUE_CATEGORY).split(',')\r\n        //         })\r\n        //         this.setState({ types: type, propsSec: sec })\r\n        //     }\r\n        // }\r\n\r\n        if (this.props.issueTypes.length > 0) {\r\n            this.setState({ types: this.fetchCategory(this.props.issueTypes) })\r\n        }\r\n    }\r\n    fetchRoleUsers = (users) => {\r\n        let a = users.map((u) => u.ROLE).filter((value, index, self) => {\r\n            return self.indexOf(value) === index;\r\n        })\r\n        return a\r\n    }\r\n    fetchCategory = (issues) => {\r\n        var type = []\r\n        if (this.props.user_details.role === \"Super Admin\" || this.props.user_details.role === \"Super User\") {\r\n            type = issues.map((u) => u.name).filter((value, index, self) => {\r\n                return self.indexOf(value) === index;\r\n            })\r\n        }\r\n        // else if (this.props.user_details.role === \"SME\") {\r\n        //     var sec = []\r\n        //     this.props.user_details.details && this.props.user_details.details.forEach((opt) => {\r\n        //         type = (opt.ISSUE_TYPE).split(',');\r\n        //         sec = (opt.ISSUE_CATEGORY).split(',')\r\n        //     })\r\n        //     this.setState({ propsSec: sec })\r\n        // }\r\n        return type\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.issueTypes !== this.props.issueTypes) {\r\n            this.setState({ types: this.fetchCategory(this.props.issueTypes) })\r\n        }\r\n    }\r\n    handleChangeType = (e) => {\r\n        var section = [];\r\n        var final;\r\n        section = this.props.issueTypes && this.props.issueTypes.filter(function (opt) {\r\n            return opt.name === e.target.value\r\n        }).map(d => d.section)\r\n\r\n        if (this.props.user_details.role === \"SME\") {\r\n            final = (section[0]).filter(value => (this.state.propsSec).includes(value))\r\n            this.setState({ category: e.target.value, sections: final, subCategory: '' })\r\n        } else {\r\n            this.setState({ category: e.target.value, sections: section[0], subCategory: '', audience: '' })\r\n        }\r\n        if (e.target.value === \"Insights 360\") {\r\n            this.setState({ audienceArr: audience })\r\n        } else {\r\n            this.setState({ audienceArr: [] })\r\n        }\r\n    }\r\n    SubCategory = (e) => {\r\n        var subcat = e.target.value;\r\n        this.setState({ subCategory: subcat, audience: \"\" })\r\n        // if (subcat === \"AMP\" || subcat === \"AMP- Daily Tracker\" || subcat === \"AMP Dashboard\") {\r\n        //     this.props.actions.getUsers({ key: \"AMP\" })\r\n        // }\r\n        // else if (subcat === \"e Sync\" || subcat === \"e Sync Dashboard\") {\r\n        //     this.props.actions.getUsers({ key: \"e Sync\" })\r\n        // }\r\n    }\r\n    sendMail = () => {\r\n        if (this.state.category === \"\" || this.state.reason === \"\" || this.state.audience === \"\" || this.state.description === \"\" || this.state.geography === \"\") {\r\n            this.setState({ err: true, errorMsg: \"Please fill all fields\", iconColor: \"text-danger\" })\r\n            this.error()\r\n        }\r\n        else if (this.state.category !== \"Others\" && this.state.subCategory === \"\") {\r\n            this.setState({ err: true, errorMsg: \"Please choose Sub-Category\", iconColor: \"text-danger\" })\r\n            this.error()\r\n        }\r\n        else if (this.state.audience === \"Manual\" && this.state.emailids === \"\") {\r\n            this.setState({ err: true, errorMsg: \"Please enter mail ids\", iconColor: \"text-danger\" })\r\n            this.error()\r\n        }\r\n        else if (this.state.audience === \"Manual\" && !this.state.emailids.includes('@')) {\r\n            this.setState({ err: true, errorMsg: \"Mail should includes '@'\", iconColor: \"text-danger\" })\r\n            this.error()\r\n        }\r\n        else if (this.state.audience === \"Manual\" && !this.state.emailids.includes('.ibm.com')) {\r\n            this.setState({ err: true, errorMsg: \"Mail should includes 'ibm.com'\", iconColor: \"text-danger\" })\r\n            this.error()\r\n        }\r\n        else {\r\n            this.setState({ spinnerFlag: true })\r\n            var userList = []\r\n            let type = \"\";\r\n            if (this.state.emailids !== \"\") {\r\n                userList = (this.state.emailids).replace(/\\s\\s*/g, '').split(',');\r\n                type = \"in\"\r\n            } else {\r\n                // Add userlist\r\n                // if (this.state.audience === \"SME\") {\r\n                //     let u = this.state.audience\r\n                //     let category = this.state.category;\r\n                //     let portal = this.state.subCategory;\r\n                //     userList = this.props.allUsers.length > 0 ? this.props.allUsers.filter(el => el.ROLE === u).filter(y => y.ISSUE_TYPE === category).filter(z => z.ISSUE_CATEGORY.includes(portal)).map(x => x.EMP_EMAIL) : [];\r\n                //     type = \"in\"\r\n                // } else {\r\n                //     type = \"not_in\"\r\n                //     userList = [];\r\n                // }\r\n                type = \"not_in\"\r\n                userList = []\r\n            }\r\n            // console.log(userList)\r\n            let mailObj = Object.assign({}, {\r\n                category: this.state.category,\r\n                subCategory: this.state.subCategory,\r\n                reason: this.state.reason,\r\n                description: this.state.description.replace(/[,+()'\"*<>{}]/g, '  '),\r\n                geography: this.state.geography,\r\n                userList: userList.length > 0 ? userList : [],\r\n                audience: this.state.audience,\r\n                user: this.props.user_details.userEmail,\r\n                loggedinUser: this.props.user_details.username,\r\n                loggedinEmail: this.props.user_details.userEmail,\r\n                type: type,\r\n                selectedFile: this.state.selectedFile\r\n            })\r\n            if (this.state.sendAs === \"email\") {\r\n                this.props.actions.notificationMail(mailObj)\r\n            } else if (this.state.sendAs === \"slack\") {\r\n                this.props.actions.slackNotification(mailObj)\r\n            } else if (this.state.sendAs === \"email_slack\") {\r\n                this.props.actions.notificationMail(mailObj)\r\n                this.props.actions.slackNotification(mailObj)\r\n            }\r\n\r\n            setTimeout(() => {\r\n                if (this.props.notification && this.props.notification.status === 200 && this.props.notification.data.data === \"send\") {\r\n                    this.setState({ err: true, errorMsg: \"Notification sent successfully\", iconColor: \"text-success\", spinnerFlag: false, emailids: '' })\r\n                    this.error()\r\n                    this.handleReset()\r\n                }\r\n                else {\r\n                    this.setState({ err: true, errorMsg: \"Something went wrong\", iconColor: \"text-danger\", spinnerFlag: false, emailids: '' })\r\n                    this.error()\r\n                }\r\n            }, 5000)\r\n        }\r\n    }\r\n    handleReset = () => {\r\n        this.setState({\r\n            category: '',\r\n            subCategory: '',\r\n            reason: '',\r\n            description: '',\r\n            spinnerFlag: false,\r\n            audience: '',\r\n            emailids: '',\r\n            sections: '',\r\n            audienceArr: [],\r\n            geography: \"\",\r\n            sendAs: \"email_slack\",\r\n            selectedFile: [],\r\n            fileLoading: false\r\n        })\r\n        this.inputRef.current.value = '';\r\n    }\r\n    error = () => {\r\n        setTimeout(() => {\r\n            this.setState({ err: false, errorMsg: \"\", iconColor: \"\" })\r\n        }, 3300)\r\n    }\r\n    handleAudience = (e) => {\r\n        var aud = e;\r\n        this.setState({ audience: aud, emailids: \"\" })\r\n    }\r\n\r\n    // handler function for file selection\r\n    onFileChange = async (event) => {\r\n        let files = Object.values(event.target.files)\r\n        this.setState({ fileLoading: true })\r\n        await files.forEach((file, i) => {\r\n            this.convertFileToBase64(file, (base64) => {\r\n                this.setState(prevState => ({\r\n                    selectedFile: [...prevState.selectedFile, { filename: file.name, path: base64 }]\r\n                }));\r\n                if (i + 1 === files.length) {\r\n                    this.setState({ fileLoading: false })\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    // converting and returning base64 as callback\r\n    convertFileToBase64 = (file, cb) => {\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        setTimeout(() => { cb(reader.result) }, 2000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid main-popUp\">\r\n                {this.state.types && this.state.types.length !== 0 ?\r\n                    <div className=\"card main-card\">\r\n                        <div className=\"card-header text-center createheader\">Notification</div>\r\n                        <div className=\"card-body cardbody\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md col-sm\">\r\n                                    <label><strong>Geography</strong></label>\r\n                                    <select className=\"form-control\"\r\n                                        value={this.state.geography}\r\n                                        onChange={(e) => this.setState({ geography: e.target.value })}>\r\n                                        <option value=\"\" disabled>Choose from dropdown</option>\r\n                                        {geo && geo.map((opt) => {\r\n                                            return (\r\n                                                <option key={opt}>{opt}</option>\r\n                                            )\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"col-md col-sm\">\r\n                                    <label><strong>Category</strong></label>\r\n                                    <select className=\"form-control\"\r\n                                        value={this.state.category}\r\n                                        onChange={(e) => this.handleChangeType(e)}>\r\n                                        <option value=\"\" disabled>Choose from dropdown</option>\r\n                                        {this.state.types && this.state.types.map((opt) => {\r\n                                            return (\r\n                                                <option key={opt}>{opt}</option>\r\n                                            )\r\n                                        })}\r\n                                        <option>Others</option>\r\n                                    </select>\r\n                                </div>\r\n                                {this.state.category !== \"Others\" &&\r\n                                    <div className=\"col-md col-sm\">\r\n                                        <label><strong>Portals & Dashboard</strong></label>\r\n                                        <select className=\"form-control\"\r\n                                            value={this.state.subCategory}\r\n                                            onChange={(e) => this.SubCategory(e)}>\r\n                                            <option value=\"\" disabled>Choose from dropdown</option>\r\n                                            {this.state.sections && this.state.sections.map((opt) => {\r\n                                                return (\r\n                                                    <option key={opt}>{opt}</option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                }\r\n                                <div className=\"col-md col-sm\">\r\n                                    <label><strong>Reason</strong></label>\r\n                                    <select className=\"form-control\"\r\n                                        value={this.state.reason}\r\n                                        onChange={(e) => this.setState({ reason: e.target.value })}>\r\n                                        <option value=\"\" disabled>Choose from dropdown</option>\r\n                                        {Reason && Reason.map((opt) => {\r\n                                            return (\r\n                                                <option key={opt}>{opt}</option>\r\n                                            )\r\n                                        })}\r\n                                        <option>Others</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"col-md col-sm\">\r\n                                    <label><strong>Audience</strong></label>\r\n                                    <select className=\"form-control\"\r\n                                        value={this.state.audience}\r\n                                        onChange={(e) => this.handleAudience(e.target.value)}\r\n                                    >\r\n                                        <option value=\"\" disabled>Choose from dropdown</option>\r\n                                        {this.state.audienceArr && this.state.audienceArr.map((opt) => {\r\n                                            return (\r\n                                                <option key={opt}>{opt}</option>\r\n                                            )\r\n                                        })}\r\n                                        <option key={\"manual\"}>Manual</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            {this.state.audience === \"Manual\" &&\r\n                                <div className=\"row mt-3\">\r\n                                    <div className=\"col-sm col-md\">\r\n                                        <label><strong>Enter Mail IDs</strong></label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter email ids example:(jsmith@xx.ibm.com , jhon@in.ibm.com)\"\r\n                                            value={this.state.emailids}\r\n                                            onChange={e => this.setState({ emailids: e.target.value })}\r\n                                            type=\"text\"\r\n                                            rows=\"3\"></textarea>\r\n                                    </div>\r\n                                </div>}\r\n                            <div className=\"row mt-3\">\r\n                                <div className=\"col-sm col-md\">\r\n                                    <label><strong>Description</strong></label>\r\n                                    <textarea\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Description\"\r\n                                        value={this.state.description}\r\n                                        onChange={e => this.setState({ description: e.target.value })}\r\n                                        type=\"text\"\r\n                                        rows=\"6\"></textarea>\r\n                                </div>\r\n                            </div>\r\n                            {this.state.sendAs !== \"slack\" && <div className=\"row mt-3\">\r\n                                <div className=\"col-sm col-md\">\r\n                                    <label><strong>Attach Files</strong></label>\r\n                                    <input \r\n                                    type=\"file\" \r\n                                    id=\"input-file\" \r\n                                    onClick={e => { e.target.value = null; this.setState({selectedFile: []}) }} \r\n                                    className=\"form-control-file\"\r\n                                    onChange={this.onFileChange} \r\n                                    multiple \r\n                                    ref={this.inputRef}/>\r\n                                </div>\r\n                            </div>}\r\n                        </div>\r\n                        <div className=\"card-footer createfooter\">\r\n                            <button className=\"btn btu-submit\" onClick={e => this.sendMail()} disabled={this.state.fileLoading}>Send</button>\r\n                            <div className=\"form-group row\">\r\n                                <label className=\"col-md-1 col-sm-1 sendvia-label\"><strong>Send Via</strong></label>\r\n                                <select className=\"form-control col-md-2 col-sm-2\"\r\n                                    value={this.state.sendAs}\r\n                                    onChange={(e) => this.setState({ sendAs: e.target.value })}>\r\n                                    <option value=\"\" disabled>Choose from dropdown</option>\r\n                                    <option value=\"email\">Email</option>\r\n                                    <option value=\"slack\">Slack</option>\r\n                                    <option value=\"email_slack\">Email & Slack</option>\r\n\r\n                                </select>\r\n                            </div>\r\n                            {this.state.spinnerFlag === true && <div className=\"text-center\">\r\n                                <div className=\"spinner-border\" role=\"status\">\r\n                                    <span className=\"sr-only\">Loading...</span>\r\n                                </div>\r\n                            </div>}\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div className=\"text-center\">\r\n                        <div className=\"spinner-border\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <Snackbar\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.err}\r\n                    className='snacking'\r\n                    message={this.state.errorMsg}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    issueTypes: state.page.issueTypes,\r\n    notification: state.page.notification,\r\n    user_details: state.user.user_details\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    actions: bindActionCreators(AllActions, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Notification);","import React, { Component } from 'react'\r\nimport '../styles/notification.css';\r\nimport * as AllActions from '../actions/index';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst Reason = [\"Bug Fix\", \"Maintenance\", \"DB Downtime\", \"Application Downtime\"]\r\nconst geo = [\"America\", \"China\", \"Europe\", \"India\", \"Philippines\", \"All\"]\r\nclass PopUpNotification extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            types: [],\r\n            sections: [],\r\n            category: '',\r\n            subCategory: '',\r\n            reason: '',\r\n            description: '',\r\n            err: false,\r\n            errorMsg: '',\r\n            iconColor: '',\r\n            spinnerFlag: false,\r\n            propsSec: [],\r\n            audience: '',\r\n            audienceArr: [],\r\n            emailids: '',\r\n            geography: \"\",\r\n            start: \"\",\r\n            end: \"\",\r\n            displayStart: new Date(),\r\n            displayEnd: new Date()\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.actions.getAllIssueTypes();\r\n\r\n        if (this.props.issueTypes.length > 0) {\r\n            // this.setState({ audienceArr: audience })\r\n            this.setState({ types: this.fetchCategory(this.props.issueTypes) })\r\n        }\r\n    }\r\n    fetchCategory = (issues) => {\r\n        var type = []\r\n        if (this.props.user_details.role === \"Super Admin\" || this.props.user_details.role === \"Super User\") {\r\n            type = issues && issues.map((u) => u.name).filter((value, index, self) => {\r\n                return self.indexOf(value) === index;\r\n            })\r\n        }\r\n        // else if (this.props.user_details.role === \"SME\") {\r\n        //     var sec = []\r\n        //     this.props.user_details.details && this.props.user_details.details.forEach((opt) => {\r\n        //         type = (opt.ISSUE_TYPE).split(',');\r\n        //         sec = (opt.ISSUE_CATEGORY).split(',')\r\n        //     })\r\n        //     this.setState({ propsSec: sec.filter((item, ind) => sec.indexOf(item) === ind) })\r\n        // }\r\n        // console.log(issues)\r\n        // console.log(type)\r\n        return type\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.issueTypes !== this.props.issueTypes) {\r\n            // this.setState({ audienceArr: audience })\r\n            this.setState({ types: this.fetchCategory(this.props.issueTypes) })\r\n        }\r\n    }\r\n\r\n    handleChangeType = (e) => {\r\n        var section = [];\r\n        var final;\r\n        section = this.props.issueTypes && this.props.issueTypes.filter(function (opt) {\r\n            return opt.name === e.target.value\r\n        }).map(d => d.section)\r\n\r\n        if (this.props.user_details.role === \"SME\") {\r\n            final = (section[0]).filter(value => (this.state.propsSec).includes(value))\r\n            this.setState({ category: e.target.value, sections: final, subCategory: '' })\r\n        } else {\r\n            this.setState({ category: e.target.value, sections: section[0], subCategory: '' })\r\n            // this.setState({ category: e.target.value, sections: section[0], subCategory: '', audience: '' })\r\n        }\r\n        // if (e.target.value === \"Insights 360\") {\r\n        //     this.setState({ audienceArr: audience })\r\n        // } else {\r\n        //     this.setState({ audienceArr: [] })\r\n        // }\r\n    }\r\n\r\n    SubCategory = (e) => {\r\n        var subcat = e.target.value;\r\n        this.setState({ subCategory: subcat })\r\n    }\r\n\r\n    handleReset = () => {\r\n        this.setState({\r\n            category: \"\",\r\n            subCategory: \"\",\r\n            reason: \"\",\r\n            geography: \"\",\r\n            audience: \"\",\r\n            start: \"\",\r\n            end: \"\",\r\n            description: \"\",\r\n            audienceArr: [],\r\n            displayStart: new Date(),\r\n            displayEnd: new Date()\r\n        })\r\n    }\r\n    saveInfo = () => {\r\n        if (this.state.category === \"\" || this.state.reason === \"\" || this.state.subCategory === \"\" || this.state.geography === \"\") {\r\n            this.setState({ err: true, errorMsg: \"Please fill all fields\", iconColor: \"text-danger\" })\r\n            this.error()\r\n        }\r\n        // else if (this.state.audience === \"Manual\" && this.state.emailids === \"\") {\r\n        //     this.setState({ err: true, errorMsg: \"Please enter Mail ID\", iconColor: \"text-danger\" })\r\n        //     this.error()\r\n        // }\r\n        // else if (this.state.audience === \"Manual\" && !this.state.emailids.includes('@')) {\r\n        //     this.setState({ err: true, errorMsg: \"Mail should includes '@'\", iconColor: \"text-danger\" })\r\n        //     this.error()\r\n        // }\r\n        // else if (this.state.audience === \"Manual\" && !this.state.emailids.includes('.ibm.com')) {\r\n        //     this.setState({ err: true, errorMsg: \"Mail should includes 'ibm.com'\", iconColor: \"text-danger\" })\r\n        //     this.error()\r\n        // }\r\n        else if (this.state.reason !== \"\" && this.state.start === \"\") {\r\n            this.setState({ err: true, errorMsg: \"Please enter start date\", iconColor: \"text-danger\" })\r\n            this.error()\r\n        }\r\n        else if (this.state.reason !== \"\" && this.state.end === \"\") {\r\n            this.setState({ err: true, errorMsg: \"Please enter end date\", iconColor: \"text-danger\" })\r\n            this.error()\r\n        }\r\n        else if (this.state.reason !== \"\" && this.state.description === \"\") {\r\n            this.setState({ err: true, errorMsg: \"Please enter description\", iconColor: \"text-danger\" })\r\n            this.error()\r\n        }\r\n        else {\r\n            let obj = Object.assign({}, {\r\n                category: this.state.category,\r\n                subCategory: this.state.subCategory,\r\n                reason: this.state.reason,\r\n                geography: this.state.geography,\r\n                // audience: this.state.audience,\r\n                start: this.state.start,\r\n                end: this.state.end,\r\n                description: this.state.description,\r\n                user: this.props.user_details.userEmail,\r\n                loggedinUser: this.props.user_details.username,\r\n                loggedinEmail: this.props.user_details.userEmail,\r\n            })\r\n            this.props.actions.postNotification(obj)\r\n            setTimeout(() => {\r\n                if (this.props.notification && this.props.notification.status === 200) {\r\n                    this.setState({ err: true, errorMsg: \"Notification Added Successfully\", iconColor: \"text-success\", spinnerFlag: false, emailids: '' })\r\n                    this.error()\r\n                    this.handleReset()\r\n                }\r\n                else {\r\n                    this.setState({ err: true, errorMsg: \"Something went wrong\", iconColor: \"text-danger\", spinnerFlag: false })\r\n                    this.error()\r\n                }\r\n            }, 2000)\r\n        }\r\n    }\r\n\r\n    error = () => {\r\n        setTimeout(() => {\r\n            this.setState({ err: false, errorMsg: \"\", iconColor: \"\" })\r\n        }, 3300)\r\n    }\r\n\r\n    // handleAudience = (e) => {\r\n    //     var aud = e;\r\n    //     this.setState({ audience: aud, emailids: \"\" })\r\n\r\n    // }\r\n\r\n    handleInputDate = (dt) => {\r\n        return dt.toISOString();\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state)\r\n        // console.log(this.props)\r\n        return (\r\n            <div className=\"container-fluid main-popUp\">\r\n                <div className=\"card main-card\">\r\n                    <div className=\"card-header text-center createheader\">Notification</div>\r\n                    <div className=\"card-body cardbody\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md col-sm\">\r\n                                <label><strong>Geography</strong></label>\r\n                                <select className=\"form-control\"\r\n                                    value={this.state.geography}\r\n                                    onChange={(e) => this.setState({ geography: e.target.value })}>\r\n                                    <option value=\"\" disabled>Choose from dropdown</option>\r\n                                    {geo && geo.map((opt) => {\r\n                                        return (\r\n                                            <option key={opt}>{opt}</option>\r\n                                        )\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-md col-sm\">\r\n                                <label><strong>Category</strong></label>\r\n                                <select className=\"form-control\"\r\n                                    value={this.state.category}\r\n                                    onChange={(e) => this.handleChangeType(e)}>\r\n                                    <option value=\"\" disabled>Choose from dropdown</option>\r\n                                    {this.state.types && this.state.types.map((opt) => {\r\n                                        return (\r\n                                            <option key={opt}>{opt}</option>\r\n                                        )\r\n                                    })}\r\n                                    {/* <option>Others</option> */}\r\n                                </select>\r\n                            </div>\r\n                            {/* {this.state.category !== \"Others\" && */}\r\n                            <div className=\"col-md col-sm\">\r\n                                <label><strong>Portals & Dashboard</strong></label>\r\n                                <select className=\"form-control\"\r\n                                    value={this.state.subCategory}\r\n                                    onChange={(e) => this.SubCategory(e)}>\r\n                                    <option value=\"\" disabled>Choose from dropdown</option>\r\n                                    {this.state.sections && this.state.sections.map((opt) => {\r\n                                        return (\r\n                                            <option key={opt}>{opt}</option>\r\n                                        )\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                            {/* } */}\r\n                            <div className=\"col-md col-sm\">\r\n                                <label><strong>Reason</strong></label>\r\n                                <select className=\"form-control\"\r\n                                    value={this.state.reason}\r\n                                    onChange={(e) => this.setState({ reason: e.target.value })}>\r\n                                    <option value=\"\" disabled>Choose from dropdown</option>\r\n                                    {Reason && Reason.map((opt) => {\r\n                                        return (\r\n                                            <option key={opt}>{opt}</option>\r\n                                        )\r\n                                    })}\r\n                                    {/* <option>Others</option> */}\r\n                                </select>\r\n                            </div>\r\n                            {/* <div className=\"col-md col-sm\">\r\n                                <label><strong>Audience</strong></label>\r\n                                <select className=\"form-control\"\r\n                                    value={this.state.audience}\r\n                                    onChange={(e) => this.handleAudience(e.target.value)}\r\n                                >\r\n                                    <option value=\"\" disabled>Choose from dropdown</option>\r\n                                    {this.state.audienceArr && this.state.audienceArr.map((opt) => {\r\n                                        return (\r\n                                            <option key={opt}>{opt}</option>\r\n                                        )\r\n                                    })}\r\n                                    <option key={\"manual\"}>Manual</option>\r\n                                </select>\r\n                            </div> */}\r\n                        </div>\r\n                        {/* {this.state.audience === \"Manual\" &&\r\n                            <div className=\"row mt-3\">\r\n                                <div className=\"col-sm col-md\">\r\n                                    <label><strong>Enter Mail IDs</strong></label>\r\n                                    <textarea\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Enter email ids ex:(jsmith@xx.ibm.com , jhon@in.ibm.com)\"\r\n                                        value={this.state.emailids}\r\n                                        onChange={e => this.setState({ emailids: e.target.value })}\r\n                                        type=\"text\"\r\n                                        rows=\"3\"></textarea>\r\n                                </div>\r\n                            </div>} */}\r\n                        {this.state.reason !== \"\" && <div>\r\n                            <div className=\"row mt-3\">\r\n                                <div className=\"col-md col-sm\">\r\n                                    <label><strong>Start Date and Time</strong></label>\r\n                                    {/* <TextField\r\n                                        value={this.state.start}\r\n                                        id=\"datetime-local\"\r\n                                        type=\"datetime-local\"\r\n                                        className=\"form-control\"\r\n                                        onChange={e => this.setState({ start: e.target.value })}\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                    /> */}\r\n                                    <DatePicker\r\n                                        selected={this.state.displayStart}\r\n                                        className=\"form-control\"\r\n                                        onChange={date => {\r\n                                            this.setState({ displayStart: date })\r\n                                            this.setState({ start: this.handleInputDate(date) })\r\n                                        }}\r\n                                        locale=\"en\"\r\n                                        showTimeSelect\r\n                                        timeFormat=\"p\"\r\n                                        timeIntervals={1}\r\n                                        dateFormat=\"Pp\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-md col-sm\">\r\n                                    <label><strong>End Date and Time</strong></label>\r\n                                    {/* <TextField\r\n                                        value={this.state.end}\r\n                                        onChange={e => this.setState({ end: e.target.value })}\r\n                                        id=\"datetime-local\"\r\n                                        type=\"datetime-local\"\r\n                                        className=\"form-control\"\r\n                                        inputProps={{ min: this.state.start }}\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                    /> */}\r\n                                    <DatePicker\r\n                                        selected={this.state.displayEnd}\r\n                                        className=\"form-control\"\r\n                                        onChange={date => {\r\n                                            this.setState({ displayEnd: date })\r\n                                            this.setState({ end: this.handleInputDate(date) })\r\n                                        }}\r\n                                        locale=\"en\"\r\n                                        showTimeSelect\r\n                                        timeFormat=\"p\"\r\n                                        timeIntervals={1}\r\n                                        dateFormat=\"Pp\"\r\n                                        minDate={this.state.displayStart}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mt-3\">\r\n                                <div className=\"col-sm col-md\">\r\n                                    <label><strong>Description</strong></label>\r\n                                    <textarea\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Description\"\r\n                                        value={this.state.description}\r\n                                        onChange={e => this.setState({ description: e.target.value })}\r\n                                        type=\"text\"\r\n                                        rows=\"6\"></textarea>\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                    </div>\r\n\r\n                    <div className=\"card-footer createfooter\">\r\n                        <button className=\"btn btu-submit\" onClick={e => this.saveInfo()}>Send</button>\r\n                        {this.state.spinnerFlag === true && <div className=\"text-center\">\r\n                            <div className=\"spinner-border\" role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n                <Snackbar\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.err}\r\n                    className='snacking'\r\n                    message={this.state.errorMsg}\r\n                />\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    issueTypes: state.page.issueTypes,\r\n    notification: state.page.notification,\r\n    // ampUsers: state.page.ampUsers,\r\n    allUsers: state.page.allUsers,\r\n    user_details: state.user.user_details\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    actions: bindActionCreators(AllActions, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PopUpNotification);\r\n","import { Snackbar } from '@material-ui/core';\r\nimport React, { Component } from 'react'\r\nimport '../styles/notification.css';\r\nimport * as AllActions from '../actions/index';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst Reason = [\"Bug Fix\", \"Maintenance\", \"DB Downtime\", \"Application Downtime\"]\r\nconst geo = [\"America\", \"China\", \"Europe\", \"India\", \"Philippines\", \"All\"]\r\nconst audience = [\"SME\", \"Country Lead\", \"DPE\", \"Domain Lead\", \"Geo Lead\", \"Geo Practice Lead\", \"Global Delivery Lead\", \"Global Practice Lead\", \"PE\", \"Squad Lead\", \"Squad Member\", \"Super Admin\", \"Super User\", \"Tribe Lead\"]\r\n\r\nclass EmailPopUp extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            types: [],\r\n            sections: [],\r\n            category: '',\r\n            subCategory: '',\r\n            reason: '',\r\n            description: '',\r\n            err: false,\r\n            errorMsg: '',\r\n            iconColor: '',\r\n            spinnerFlag: false,\r\n            propsSec: [],\r\n            audience: '',\r\n            audienceArr: [],\r\n            emailids: '',\r\n            geography: \"\",\r\n            sendAs: \"email_slack\",\r\n            displayStart: new Date(),\r\n            displayEnd: new Date(),\r\n            selectedFile: [],\r\n            fileLoading: false,\r\n        }\r\n    }\r\n\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.actions.getAllIssueTypes();\r\n\r\n        if (this.props.issueTypes.length > 0) {\r\n            this.setState({ types: this.fetchCategory(this.props.issueTypes) })\r\n        }\r\n    }\r\n    fetchCategory = (issues) => {\r\n        var type = []\r\n        if (this.props.user_details.role === \"Super Admin\" || this.props.user_details.role === \"Super User\") {\r\n            type = issues.map((u) => u.name).filter((value, index, self) => {\r\n                return self.indexOf(value) === index;\r\n            })\r\n        }\r\n        // else if (this.props.user_details.role === \"SME\") {\r\n        //     var sec = []\r\n        //     this.props.user_details.details && this.props.user_details.details.forEach((opt) => {\r\n        //         type = (opt.ISSUE_TYPE).split(',');\r\n        //         sec = (opt.ISSUE_CATEGORY).split(',')\r\n        //     })\r\n        //     this.setState({ propsSec: sec })\r\n        // }\r\n        return type\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.issueTypes !== this.props.issueTypes) {\r\n            this.setState({ types: this.fetchCategory(this.props.issueTypes) })\r\n        }\r\n    }\r\n\r\n    handleChangeType = (e) => {\r\n        var section = [];\r\n        var final;\r\n        section = this.props.issueTypes && this.props.issueTypes.filter(function (opt) {\r\n            return opt.name === e.target.value\r\n        }).map(d => d.section)\r\n\r\n        if (this.props.user_details.role === \"SME\") {\r\n            final = (section[0]).filter(value => (this.state.propsSec).includes(value));\r\n            this.setState({ category: e.target.value, sections: final, subCategory: '' })\r\n        } else {\r\n            this.setState({ category: e.target.value, sections: section[0], subCategory: '', audience: '' })\r\n        }\r\n        if (e.target.value === \"Insights 360\") {\r\n            this.setState({ audienceArr: audience })\r\n        } else {\r\n            this.setState({ audienceArr: [] })\r\n        }\r\n    }\r\n\r\n    SubCategory = (e) => {\r\n        var subcat = e.target.value;\r\n        this.setState({ subCategory: subcat, audience: \"\" })\r\n    }\r\n\r\n    handleReset = () => {\r\n        this.setState({\r\n            category: \"\",\r\n            subCategory: \"\",\r\n            reason: \"\",\r\n            geography: \"\",\r\n            audience: \"\",\r\n            start: \"\",\r\n            end: \"\",\r\n            description: \"\",\r\n            audienceArr: [],\r\n            sendAs: \"email_slack\",\r\n            displayStart: new Date(),\r\n            displayEnd: new Date(),\r\n            selectedFile: [],\r\n            fileLoading: false\r\n        })\r\n    }\r\n\r\n    saveInfo = () => {\r\n        if (this.state.category === \"\" || this.state.reason === \"\" || this.state.audience === \"\" || this.state.subCategory === \"\" || this.state.geography === \"\") {\r\n            this.setState({ err: true, errorMsg: \"Please fill all fields\", iconColor: \"text-danger\" })\r\n            this.error()\r\n        }\r\n        else if (this.state.reason === \"Maintenance\" && this.state.start === \"\") {\r\n            this.setState({ err: true, errorMsg: \"Please enter start date\", iconColor: \"text-danger\" })\r\n            this.error()\r\n        }\r\n        else if (this.state.reason === \"Maintenance\" && this.state.end === \"\") {\r\n            this.setState({ err: true, errorMsg: \"Please enter end date\", iconColor: \"text-danger\" })\r\n            this.error()\r\n        }\r\n        else if (this.state.reason === \"Maintenance\" && this.state.description === \"\") {\r\n            this.setState({ err: true, errorMsg: \"Please enter description\", iconColor: \"text-danger\" })\r\n            this.error()\r\n        }\r\n        else {\r\n            this.setState({ spinnerFlag: true })\r\n            var userList = []\r\n            let type = \"\";\r\n            if (this.state.emailids !== \"\") {\r\n                userList = (this.state.emailids).replace(/\\s\\s*/g, '').split(',');\r\n                type = \"in\"\r\n            } else {\r\n                // Add userlist\r\n                type = \"not_in\"\r\n                userList = []\r\n            }\r\n            // console.log(userList)\r\n            let obj = Object.assign({}, {\r\n                category: this.state.category,\r\n                subCategory: this.state.subCategory,\r\n                reason: this.state.reason,\r\n                geography: this.state.geography,\r\n                audience: this.state.audience,\r\n                start: this.state.start,\r\n                end: this.state.end,\r\n                description: this.state.description,\r\n                userList: userList.length > 0 ? userList : [],\r\n                user: this.props.user_details.userEmail,\r\n                loggedinUser: this.props.user_details.username,\r\n                loggedinEmail: this.props.user_details.userEmail,\r\n                type: type,\r\n                selectedFile: this.state.selectedFile\r\n            })\r\n            if (this.state.sendAs === \"email\") {\r\n                this.props.actions.notificationMail(obj)\r\n            } else if (this.state.sendAs === \"slack\") {\r\n                this.props.actions.slackNotification(obj)\r\n            } else if (this.state.sendAs === \"email_slack\") {\r\n                this.props.actions.notificationMail(obj)\r\n                this.props.actions.slackNotification(obj)\r\n            }\r\n            this.props.actions.postNotification(obj)\r\n            setTimeout(() => {\r\n                if (this.props.notification && this.props.notification.status === 200) {\r\n                    this.setState({ err: true, errorMsg: \"Notification Added Successfully\", iconColor: \"text-success\", spinnerFlag: false, emailids: '' })\r\n                    this.error()\r\n                    this.handleReset()\r\n                }\r\n                else {\r\n                    this.setState({ err: true, errorMsg: \"Something went wrong\", iconColor: \"text-danger\", spinnerFlag: false })\r\n                    this.error()\r\n                }\r\n            }, 5000)\r\n        }\r\n    }\r\n    error = () => {\r\n        setTimeout(() => {\r\n            this.setState({ err: false, errorMsg: \"\", iconColor: \"\" })\r\n        }, 3300)\r\n    }\r\n\r\n\r\n    handleAudience = (e) => {\r\n        var aud = e;\r\n        this.setState({ audience: aud, emailids: \"\" })\r\n\r\n    }\r\n    handleInputDate = (dt) => {\r\n        return dt.toISOString();\r\n    }\r\n\r\n    // handler function for file selection\r\n    onFileChange = async (event) => {\r\n        let files = Object.values(event.target.files)\r\n        this.setState({ fileLoading: true })\r\n        await files.forEach((file, i) => {\r\n            this.convertFileToBase64(file, (base64) => {\r\n                this.setState(prevState => ({\r\n                    selectedFile: [...prevState.selectedFile, { filename: file.name, path: base64 }]\r\n                }));\r\n                if (i + 1 === files.length) {\r\n                    this.setState({ fileLoading: false })\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    // converting and returning base64 as callback\r\n    convertFileToBase64 = (file, cb) => {\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        setTimeout(() => { cb(reader.result) }, 2000)\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state)\r\n        return (\r\n            <div className=\"container-fluid main-popUp\">\r\n                <div className='main-popUp'>\r\n                    <div className=\"card-header text-center createheader\">Notification</div>\r\n                    <div className=\"card-body cardbody\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md col-sm\">\r\n                                <label><strong>Geography</strong></label>\r\n                                <select className=\"form-control\"\r\n                                    value={this.state.geography}\r\n                                    onChange={(e) => this.setState({ geography: e.target.value })}>\r\n                                    <option value=\"\" disabled>Choose from dropdown</option>\r\n                                    {geo && geo.map((opt) => {\r\n                                        return (\r\n                                            <option key={opt}>{opt}</option>\r\n                                        )\r\n                                    })}\r\n\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-md col-sm\">\r\n                                <label><strong>Category</strong></label>\r\n                                <select className=\"form-control\"\r\n                                    value={this.state.category}\r\n                                    onChange={(e) => this.handleChangeType(e)}>\r\n                                    <option value=\"\" disabled>Choose from dropdown</option>\r\n                                    {this.state.types && this.state.types.map((opt) => {\r\n                                        return (\r\n                                            <option key={opt}>{opt}</option>\r\n                                        )\r\n                                    })}\r\n                                    <option>Others</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-md col-sm\">\r\n                                <label><strong>Portals & Dashboard</strong></label>\r\n                                <select className=\"form-control\"\r\n                                    value={this.state.subCategory}\r\n                                    onChange={(e) => this.SubCategory(e)}>\r\n                                    <option value=\"\" disabled>Choose from dropdown</option>\r\n                                    {this.state.sections && this.state.sections.map((opt) => {\r\n                                        return (\r\n                                            <option key={opt}>{opt}</option>\r\n                                        )\r\n                                    })}\r\n\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"col-md col-sm\">\r\n                                <label><strong>Reason</strong></label>\r\n                                <select className=\"form-control\"\r\n                                    value={this.state.reason}\r\n                                    onChange={(e) => this.setState({ reason: e.target.value })}>\r\n                                    <option value=\"\" disabled>Choose from dropdown</option>\r\n                                    {Reason && Reason.map((opt) => {\r\n                                        return (\r\n                                            <option key={opt}>{opt}</option>\r\n                                        )\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"col-md col-sm\">\r\n                                <label><strong>Audience</strong></label>\r\n                                <select className=\"form-control\"\r\n                                    value={this.state.audience}\r\n                                    onChange={(e) => this.handleAudience(e.target.value)}\r\n                                >\r\n                                    <option value=\"\" disabled>Choose from dropdown</option>\r\n                                    {this.state.audienceArr && this.state.audienceArr.map((opt) => {\r\n                                        return (\r\n                                            <option key={opt}>{opt}</option>\r\n                                        )\r\n                                    })}\r\n                                    <option key={\"manual\"}>Manual</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        {this.state.audience === \"Manual\" &&\r\n                            <div className=\"row mt-3\">\r\n                                <div className=\"col-sm col-md\">\r\n                                    <label><strong>Enter Mail IDs</strong></label>\r\n                                    <textarea\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Enter email ids ex:(jsmith@xx.ibm.com , jhon@in.ibm.com)\"\r\n                                        value={this.state.emailids}\r\n                                        onChange={e => this.setState({ emailids: e.target.value })}\r\n                                        type=\"text\"\r\n                                        rows=\"3\"></textarea>\r\n                                </div>\r\n                            </div>}\r\n                    </div>\r\n                    <br />\r\n                    {this.state.reason !== \"\" &&\r\n                        <div className=\"card main-card\">\r\n                            <div className=\"card-header text-center createheader\">Notification</div>\r\n                            <div className=\"card-body cardbody\">\r\n\r\n                                <div className=\"row mt-3\">\r\n                                    <div className=\"col-md col-sm\">\r\n                                        <label><strong>Start Date and Time</strong></label>\r\n                                        <DatePicker\r\n                                            selected={this.state.displayStart}\r\n                                            className=\"form-control\"\r\n                                            onChange={date => {\r\n                                                this.setState({ displayStart: date })\r\n                                                this.setState({ start: this.handleInputDate(date) })\r\n                                            }}\r\n                                            locale=\"en\"\r\n                                            showTimeSelect\r\n                                            timeFormat=\"p\"\r\n                                            timeIntervals={1}\r\n                                            dateFormat=\"Pp\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col-md col-sm\">\r\n                                        <label><strong>End Date and Time</strong></label>\r\n                                        <DatePicker\r\n                                            selected={this.state.displayEnd}\r\n                                            className=\"form-control\"\r\n                                            onChange={date => {\r\n                                                this.setState({ displayEnd: date })\r\n                                                this.setState({ end: this.handleInputDate(date) })\r\n                                            }}\r\n                                            locale=\"en\"\r\n                                            showTimeSelect\r\n                                            timeFormat=\"p\"\r\n                                            timeIntervals={1}\r\n                                            dateFormat=\"Pp\"\r\n                                            minDate={this.state.displayStart}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row mt-3\">\r\n                                    <div className=\"col-sm col-md\">\r\n                                        <label><strong>Description</strong></label>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Description\"\r\n                                            value={this.state.description}\r\n                                            onChange={e => this.setState({ description: e.target.value })}\r\n                                            type=\"text\"\r\n                                            rows=\"6\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n                                {this.state.sendAs !== \"slack\" && <div className=\"row mt-3\">\r\n                                    <div className=\"col-sm col-md\">\r\n                                        <label><strong>Attach Files</strong></label>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            id=\"input-file2\"\r\n                                            onClick={e => { e.target.value = null; this.setState({ selectedFile: [] }) }}\r\n                                            className=\"form-control-file\"\r\n                                            onChange={this.onFileChange}\r\n                                            multiple />\r\n                                    </div>\r\n                                </div>}\r\n                            </div>\r\n\r\n                            <div className=\"card-footer createfooter\">\r\n                                <button className=\"btn btu-submit\"\r\n                                    onClick={e => this.saveInfo()}\r\n                                    disabled={this.state.fileLoading}>Send</button>\r\n                                <div className=\"form-group row\">\r\n                                    <label className=\"col-md-1 col-sm-1 sendvia-label\"><strong>Send Via</strong></label>\r\n                                    <select className=\"form-control col-md-2 col-sm-2\"\r\n                                        value={this.state.sendAs}\r\n                                        onChange={(e) => this.setState({ sendAs: e.target.value })}>\r\n                                        <option value=\"\" disabled>Choose from dropdown</option>\r\n                                        <option value=\"email\">Email</option>\r\n                                        <option value=\"slack\">Slack</option>\r\n                                        <option value=\"email_slack\">Email & Slack</option>\r\n\r\n                                    </select>\r\n                                </div>\r\n                                {this.state.spinnerFlag === true && <div className=\"text-center\">\r\n                                    <div className=\"spinner-border\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                </div>}\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <Snackbar\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                    open={this.state.err}\r\n                    className='snacking'\r\n                    message={this.state.errorMsg}\r\n                />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    issueTypes: state.page.issueTypes,\r\n    notification: state.page.notification,\r\n    user_details: state.user.user_details\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    actions: bindActionCreators(AllActions, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmailPopUp);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getAllNotification } from '../actions/index';\r\nimport { bindActionCreators } from 'redux';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { Modal } from 'react-bootstrap';\r\nimport '../styles/Issue.css';\r\n\r\nconst columns = [\r\n    // {\r\n    //     name: \"AUDIENCE\",\r\n    //     label: \"Audience\",\r\n    //     options: {\r\n    //         filter: true,\r\n    //         sort: true,\r\n    //     }\r\n    // },\r\n    {\r\n        name: \"DATE_TIME\",\r\n        label: \"Date & Time\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n    {\r\n        name: \"DESCRIPTION\",\r\n        label: \"Description\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    }, {\r\n        name: \"GEOGRAPHY\",\r\n        label: \"Geography\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n    {\r\n        name: \"ISSUE_CATEGORY\",\r\n        label: \"Issue Category\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n    {\r\n        name: \"ISSUE_TYPE\",\r\n        label: \"Issue Type\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n    {\r\n        name: \"REASONS\",\r\n        label: \"Reasons\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n    {\r\n        name: \"USER\",\r\n        label: \"Users\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n]\r\n\r\nclass AllNotification extends Component {\r\n    state = {\r\n        tableData: [],\r\n        show: false\r\n    }\r\n    UNSAFE_componentWillMount() {\r\n        this.props.actions.getAllNotification()\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.allNotification !== this.props.allNotification) {\r\n            if (this.props.allNotification && this.props.allNotification.length !== 0) {\r\n                this.setState({ tableData: this.props.allNotification })\r\n            }\r\n        }\r\n    }\r\n    handleClose = () => {\r\n        this.setState({ show: false })\r\n    }\r\n    render() {\r\n        const options = {\r\n            print: false,\r\n            search: true,\r\n            download: false,\r\n            filter: false,\r\n            viewColumns: false,\r\n            filterType: \"dropdown\",\r\n            selectableRows: false,\r\n            pagination: {\r\n                next: \"Next Page\",\r\n                previous: \"Previous Page\",\r\n                rowsPerPage: 10,\r\n                displayRows: \"of\",\r\n            },\r\n            onRowClick: (_, { dataIndex }) => {\r\n                var selected_data = this.state.tableData[dataIndex]\r\n                this.setState({\r\n                    show: true,\r\n                    dateTime: selected_data.DATE_TIME,\r\n                    description: selected_data.DESCRIPTION,\r\n                    geography: selected_data.GEOGRAPHY,\r\n                    issueCategory: selected_data.ISSUE_CATEGORY,\r\n                    issueType: selected_data.ISSUE_TYPE,\r\n                    reasons: selected_data.REASONS,\r\n                    users: selected_data.USER\r\n                })\r\n            },\r\n        };\r\n        return (\r\n            <div className=\"container-fluid NotificationTable\">\r\n                <MUIDataTable\r\n                    title={\"Notifications Log\"}\r\n                    data={this.state.tableData}\r\n                    columns={columns}\r\n                    options={options}\r\n                />\r\n                <Modal show={this.state.show} onHide={e => this.handleClose()} dialogClassName=\"modal-record\" size=\"lg\">\r\n                    <Modal.Header style={{ borderBottom: '5px #0c5bac solid', color: '#0c5bac' }} closeButton>\r\n                        <Modal.Title >{this.state.reasons !== \"\" && this.state.issueCategory !== \"\" ? this.state.reasons + \" - \" + this.state.issueCategory : \"Log\"}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body className='modal_body'>\r\n                        <div className=\"card-body cardbody\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-6 col-md-6\">\r\n                                    <label><strong>Date & Time</strong></label>\r\n                                    <input\r\n                                        readOnly\r\n                                        className=\"form-control\"\r\n                                        value={this.state.dateTime}\r\n                                        type=\"text\"></input>\r\n                                </div>\r\n                                <div className=\"col-sm-6 col-md-6\">\r\n                                    <label><strong>Geography</strong></label>\r\n                                    <input\r\n                                        readOnly\r\n                                        className=\"form-control\"\r\n                                        value={this.state.geography}\r\n                                        type=\"text\"></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-6 col-md-6\">\r\n                                    <label><strong>Issue Category</strong></label>\r\n                                    <input\r\n                                        readOnly\r\n                                        className=\"form-control\"\r\n                                        value={this.state.issueCategory}\r\n                                        type=\"text\"></input>\r\n                                </div>\r\n                                <div className=\"col-sm-6 col-md-6\">\r\n                                    <label><strong>Issue Type</strong></label>\r\n                                    <input\r\n                                        readOnly\r\n                                        className=\"form-control\"\r\n                                        value={this.state.issueType}\r\n                                        type=\"text\"></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-6 col-md-6\">\r\n                                    <label><strong>Reasons</strong></label>\r\n                                    <input\r\n                                        readOnly\r\n                                        className=\"form-control\"\r\n                                        value={this.state.reasons}\r\n                                        type=\"text\"></input>\r\n                                </div>\r\n                                <div className=\"col-sm-6 col-md-6\">\r\n                                    <label><strong>Users</strong></label>\r\n                                    <input\r\n                                        readOnly\r\n                                        className=\"form-control\"\r\n                                        value={this.state.users}\r\n                                        type=\"text\"></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mt-2\">\r\n                                <div className=\"col-sm-12 col-md-12\">\r\n                                    <label><strong>Description</strong></label>\r\n                                    <textarea\r\n                                        className=\"form-control\"\r\n                                        value={this.state.description}\r\n                                        readOnly\r\n                                        type=\"text\"\r\n                                        rows=\"6\"></textarea>\r\n                                </div></div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    allNotification: state.page.allNotification,\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    actions: bindActionCreators({ getAllNotification }, dispatch)\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllNotification);","import { Button, CircularProgress, Grid, TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useSelector } from 'react-redux'\r\nimport axios from 'axios';\r\n\r\n// const serverUrl = 'http://localhost:8181'\r\nconst serverUrl = ''\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        margin: theme.spacing(3),\r\n        width: '100%',\r\n    },\r\n    button: {\r\n        margin: 'auto',\r\n        display: 'block',\r\n        backgroundColor: '#0c5bac'\r\n    },\r\n    progress: {\r\n        margin: '10px auto',\r\n        display: 'block',\r\n        color: '#0c5bac',\r\n\r\n    },\r\n    errorInput: {\r\n        fontSize: '18px',\r\n        color: 'red',\r\n        fontWeight: 600,\r\n        margin: '10px auto',\r\n        display: 'block',\r\n        textAlign: 'center'\r\n    }\r\n}));\r\n\r\nexport const ActionLog = (props) => {\r\n    const classes = useStyles();\r\n    const [fromDate, setfromDate] = useState(new Date());\r\n    const [toDate, settoDate] = useState(new Date());\r\n    const [loading, setloading] = useState(false)\r\n    const [errorMessage, seterrorMessage] = useState(\"\")\r\n\r\n    const userDetails = useSelector(state => state.user.user_details);\r\n    const handleFromDateChange = (date) => {\r\n        setfromDate(date.target.value);\r\n        seterrorMessage(\"\")\r\n    };\r\n    const handleToDateChange = (date) => {\r\n        settoDate(date.target.value);\r\n        seterrorMessage(\"\")\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        setloading(true)\r\n        seterrorMessage(\"\")\r\n        axios.post(serverUrl + '/api/v1/actionData', {\r\n            \"fromDate\": fromDate,\r\n            \"toDate\": toDate,\r\n            \"loggedinUser\": userDetails.username,\r\n            \"email\": userDetails.userEmail,\r\n        })\r\n            .then((response) => {\r\n                // console.log(response)\r\n                if (response.status === 200 && response.data.message === \"Action Log Retreived\") {\r\n                    var items = response.data.data.length > 0 ? response.data.data.reverse() : response.data.data;\r\n                    const replacer = (key, value) => value === null ? '' : value; // specify how you want to handle null values here\r\n                    const header = Object.keys(items[0]);\r\n                    let csv = items.map(row => header.map(fieldName => JSON.stringify(row[fieldName], replacer)).join(','));\r\n\r\n                    csv.unshift(header.join(','));\r\n                    csv = csv.join('\\r\\n');\r\n                    setloading(false)\r\n\r\n                    //Download the file as CSV\r\n                    var downloadLink = document.createElement(\"a\");\r\n                    var blob = new Blob([\"\\ufeff\", csv]);\r\n                    var url = URL.createObjectURL(blob);\r\n                    downloadLink.href = url;\r\n                    downloadLink.download = `WS3 Ticketing ${fromDate} to ${toDate} Action Logs.csv`;  //Name the file here\r\n                    document.body.appendChild(downloadLink);\r\n                    downloadLink.click();\r\n                    document.body.removeChild(downloadLink);\r\n                }\r\n                else {\r\n                    setloading(false);\r\n                    seterrorMessage(\"Change Date and Try Again\");\r\n                }\r\n            }).catch(err => {\r\n                setloading(false);\r\n                seterrorMessage(\"Change Date and Try Again\");\r\n            })\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"card main-card\">\r\n                <div className=\"card-header text-center createheader\">Select Date Range To Download Activity Log</div>\r\n                <div className=\"card-body cardbody\">\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                        spacing={4}\r\n                    >\r\n                        <Grid container item xs={3} spacing={0}></Grid>\r\n                        <Grid container item xs={3} spacing={0}>\r\n                            <TextField\r\n                                id=\"date\"\r\n                                label=\"From Date\"\r\n                                type=\"date\"\r\n                                value={fromDate}\r\n                                onChange={handleFromDateChange}\r\n                                className={classes.textField}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid container item xs={3} spacing={0}>\r\n                            <TextField\r\n                                id=\"date\"\r\n                                label=\"To Date\"\r\n                                type=\"date\"\r\n                                value={toDate}\r\n                                onChange={handleToDateChange}\r\n                                className={classes.textField}\r\n                                inputProps={{ min: fromDate }}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid container item xs={3} spacing={0}></Grid>\r\n                    </Grid>\r\n                    <Button className={classes.button} onClick={handleSubmit} variant=\"contained\" color=\"primary\">Get Log</Button>\r\n                    {loading === true && <CircularProgress className={classes.progress} />}\r\n                    {errorMessage !== \"\" && <span className={classes.errorInput}>{errorMessage}</span>}\r\n                </div>\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nexport const Dashboard = (props) => {\r\n    return (\r\n        <div>\r\n            <iframe src=\"https://app.powerbi.com/reportEmbed?reportId=b821eebf-d96f-4c22-bdde-3961058e8361&autoAuth=true&ctid=c28301bb-e8ea-480b-a82a-cf3553901822&config=eyJjbHVzdGVyVXJsIjoiaHR0cHM6Ly93YWJpLWluZGlhLWNlbnRyYWwtYS1wcmltYXJ5LXJlZGlyZWN0LmFuYWx5c2lzLndpbmRvd3MubmV0LyJ9\" title=\"Self D\" width='100%' height='720' frameBorder=\"0\" allowFullScreen={true}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)\r\n","\r\nimport React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary } from '@material-ui/core';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\r\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport CreateIncident from \"./CreateIncident\";\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Allincidents from \"./Allincidents\";\r\nimport Issue from \"./Issue\";\r\nimport ViewListIcon from '@material-ui/icons/ListAlt';\r\nimport Profiles from \"./Profiles\";\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport FooterPage from \"./Footer\";\r\nimport LowPriority from '@material-ui/icons/LowPriority';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Addissue from \"./Addissue\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport Upload from \"./Upload\";\r\nimport { IdleTimeOutModal } from './IdleModal'\r\nimport IdleTimer from 'react-idle-timer';\r\nimport Notification from './Notification'\r\nimport PopUpNotification from \"./PopUpNotification\";\r\nimport EmailPopUp from \"./EmailPopUp\";\r\nimport NotificationImportantIcon from '@material-ui/icons/NotificationImportant';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport AllNotification from \"./AllNotification\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { changeMenu } from '../actions/index';\r\nimport '../../src/App.css';\r\nimport '../styles/Footer.css';\r\nimport { ActionLog } from \"./ActionLog\";\r\nimport { Dashboard } from \"./Dashboard\";\r\n\r\n\r\nconst drawerWidth = 280;\r\n\r\nconst menusOptions = [\r\n  {\r\n    title: \"Raise New Ticket\",\r\n    icon: <NoteAddIcon />\r\n  }, {\r\n    title: \"My Ticket Logs\",\r\n    icon: <ListIcon />\r\n  }\r\n]\r\nconst TechOptions = [\r\n  {\r\n    title: \"Raise New Ticket\",\r\n    icon: <NoteAddIcon />\r\n  },\r\n  {\r\n    title: \"My Ticket Logs\",\r\n    icon: <ListIcon />\r\n  },\r\n  {\r\n    title: \"My Queue\",\r\n    icon: <LowPriority />\r\n  }\r\n]\r\nconst SadminOptions = [\r\n  {\r\n    title: \"Raise New Ticket\",\r\n    icon: <NoteAddIcon />,\r\n    route: '/new-ticket'\r\n  },\r\n  {\r\n    title: \"My Ticket Logs\",\r\n    icon: <ListIcon />,\r\n    route: '/my-tickets'\r\n  },\r\n  {\r\n    title: \"All Ticket Logs\",\r\n    icon: <ViewListIcon />,\r\n    route: '/all-tickets'\r\n  },\r\n  {\r\n    title: \"Command Center\",\r\n    icon: < AssessmentIcon />,\r\n    route: '/dashboard'\r\n  },\r\n  {\r\n    title: \"Profiles\",\r\n    icon: <GroupIcon />,\r\n    route: '/profile'\r\n  },\r\n  {\r\n    title: \"Additional Tool Set\",\r\n    sections: [\r\n      {\r\n        name: \"Notification\",\r\n        tabs: [\r\n          { sub: 'Email Notification' },\r\n          { sub: 'Pop-Up Notification' },\r\n          { sub: 'Email & Pop-Up' }\r\n        ],\r\n        icon: <NotificationsNoneIcon />\r\n      },\r\n      {\r\n        name: \"Adding Issues\",\r\n        tabs: [],\r\n        icon: <AddIcon />\r\n      }\r\n    ],\r\n    icon: <DashboardIcon />,\r\n    route: '/tools'\r\n  },\r\n  {\r\n    title: \"Upload\",\r\n    icon: <CloudUploadIcon />,\r\n    route: '/upload'\r\n  },\r\n  {\r\n    title: \"All Notifications\",\r\n    icon: <NotificationImportantIcon />,\r\n    route: '/notification-log'\r\n  },\r\n  {\r\n    title: \"Activity Log\",\r\n    icon: <SystemUpdateAltIcon />,\r\n    route: '/action-log'\r\n  }\r\n]\r\nconst SuserOptions = [\r\n  {\r\n    title: \"Raise New Ticket\",\r\n    icon: <NoteAddIcon />,\r\n    route: '/new-ticket'\r\n  },\r\n  {\r\n    title: \"My Ticket Logs\",\r\n    icon: <ListIcon />,\r\n    route: '/my-tickets'\r\n  },\r\n  {\r\n    title: \"All Ticket Logs\",\r\n    icon: <ViewListIcon />,\r\n    route: '/all-tickets'\r\n  },\r\n  {\r\n    title: \"Profiles\",\r\n    icon: <GroupIcon />,\r\n    route: '/profile'\r\n  },\r\n  {\r\n    title: \"Additional Tool Set\",\r\n    sections: [\r\n      {\r\n        name: \"Notification\",\r\n        tabs: [\r\n          { sub: 'Email Notification' },\r\n          { sub: 'Pop-Up Notification' },\r\n          { sub: 'Email & Pop-Up' }\r\n        ],\r\n        icon: <NotificationsNoneIcon />\r\n      },\r\n      {\r\n        name: \"Adding Issues\",\r\n        tabs: [],\r\n        icon: <AddIcon />\r\n      }\r\n    ],\r\n    icon: <DashboardIcon />,\r\n    route: '/tools'\r\n  }\r\n]\r\nconst AdminOptions = [\r\n  {\r\n    title: \"Raise New Ticket\",\r\n    icon: <NoteAddIcon />\r\n  },\r\n  {\r\n    title: \"My Ticket Logs\",\r\n    icon: <ListIcon />\r\n  },\r\n  {\r\n    title: \"Profiles\",\r\n    icon: <PersonAddIcon />\r\n  },\r\n]\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  appBar1: {\r\n    marginTop: '60px',\r\n    backgroundColor: 'black !important',\r\n  },\r\n  appBarShift1: {\r\n    marginLeft: drawerWidth,\r\n    marginTop: '50px',\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    backgroundColor: 'black !important',\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    zIndex: 100\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    zIndex: 100,\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    backgroundColor: 'black',\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n})\r\nclass Header extends Component {\r\n\r\n\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      timeout: 1000 * 300 * 1,\r\n      showModal: false,\r\n      userLoggedIn: false,\r\n      isTimedOut: false,\r\n      open: true,\r\n      menu: 'Raise New Ticket',\r\n      name: \"rightopen\",\r\n      options: \"\",\r\n      menus: '',\r\n      sub_tab: [],\r\n      tab: \"\"\r\n    }\r\n\r\n    this.idleTimer = null\r\n    this.onAction = this._onAction.bind(this)\r\n    this.onActive = this._onActive.bind(this)\r\n    this.onIdle = this._onIdle.bind(this)\r\n    this.handleClose = this._handleClose.bind(this)\r\n  }\r\n\r\n  _onAction(e) {\r\n    this.setState({ isTimedOut: false })\r\n  }\r\n\r\n  _onActive(e) {\r\n    this.setState({ isTimedOut: false })\r\n  }\r\n\r\n  _onIdle(e) {\r\n    const isTimedOut = this.state.isTimedOut\r\n\r\n    if (isTimedOut === true) {\r\n      this.setState({ showModal: false })\r\n      window.location.reload()\r\n      // this.props.history.push('/')\r\n    } else {\r\n      this.setState({ showModal: true })\r\n      this.idleTimer.reset();\r\n      this.setState({ isTimedOut: true })\r\n    }\r\n\r\n  }\r\n\r\n  _handleClose() {\r\n    this.setState({ showModal: false })\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    if (this.props.user_details.role === \"User\") {\r\n      this.setState({ options: menusOptions })\r\n    }\r\n    else if (this.props.user_details.role === \"SME\") {\r\n      this.setState({ options: TechOptions })\r\n    }\r\n    else if (this.props.user_details.role === \"Super Admin\") {\r\n      this.setState({ options: SadminOptions })\r\n    }\r\n    else if (this.props.user_details.role === \"Admin\") {\r\n      this.setState({ options: AdminOptions })\r\n    }\r\n    else if (this.props.user_details.role === \"Super User\") {\r\n      this.setState({ options: SuserOptions })\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.menuData !== this.props.menuData && this.props.menuData.length !== 0) {\r\n      this.handleMenu(this.props.menuData)\r\n      setTimeout(() => {\r\n        this.props.actions.changeMenu('')\r\n      }, 2000)\r\n    }\r\n  }\r\n  //logout function\r\n  handleLogout() {\r\n    window.location.reload('/');\r\n  }\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true, name: \"rightopen\", tabs: \"\" });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false, name: \"rightclose\", tabs: \"tabClose\" });\r\n  };\r\n  handleMenu = (menu) => {\r\n    if (menu !== \"Additional Tool Set\") {\r\n      this.setState({ menu: menu, menus: \"\", expandedPanel: \"\", sub_tab: [], tab: \"\" })\r\n    } else {\r\n      this.setState({ menu: menu })\r\n    }\r\n  }\r\n  handleExpansionPanelChange = (panel) => (event, isExpanded) => {\r\n    var selectedItem;\r\n    if (panel === 'Additional Tool Set') {\r\n      selectedItem = 'Notification'\r\n    }\r\n    // else {\r\n    //   selectedItem = 'Home'\r\n    // }\r\n    let a = this.state.options\r\n      .filter(x => x.title === panel)\r\n      .map(y => y.sections ? y.sections : [])\r\n    let b = a[0]\r\n      .filter(u => u.name && u.name === selectedItem)\r\n      .map(i => i.tabs ? i.tabs : [])\r\n\r\n    if (isExpanded) {\r\n      this.setState({ expandedPanel: panel, menu: panel, menus: selectedItem, sub_tab: b[0], tab: b[0].length > 0 ? b[0][0].sub : \"\" })\r\n    }\r\n    else {\r\n      this.setState({ expandedPanel: false, menu: \"\", sub_tab: [], tab: \"\" })\r\n    }\r\n  };\r\n  handleMenus = (menus) => {\r\n    let a = this.state.options\r\n      .filter(x => x.title === this.state.expandedPanel)\r\n      .map(y => y.sections ? y.sections : [])\r\n    let b = a[0]\r\n      .filter(u => u.name && u.name === menus)\r\n      .map(i => i.tabs ? i.tabs : [])\r\n\r\n    this.setState({ menus: menus, sub_tab: b[0], tab: b[0].length > 0 ? b[0][0].sub : \"\" })\r\n  }\r\n  subTabChange = (sub) => {\r\n    this.setState({ tab: sub })\r\n  }\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n    const { open, options } = this.state;\r\n    // console.log(this.props)\r\n    // console.log(this.state)\r\n    return (\r\n      <div>\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <AppBar\r\n            position=\"fixed\"\r\n            className={clsx(classes.appBar, {\r\n              [classes.appBarShift]: open,\r\n            })}\r\n          >\r\n            <Toolbar>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={this.handleDrawerOpen}\r\n                edge=\"start\"\r\n                className={clsx(classes.menuButton, {\r\n                  [classes.hide]: open,\r\n                })}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\" noWrap className=\"heading\">CPSD SelfDesk</Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n\r\n          {this.state.sub_tab.length !== 0 &&\r\n            <AppBar\r\n              position=\"fixed\"\r\n              className={clsx(classes.appBar1, {\r\n                [classes.appBarShift1]: open,\r\n              })}\r\n            >\r\n              <Toolbar className={this.state.tabs}>\r\n                {this.state.sub_tab && this.state.sub_tab.map((opt) => {\r\n                  return (\r\n                    <button key={opt.sub} className={this.state.tab === opt.sub ? 'activeclass' : 'nonactiveclass'}\r\n                      onClick={e => this.subTabChange(opt.sub)}\r\n                    >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{opt.sub}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>\r\n                  )\r\n                })}\r\n              </Toolbar>\r\n            </AppBar>}\r\n\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            className={clsx(classes.drawer, {\r\n              [classes.drawerOpen]: open,\r\n              [classes.drawerClose]: !open,\r\n            })}\r\n            classes={{\r\n              paper: clsx({\r\n                [classes.drawerOpen]: open,\r\n                [classes.drawerClose]: !open,\r\n              }),\r\n            }}\r\n          >\r\n            <div className={classes.toolbar}>\r\n              <IconButton onClick={this.handleDrawerClose}><h6 className=\"menu-heading\">Menu</h6>\r\n                {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon className=\"icon-color\" />}\r\n              </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List className='main-uiList'>\r\n              {options && options.map((opt, index) => (\r\n                <div key={opt.title}>\r\n                  {opt.title !== \"Additional Tool Set\" ?\r\n                    <ListItem button className={this.state.menu === opt.title ? 'listactiveclass' : 'listnonactiveclass'} key={opt.title} onClick={e => this.handleMenu(opt.title)}>\r\n                      <ListItemIcon>{opt.icon}</ListItemIcon>\r\n                      <ListItemText primary={opt.title} />\r\n                    </ListItem>\r\n                    :\r\n                    <ExpansionPanel expanded={this.state.expandedPanel === \"Additional Tool Set\"} onChange={this.handleExpansionPanelChange(opt.title)} className='head-acc'>\r\n                      {this.state.open === true ?\r\n                        <ExpansionPanelSummary expandIcon={<ExpandMore />} onClick={e => this.handleMenu(opt.title)} className='acc_summ'>\r\n                          {opt.icon}&nbsp;&nbsp;&nbsp;   {opt.title}\r\n\r\n                        </ExpansionPanelSummary>\r\n                        :\r\n                        <ExpansionPanelSummary expandIcon={<ExpandMore />} onClick={e => this.handleMenu(opt.title)}>\r\n                          {opt.icon}\r\n\r\n                        </ExpansionPanelSummary>\r\n                      }\r\n                      <ExpansionPanelDetails className='acc_details'>\r\n                        <List>\r\n                          {opt.sections && opt.sections.length > 0 && opt.sections.map((el, index) => (\r\n                            <ListItem className={this.state.menus === el.name ? 'listactiveclass' : 'listnonactiveclass'} button key={el.name} onClick={e => this.handleMenus(el.name)}>\r\n                              <ListItemIcon>{el.icon}</ListItemIcon>\r\n                              <ListItemText primary={el.name} />\r\n                            </ListItem>\r\n                          ))}\r\n                        </List>\r\n                      </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                  }\r\n                </div>\r\n              ))}\r\n              <ListItem button onClick={e => this.handleLogout()}>\r\n                <ListItemIcon><PowerSettingsNewIcon /></ListItemIcon>\r\n                <ListItemText primary=\"Logout\" ></ListItemText>\r\n              </ListItem>\r\n              {this.props.user_details.username !== \"\" ? <ListItem button className='profilemain'>\r\n                <ListItemIcon className='profile-ico'><AccountCircleIcon /></ListItemIcon>\r\n                <div className='profile-name'>\r\n                  <ListItemText primary={this.props.user_details.username} ></ListItemText>\r\n                  <ListItemText primary={\" (\" + this.props.user_details.role + \")\"} ></ListItemText>\r\n                </div>\r\n              </ListItem> : \"\"}\r\n            </List>\r\n          </Drawer>\r\n        </div>\r\n        <IdleTimer\r\n          ref={ref => { this.idleTimer = ref }}\r\n          element={document}\r\n          onActive={this.onActive}\r\n          onIdle={this.onIdle}\r\n          onAction={this.onAction}\r\n          debounce={250}\r\n          timeout={this.state.timeout} />\r\n        <div className={this.state.name}>\r\n          {this.state.menu === \"Command Center\" && <Dashboard />}\r\n          {this.state.menu === \"Raise New Ticket\" && <CreateIncident />}\r\n          {this.state.menu === \"My Ticket Logs\" && <Issue />}\r\n          {(this.state.menu === \"My Queue\" || this.state.menu === \"All Ticket Logs\") && <Allincidents />}\r\n          {(this.state.menu === \"Profiles\") && <Profiles />}\r\n          {(this.state.menu === \"Upload\") && <Upload />}\r\n          {(this.state.menu === \"All Notifications\") && <AllNotification />}\r\n\r\n          {(this.state.menu === \"Additional Tool Set\" && this.state.menus === \"Notification\" && this.state.tab === \"Email Notification\" && <Notification />)}\r\n          {(this.state.menu === \"Additional Tool Set\" && this.state.menus === \"Notification\" && this.state.tab === \"Pop-Up Notification\" && <PopUpNotification />)}\r\n          {(this.state.menu === \"Additional Tool Set\" && this.state.menus === \"Notification\" && this.state.tab === \"Email & Pop-Up\" && <EmailPopUp />)}\r\n\r\n          {(this.state.menu === \"Additional Tool Set\" && this.state.menus === \"Adding Issues\" && <Addissue />)}\r\n\r\n          {(this.state.menu === \"Activity Log\") && <ActionLog />}\r\n        </div>\r\n        <IdleTimeOutModal\r\n          showModal={this.state.showModal}\r\n          handleClose={this.handleClose}\r\n          handleLogout={this.handleLogout}\r\n        />\r\n        <FooterPage />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = state => ({\r\n  user_details: state.user.user_details,\r\n  menuData: state.page.menuData,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators({ changeMenu }, dispatch)\r\n});\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(Header)))\r\n","import React, { Component } from 'react'\r\nimport propTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { changeMenu, getAllIssues } from '../actions/index'\r\n\r\nclass ReviewTicket extends Component {\r\n\r\n    render() {\r\n        // console.log(this.props)\r\n        const { ticketRecord } = this.props;\r\n        return (\r\n            <div style={{ width: '100%' }}>\r\n                <h3>Ticket Details:</h3>\r\n                {ticketRecord.length > 0 ? < table >\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Ticket Number:</td>\r\n                            <td>{ticketRecord[0].hasOwnProperty('TICKET_NO') ? ticketRecord[0].TICKET_NO : \"\"}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Issue Raised By:</td>\r\n                            <td>{ticketRecord[0].hasOwnProperty('PRACTIONER') ? ticketRecord[0].PRACTIONER : \"\"}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Status:</td>\r\n                            <td>{ticketRecord[0].hasOwnProperty('STATUS') ? ticketRecord[0].STATUS : \"\"}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Description:</td>\r\n                            <td>{ticketRecord[0].hasOwnProperty('DESCRIPTION') ? ticketRecord[0].DESCRIPTION : \"\"}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Section:</td>\r\n                            <td>{ticketRecord[0].hasOwnProperty('SECTION') ? ticketRecord[0].SECTION : \"\"}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Created Date:</td>\r\n                            <td>{ticketRecord[0].hasOwnProperty('CREATED_DATE') ? ticketRecord[0].CREATED_DATE : \"\"}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>TAT:</td>\r\n                            <td>{ticketRecord[0].hasOwnProperty('TAT') ? ticketRecord[0].TAT : \"\"}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                    :\r\n                    \"Ticket Not Found.\"}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nReviewTicket.propTypes = {\r\n    steps: propTypes.object,\r\n};\r\n\r\nReviewTicket.defaultProps = {\r\n    steps: undefined,\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    ticketRecord: state.page.ticketRecord,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    actions: bindActionCreators({ changeMenu, getAllIssues }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReviewTicket);","import axios from 'axios';\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport ChatBot from 'react-simple-chatbot';\r\nimport { bindActionCreators } from 'redux';\r\nimport { changeMenu, fetchTicketByNumber } from '../actions/index';\r\nimport ReviewTicket from './ReviewTicket';\r\nimport '../styles/chatbot.css';\r\n\r\n// const serverUrl = 'http://localhost:8181';\r\nconst serverUrl = '';\r\nclass SimpleBot extends Component {\r\n    state = {\r\n        chatbotKey: 0\r\n    }\r\n    componentDidMount() {\r\n        this.handleEnd = this.handleEnd.bind(this);\r\n    }\r\n\r\n    handleEnd({ steps, values }) {\r\n        this.setState((prevState) => ({\r\n            chatbotKey: prevState.chatbotKey + 1\r\n        }));\r\n    }\r\n    render() {\r\n        // console.log(this.state)\r\n        return (\r\n            <div>\r\n                <ChatBot\r\n                    headerTitle=\"Chat Support\"\r\n                    floating={true}\r\n                    handleEnd={this.handleEnd}\r\n                    key={this.state.chatbotKey}\r\n                    steps={[\r\n                        {\r\n                            id: 'initilize',\r\n                            message: 'Hello, What would you like me to do?',\r\n                            trigger: ({ value, steps }) => {\r\n                                return 'main-option'\r\n                            },\r\n                        },\r\n                        {\r\n                            id: 'main-option',\r\n                            options: [\r\n                                { value: 'raise-query', label: 'Raise Query', trigger: 'raise-query' },\r\n                                { value: 'my-queue', label: 'Tickets in Queue', trigger: 'my-queue' },\r\n                                { value: 'my-tickets', label: 'Tickets Raised', trigger: 'my-ticket' },\r\n                                { value: 'ticket-status', label: 'Check Ticket Status ', trigger: 'ticket-status' },\r\n                            ]\r\n                        },\r\n                        {\r\n                            id: 'raise-query',\r\n                            message: 'You are in Raise Ticket Page!',\r\n                            trigger: ({ value, steps }) => {\r\n                                this.props.actions.changeMenu('Raise New Ticket');\r\n                                return 'initilize'\r\n                            },\r\n                        },\r\n                        {\r\n                            id: 'my-queue',\r\n                            message: 'You are in My Ticket page',\r\n                            trigger: ({ value, steps }) => {\r\n                                this.props.actions.changeMenu('My Ticket Logs');\r\n                                return 'initilize'\r\n                            },\r\n                        },\r\n                        {\r\n                            id: 'my-ticket',\r\n                            message: 'You are in My Queue page',\r\n                            trigger: ({ value, steps }) => {\r\n                                this.props.actions.changeMenu('All Ticket Logs');\r\n                                return 'initilize'\r\n                            },\r\n                        },\r\n                        {\r\n                            id: 'ticket-status',\r\n                            message: 'Enter Ticket Number: ',\r\n                            trigger: 'get-ticket'\r\n\r\n                        },\r\n                        {\r\n                            id: 'get-ticket',\r\n                            user: true,\r\n                            // trigger: 'fetch-ticket',\r\n                            validator: (value) => {\r\n                                if (isNaN(value)) {\r\n                                    return 'Enter valid Ticket Number';\r\n                                }\r\n                                return true;\r\n                            },\r\n                            trigger: ({ value, steps }) => {\r\n                                let data;\r\n                                if ((this.props.user_details.role === 'Super Admin') || (this.props.user_details.role === 'Super User')) {\r\n                                    data = { \"email\": this.props.user_details.userEmail, \"role\": this.props.user_details.role, \"data\": \"getall\" };\r\n                                }\r\n                                else {\r\n                                    data = { \"email\": this.props.user_details.userEmail, \"role\": this.props.user_details.role, \"data\": \"allissues\", category: this.props.user_details.section };\r\n                                }\r\n                                axios.post(serverUrl + '/api/v1/getAllIssues', data)\r\n                                    .then((response) => {\r\n                                        // console.log(response)\r\n                                        if (response.status === 200 && response.data.hasOwnProperty('data') && response.data.data.length > 0) {\r\n                                            this.props.actions.fetchTicketByNumber(value, response.data.data)\r\n                                        }\r\n                                        else {\r\n                                            this.props.actions.fetchTicketByNumber(value, [])\r\n                                        }\r\n                                    })\r\n                                    .catch(error => {\r\n                                        this.props.actions.fetchTicketByNumber(value, [])\r\n                                    });\r\n                                return 'fetch-ticket';\r\n                            },\r\n                        },\r\n                        {\r\n                            id: 'fetch-ticket',\r\n                            component: <ReviewTicket />,\r\n                            asMessage: false,\r\n                            delay: 5000,\r\n                            trigger: \"end-step\"\r\n                        },\r\n                        {\r\n                            id: 'end-step',\r\n                            message: 'Start Chat Again. Thank You!',\r\n                            trigger: \"final-step\"\r\n                        },\r\n                        {\r\n                            id: \"final-step\",\r\n                            delay: 20000,\r\n                            message: '...',\r\n                            end: true\r\n                        }\r\n                    ]}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user_details: state.user.user_details,\r\n    ticketRecord: state.page.ticketRecord,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    actions: bindActionCreators({ changeMenu, fetchTicketByNumber }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SimpleBot);","import React, { Component } from 'react';\r\n\r\nimport { BrowserRouter as Router, Redirect, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport PropTypes from 'prop-types'\r\nimport Login from './components/Login';\r\nimport Header from './components/Header';\r\nimport * as AllActions from './actions'\r\nimport { login } from '../src/actions/index';\r\nimport SimpleBot from './components/SimpleBot';\r\n// import CreateIncident from './components/CreateIncident';\r\n// import Issue from './components/Issue';\r\n// import Allincidents from './components/Allincidents';\r\n// import Upload from './components/Upload';\r\n// import Notification from './components/Notification';\r\n// import AllNotification from './components/AllNotification';\r\n// import Profiles from './components/Profiles';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    const { user } = this.props;\r\n    // if (user && user.isLoginSuccess === true) {\r\n    //   return (\r\n    //     <Router >\r\n    //       <Route exact path='/' component={Header}></Route>\r\n    //     </Router>\r\n    //   )\r\n    // }\r\n    // return (\r\n    //   <Router >\r\n    //     <Route exact path='/' component={Login}></Route>\r\n    //   </Router>\r\n    // );\r\n\r\n    // return (\r\n    //   <div className='main-app'>\r\n    //     <Router>\r\n    //       <Switch>\r\n    //         <Route exact path=\"/\" render={() => (<Redirect to=\"/login\" />)} />\r\n    //         <Route exact path=\"/login\" exact component={Login} />\r\n    //         {/* <Route exact path=\"/new-ticket\" exact component={CreateIncident} />\r\n    //         <Route exact path=\"/my-tickets\" exact component={Issue} />\r\n    //         <Route exact path=\"/all-tickets\" exact component={Allincidents} />\r\n    //         <Route exact path=\"/profile\" exact component={Profiles} />\r\n    //         <Route exact path=\"/upload\" exact component={Upload} />\r\n    //         <Route exact path=\"/tools\" exact component={Notification} />\r\n    //         <Route exact path=\"/notification-log\" exact component={AllNotification} /> */}\r\n    //       </Switch>\r\n    //     </Router>\r\n    //   </div>\r\n    // )\r\n\r\n    if (user && user.isLoginSuccess === true) {\r\n      return (\r\n        <div>\r\n          <Header />\r\n          <SimpleBot />\r\n          <Router >\r\n            {/* <Switch> */}\r\n            {/* <Route exact path=\"/new-ticket\" exact component={CreateIncident} />\r\n              <Route exact path=\"/my-tickets\" exact component={Issue} />\r\n              <Route exact path=\"/all-tickets\" exact component={Allincidents} />\r\n              <Route exact path=\"/profile\" exact component={Profiles} />\r\n              <Route exact path=\"/upload\" exact component={Upload} />\r\n              <Route exact path=\"/tools\" exact component={Notification} />\r\n              <Route exact path=\"/notification-log\" exact component={AllNotification} /> */}\r\n            {/* </Switch> */}\r\n          </Router>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <Router >\r\n          {/* <Route exact path=\"/\" render={() => (<Redirect to=\"/login\" />)} /> */}\r\n          <Route exact path=\"/\" component={Login} />\r\n          <Route exact path=\"**\" render={() => (<Redirect to=\"/\" />)} />\r\n        </Router>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  actions: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n  user: state.user,\r\n  page: state.page,\r\n  isLoginPending: state.user.isLoginPending,\r\n  isLoginSuccess: state.user.isLoginSuccess,\r\n  isLoginError: state.user.isLoginError,\r\n  Success: state.page.Success,\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators({ login }, AllActions, dispatch)\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  // window.location.hostname === 'localhost' ||\r\n  //   // [::1] is the IPv6 localhost address.\r\n  //   window.location.hostname === '[::1]' ||\r\n  //   // 127.0.0.1/8 is considered localhost for IPv4.\r\n  //   window.location.hostname.match(\r\n  //     /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  //   )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nimport rootReducer from '../reducers/index';\r\n\r\nexport default function configureStore(initialState) {\r\n  return createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(ReduxThunk))\r\n  );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import '@fortawesome/fontawesome-free/css/all.min.css';\r\n// import 'bootstrap-css-only/css/bootstrap.min.css';\r\n// import 'mdbreact/dist/css/mdb.css';\r\n// import { render } from 'react-dom';\r\n// import { HashRouter } from 'react-router-dom';\r\n\r\n// import { HashRouter } from 'react-router-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n//Redux dependencies...\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './store/index';\r\n\r\n//Loaded default css and app files...\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n//History and store for redux data retrieved...\r\nimport { createBrowserHistory } from 'history'\r\nexport const history = createBrowserHistory();\r\nconst store = configureStore();\r\n/*React render the app with router-redux via */\r\n//ReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\r\nReactDOM.render(\r\n  <Provider history={history} store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>, document.getElementById('root'));\r\n\r\n// export const history = createBrowserHistory();\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\nserviceWorker.unregister();\r\n","export const SET_LOGIN_PENDING = 'SET_LOGIN_PENDING';\r\nexport const SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';\r\nexport const SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';\r\nexport const LOGOUT='LOGOUT';\r\n"],"sourceRoot":""}